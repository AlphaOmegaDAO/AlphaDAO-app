[{"C:\\alphaomega\\temp33\\src\\index.jsx":"1","C:\\alphaomega\\temp33\\src\\Root.jsx":"2","C:\\alphaomega\\temp33\\src\\store.ts":"3","C:\\alphaomega\\temp33\\src\\hooks\\web3Context.tsx":"4","C:\\alphaomega\\temp33\\src\\App.jsx":"5","C:\\alphaomega\\temp33\\src\\themes\\dark.js":"6","C:\\alphaomega\\temp33\\src\\themes\\light.js":"7","C:\\alphaomega\\temp33\\src\\themes\\girth.js":"8","C:\\alphaomega\\temp33\\src\\slices\\AccountSlice.ts":"9","C:\\alphaomega\\temp33\\src\\slices\\PendingTxnsSlice.ts":"10","C:\\alphaomega\\temp33\\src\\slices\\LusdSlice.ts":"11","C:\\alphaomega\\temp33\\src\\slices\\AppSlice.ts":"12","C:\\alphaomega\\temp33\\src\\slices\\PoolThunk.ts":"13","C:\\alphaomega\\temp33\\src\\slices\\BondSlice.ts":"14","C:\\alphaomega\\temp33\\src\\slices\\MessagesSlice.ts":"15","C:\\alphaomega\\temp33\\src\\components\\Sidebar\\NavDrawer.jsx":"16","C:\\alphaomega\\temp33\\src\\components\\Sidebar\\Sidebar.jsx":"17","C:\\alphaomega\\temp33\\src\\components\\TopBar\\TopBar.jsx":"18","C:\\alphaomega\\temp33\\src\\hooks\\useSegmentAnalytics.js":"19","C:\\alphaomega\\temp33\\src\\helpers\\NodeHelper.ts":"20","C:\\alphaomega\\temp33\\src\\helpers\\Environment.ts":"21","C:\\alphaomega\\temp33\\src\\hooks\\useTheme.ts":"22","C:\\alphaomega\\temp33\\src\\hooks\\Bonds.ts":"23","C:\\alphaomega\\temp33\\src\\helpers\\QueryParameterHelper.ts":"24","C:\\alphaomega\\temp33\\src\\themes\\global.js":"25","C:\\alphaomega\\temp33\\src\\components\\Sidebar\\NavContent.jsx":"26","C:\\alphaomega\\temp33\\src\\components\\TopBar\\ThemeSwitch.jsx":"27","C:\\alphaomega\\temp33\\src\\components\\TopBar\\OhmMenu.jsx":"28","C:\\alphaomega\\temp33\\src\\components\\TopBar\\ConnectMenu.jsx":"29","C:\\alphaomega\\temp33\\src\\themes\\fonts.js":"30","C:\\alphaomega\\temp33\\src\\helpers\\userAnalyticHelpers.js":"31","C:\\alphaomega\\temp33\\src\\components\\Loading\\LoadingSplash.jsx":"32","C:\\alphaomega\\temp33\\src\\components\\Messages\\Messages.jsx":"33","C:\\alphaomega\\temp33\\src\\views\\404\\NotFound.jsx":"34","C:\\alphaomega\\temp33\\src\\constants.ts":"35","C:\\alphaomega\\temp33\\src\\helpers\\OhmLusdCrucible.ts":"36","C:\\alphaomega\\temp33\\src\\helpers\\33Together.ts":"37","C:\\alphaomega\\temp33\\src\\helpers\\AllBonds.ts":"38","C:\\alphaomega\\temp33\\src\\helpers\\BondCalculator.ts":"39","C:\\alphaomega\\temp33\\src\\views\\index.js":"40","C:\\alphaomega\\temp33\\src\\components\\Sidebar\\externalUrls.js":"41","C:\\alphaomega\\temp33\\src\\helpers\\index.tsx":"42","C:\\alphaomega\\temp33\\src\\components\\Messages\\ConsoleInterceptor.js":"43","C:\\alphaomega\\temp33\\src\\views\\33Together\\33Together.jsx":"44","C:\\alphaomega\\temp33\\src\\components\\Sidebar\\Social.jsx":"45","C:\\alphaomega\\temp33\\src\\lib\\Bond.ts":"46","C:\\alphaomega\\temp33\\src\\views\\Bond\\Bond.jsx":"47","C:\\alphaomega\\temp33\\src\\views\\TreasuryDashboard\\TreasuryDashboard.jsx":"48","C:\\alphaomega\\temp33\\src\\views\\TreasuryDashboard\\treasuryData.js":"49","C:\\alphaomega\\temp33\\src\\components\\InfoTooltip\\InfoTooltip.jsx":"50","C:\\alphaomega\\temp33\\src\\components\\Chart\\Chart.jsx":"51","C:\\alphaomega\\temp33\\src\\lib\\apolloClient.js":"52","C:\\alphaomega\\temp33\\src\\components\\TokenSymbol\\TokenSymbol.tsx":"53","C:\\alphaomega\\temp33\\src\\views\\Bond\\BondPurchase.jsx":"54","C:\\alphaomega\\temp33\\src\\views\\Bond\\BondRedeem.jsx":"55","C:\\alphaomega\\temp33\\src\\views\\Bond\\BondHeader.jsx":"56","C:\\alphaomega\\temp33\\src\\components\\TabPanel.jsx":"57","C:\\alphaomega\\temp33\\src\\components\\Chart\\ExpandedChart.jsx":"58","C:\\alphaomega\\temp33\\src\\components\\Chart\\CustomTooltip.jsx":"59","C:\\alphaomega\\temp33\\src\\hooks\\Debounce.ts":"60","C:\\alphaomega\\temp33\\src\\hooks\\useEscape.ts":"61","C:\\alphaomega\\temp33\\src\\views\\Bond\\AdvancedSettings.jsx":"62","C:\\alphaomega\\temp33\\src\\components\\BondLogo.jsx":"63","C:\\alphaomega\\temp33\\src\\views\\33Together\\poolData.js":"64","C:\\alphaomega\\temp33\\src\\views\\33Together\\PoolPrize.jsx":"65","C:\\alphaomega\\temp33\\src\\views\\33Together\\PoolInfo.jsx":"66","C:\\alphaomega\\temp33\\src\\views\\33Together\\PoolDeposit.jsx":"67","C:\\alphaomega\\temp33\\src\\views\\33Together\\PoolWithdraw.jsx":"68","C:\\alphaomega\\temp33\\src\\components\\InfoTooltip\\InfoTooltipMulti.jsx":"69","C:\\alphaomega\\temp33\\src\\components\\CardHeader\\CardHeader.jsx":"70","C:\\alphaomega\\temp33\\src\\hooks\\index.ts":"71","C:\\alphaomega\\temp33\\src\\components\\ConnectButton.jsx":"72","C:\\alphaomega\\temp33\\src\\views\\Stake\\Stake.jsx":"73","C:\\alphaomega\\temp33\\src\\views\\Dashboard\\Dashboard.jsx":"74","C:\\alphaomega\\temp33\\src\\views\\ChooseBond\\ChooseBond.jsx":"75","C:\\alphaomega\\temp33\\src\\views\\Home\\Home.jsx":"76","C:\\alphaomega\\temp33\\src\\slices\\StakeThunk.ts":"77","C:\\alphaomega\\temp33\\src\\views\\Stake\\ExternalStakePool.jsx":"78","C:\\alphaomega\\temp33\\src\\components\\RebaseTimer\\RebaseTimer.jsx":"79","C:\\alphaomega\\temp33\\src\\views\\ChooseBond\\BondRow.jsx":"80","C:\\alphaomega\\temp33\\src\\views\\ChooseBond\\ClaimBonds.jsx":"81","C:\\alphaomega\\temp33\\src\\views\\ChooseBond\\ClaimRow.jsx":"82","C:\\alphaomega\\temp33\\src\\views\\Claim\\Claim.jsx":"83","C:\\alphaomega\\temp33\\src\\views\\Wrap\\Wrap.jsx":"84","C:\\alphaomega\\temp33\\src\\slices\\WrapThunk.ts":"85","C:\\alphaomega\\temp33\\src\\views\\EarlyClaim\\EarlyClaim.jsx":"86"},{"size":426,"mtime":1641852994159,"results":"87","hashOfConfig":"88"},{"size":632,"mtime":1642051021862,"results":"89","hashOfConfig":"88"},{"size":1185,"mtime":1641852994237,"results":"90","hashOfConfig":"88"},{"size":8238,"mtime":1642047654697,"results":"91","hashOfConfig":"88"},{"size":9102,"mtime":1642087690228,"results":"92","hashOfConfig":"88"},{"size":13552,"mtime":1642047654673,"results":"93","hashOfConfig":"88"},{"size":9680,"mtime":1642047654665,"results":"94","hashOfConfig":"88"},{"size":6013,"mtime":1642047654669,"results":"95","hashOfConfig":"88"},{"size":11945,"mtime":1642047653389,"results":"96","hashOfConfig":"88"},{"size":1625,"mtime":1642051111277,"results":"97","hashOfConfig":"88"},{"size":1945,"mtime":1642047653391,"results":"98","hashOfConfig":"88"},{"size":7246,"mtime":1642047653390,"results":"99","hashOfConfig":"88"},{"size":13419,"mtime":1642047653393,"results":"100","hashOfConfig":"88"},{"size":12532,"mtime":1642051105885,"results":"101","hashOfConfig":"88"},{"size":1796,"mtime":1641853000816,"results":"102","hashOfConfig":"88"},{"size":874,"mtime":1641852999596,"results":"103","hashOfConfig":"88"},{"size":328,"mtime":1641852999627,"results":"104","hashOfConfig":"88"},{"size":1792,"mtime":1642047653376,"results":"105","hashOfConfig":"88"},{"size":3509,"mtime":1642047653386,"results":"106","hashOfConfig":"88"},{"size":8587,"mtime":1642047653382,"results":"107","hashOfConfig":"108"},{"size":3224,"mtime":1642047653381,"results":"109","hashOfConfig":"88"},{"size":1000,"mtime":1642047653387,"results":"110","hashOfConfig":"88"},{"size":4151,"mtime":1642047653386,"results":"111","hashOfConfig":"88"},{"size":330,"mtime":1642047653384,"results":"112","hashOfConfig":"88"},{"size":6020,"mtime":1642047653398,"results":"113","hashOfConfig":"108"},{"size":8878,"mtime":1642086031616,"results":"114","hashOfConfig":"88"},{"size":693,"mtime":1641852999894,"results":"115","hashOfConfig":"88"},{"size":7916,"mtime":1642086913512,"results":"116","hashOfConfig":"88"},{"size":5403,"mtime":1642086886805,"results":"117","hashOfConfig":"88"},{"size":1613,"mtime":1642047653397,"results":"118","hashOfConfig":"108"},{"size":1197,"mtime":1642047653385,"results":"119","hashOfConfig":"88"},{"size":670,"mtime":1642047653369,"results":"120","hashOfConfig":"88"},{"size":2628,"mtime":1642047653370,"results":"121","hashOfConfig":"88"},{"size":215,"mtime":1642047653435,"results":"122","hashOfConfig":"88"},{"size":3126,"mtime":1642086944113,"results":"123","hashOfConfig":"88"},{"size":8374,"mtime":1642047653384,"results":"124","hashOfConfig":"108"},{"size":3444,"mtime":1642047653379,"results":"125","hashOfConfig":"88"},{"size":9731,"mtime":1642087046311,"results":"126","hashOfConfig":"88"},{"size":567,"mtime":1642047653380,"results":"127","hashOfConfig":"88"},{"size":490,"mtime":1642047653455,"results":"128","hashOfConfig":"88"},{"size":529,"mtime":1642086865323,"results":"129","hashOfConfig":"88"},{"size":7443,"mtime":1642087228324,"results":"130","hashOfConfig":"88"},{"size":712,"mtime":1642047653370,"results":"131","hashOfConfig":"88"},{"size":7351,"mtime":1642047653431,"results":"132","hashOfConfig":"88"},{"size":1044,"mtime":1642086799432,"results":"133","hashOfConfig":"88"},{"size":7397,"mtime":1642047654690,"results":"134","hashOfConfig":"88"},{"size":7560,"mtime":1642047653437,"results":"135","hashOfConfig":"88"},{"size":19114,"mtime":1642051080520,"results":"136","hashOfConfig":"88"},{"size":6078,"mtime":1642047654642,"results":"137","hashOfConfig":"108"},{"size":1126,"mtime":1641852999313,"results":"138","hashOfConfig":"88"},{"size":14532,"mtime":1642047653367,"results":"139","hashOfConfig":"108"},{"size":797,"mtime":1641853000612,"results":"140","hashOfConfig":"88"},{"size":3089,"mtime":1642047654715,"results":"141","hashOfConfig":"108"},{"size":9618,"mtime":1642047653439,"results":"142","hashOfConfig":"88"},{"size":5082,"mtime":1642047653440,"results":"143","hashOfConfig":"88"},{"size":2302,"mtime":1642047653438,"results":"144","hashOfConfig":"88"},{"size":601,"mtime":1641852999046,"results":"145","hashOfConfig":"88"},{"size":2666,"mtime":1641852999219,"results":"146","hashOfConfig":"108"},{"size":3407,"mtime":1641852999193,"results":"147","hashOfConfig":"108"},{"size":383,"mtime":1641853000336,"results":"148","hashOfConfig":"88"},{"size":384,"mtime":1641853000387,"results":"149","hashOfConfig":"88"},{"size":2251,"mtime":1642047653436,"results":"150","hashOfConfig":"88"},{"size":649,"mtime":1642047653367,"results":"151","hashOfConfig":"88"},{"size":1952,"mtime":1641853001348,"results":"152","hashOfConfig":"88"},{"size":7576,"mtime":1642047653434,"results":"153","hashOfConfig":"88"},{"size":6252,"mtime":1642047653433,"results":"154","hashOfConfig":"88"},{"size":7433,"mtime":1642047653433,"results":"155","hashOfConfig":"88"},{"size":7801,"mtime":1642047653435,"results":"156","hashOfConfig":"88"},{"size":1429,"mtime":1641852999329,"results":"157","hashOfConfig":"88"},{"size":294,"mtime":1641852999109,"results":"158","hashOfConfig":"88"},{"size":436,"mtime":1641853000356,"results":"159","hashOfConfig":"88"},{"size":599,"mtime":1642047653367,"results":"160","hashOfConfig":"88"},{"size":17524,"mtime":1642047654651,"results":"161","hashOfConfig":"88"},{"size":6012,"mtime":1642047653447,"results":"162","hashOfConfig":"88"},{"size":5089,"mtime":1642051071389,"results":"163","hashOfConfig":"88"},{"size":14721,"mtime":1642047654653,"results":"164","hashOfConfig":"108"},{"size":8859,"mtime":1642047653393,"results":"165","hashOfConfig":"88"},{"size":7402,"mtime":1642047653449,"results":"166","hashOfConfig":"108"},{"size":2998,"mtime":1642047653371,"results":"167","hashOfConfig":"88"},{"size":6642,"mtime":1642047653442,"results":"168","hashOfConfig":"88"},{"size":4842,"mtime":1642047653443,"results":"169","hashOfConfig":"88"},{"size":5509,"mtime":1642047653444,"results":"170","hashOfConfig":"88"},{"size":1218,"mtime":1642047653446,"results":"171","hashOfConfig":"88"},{"size":13050,"mtime":1642047653455,"results":"172","hashOfConfig":"88"},{"size":5748,"mtime":1642047653394,"results":"173","hashOfConfig":"88"},{"size":6934,"mtime":1642047653448,"results":"174","hashOfConfig":"88"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},"16x4w7d",{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"182","messages":"183","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"177"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"177"},{"filePath":"190","messages":"191","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"177"},{"filePath":"193","messages":"194","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"177"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},"d6ea1w",{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":8,"source":"223","usedDeprecatedRules":"177"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":5,"source":"234","usedDeprecatedRules":"177"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":17,"source":"253","usedDeprecatedRules":"177"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"260","usedDeprecatedRules":"177"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":22,"source":"269","usedDeprecatedRules":"177"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"276","messages":"277","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"177"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"281","usedDeprecatedRules":"177"},{"filePath":"282","messages":"283","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"177"},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"309","messages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"311","messages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"317","messages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"319","messages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"327","messages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"329","messages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"333","messages":"334","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"177"},{"filePath":"336","messages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"338","messages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"340","messages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"342","messages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"344","messages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"346","messages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"348","messages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"350","messages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"352","messages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"354","messages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"356","messages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"358","messages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"360","messages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},"C:\\alphaomega\\temp33\\src\\index.jsx",[],[],"C:\\alphaomega\\temp33\\src\\Root.jsx",[],"C:\\alphaomega\\temp33\\src\\store.ts",[],"C:\\alphaomega\\temp33\\src\\hooks\\web3Context.tsx",["362"],"import React, { useState, ReactElement, useContext, useEffect, useMemo, useCallback } from \"react\";\r\nimport Web3Modal from \"web3modal\";\r\nimport { StaticJsonRpcProvider, JsonRpcProvider, Web3Provider } from \"@ethersproject/providers\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\nimport { IFrameEthereumProvider } from \"@ledgerhq/iframe-provider\";\r\nimport { EnvHelper } from \"../helpers/Environment\";\r\nimport { NodeHelper } from \"src/helpers/NodeHelper\";\r\n\r\n/**\r\n * kept as function to mimic `getMainnetURI()`\r\n * @returns string\r\n */\r\n \r\nfunction getMumbaiTestnetURI() {\r\n  return EnvHelper.mumbaiTestnetURI;\r\n}\r\n\r\nfunction getPolygonURI() {\r\n  return EnvHelper.polygonURI;\r\n}\r\n\r\n\r\nfunction getBSCTestnetURI() {\r\n  return EnvHelper.bscTestnetURI;\r\n}\r\n\r\n\r\n/**\r\n * determine if in IFrame for Ledger Live\r\n */\r\n \r\nfunction isIframe() {\r\n  return window.location !== window.parent.location;\r\n}\r\n\r\nconst ALL_URIs = NodeHelper.getNodesUris();\r\n\r\n/**\r\n * \"intelligently\" loadbalances production API Keys\r\n * @returns string\r\n */\r\n \r\nfunction getMainnetURI(): string {\r\n  // Shuffles the URIs for \"intelligent\" loadbalancing\r\n  const allURIs = ALL_URIs.sort(() => Math.random() - 0.5);\r\n\r\n  // There is no lightweight way to test each URL. so just return a random one.\r\n  // if (workingURI !== undefined || workingURI !== \"\") return workingURI as string;\r\n  const randomIndex = Math.floor(Math.random() * allURIs.length);\r\n  return allURIs[randomIndex];\r\n}\r\n\r\n/*\r\n  Types\r\n*/\r\n\r\ntype onChainProvider = {\r\n  connect: () => void;\r\n  disconnect: () => void;\r\n  provider: JsonRpcProvider;\r\n  address: string;\r\n  connected: Boolean;\r\n  web3Modal: Web3Modal;\r\n};\r\n\r\nexport type Web3ContextData = {\r\n  onChainProvider: onChainProvider;\r\n} | null;\r\n\r\nconst Web3Context = React.createContext<Web3ContextData>(null);\r\n\r\nexport const useWeb3Context = () => {\r\n  const web3Context = useContext(Web3Context);\r\n  if (!web3Context) {\r\n    throw new Error(\r\n      \"useWeb3Context() can only be used inside of <Web3ContextProvider />, \" + \"please declare it at a higher level.\",\r\n    );\r\n  }\r\n  const { onChainProvider } = web3Context;\r\n  return useMemo(() => {\r\n    return { ...onChainProvider };\r\n  }, [web3Context]);\r\n};\r\n\r\nexport const useAddress = () => {\r\n  const { address } = useWeb3Context();\r\n  return address;\r\n};\r\n\r\nexport const Web3ContextProvider: React.FC<{ children: ReactElement }> = ({ children }) => {\r\n  const [connected, setConnected] = useState(false);\r\n<<<<<<< Updated upstream\r\n  // NOTE (appleseed): if you are testing you need to set chainId === 80001 as the default for non-connected wallet testing...\r\n  // ... you also need to set getMumbaiTestnetURI() as the default uri state below\r\n  const [chainID, setChainID] = useState(97);\r\n  const [address, setAddress] = useState(\"\");\r\n\r\n  const [uri, setUri] = useState(getBSCTestnetURI());\r\n=======\r\n  // NOTE (appleseed): if you are testing on rinkeby you need to set chainId === 4 as the default for non-connected wallet testing...\r\n  // ... you also need to set getTestnetURI() as the default uri state below\r\n  const [chainID, setChainID] = useState(97);\r\n  const [address, setAddress] = useState(\"\");\r\n\r\n  const [uri, setUri] = useState(getTestnetURI());\r\n>>>>>>> Stashed changes\r\n\r\n  const [provider, setProvider] = useState<JsonRpcProvider>(new StaticJsonRpcProvider(uri));\r\n\r\n  const [web3Modal, setWeb3Modal] = useState<Web3Modal>(\r\n    new Web3Modal({\r\n      theme: {\r\n        background: \"#182328\",\r\n        main: \"#FFFFFF\",\r\n        secondary: \"rgba(255, 255, 255, 0.2)\",\r\n        border: \"#182328\",\r\n        hover: \"rgb(16, 26, 32)\",\r\n      },\r\n      cacheProvider: true, // optional\r\n      providerOptions: {\r\n        walletconnect: {\r\n          package: WalletConnectProvider,\r\n          options: {\r\n            rpc: {\r\n<<<<<<< Updated upstream\r\n              80001: getMumbaiTestnetURI(),\r\n              //137: getPolygonURI(),\r\n\t\t\t  97: getBSCTestnetURI(),\r\n\t\t\t  \r\n\t\t\t  \r\n=======\r\n              56: getMainnetURI(),\r\n              97: getTestnetURI(),\r\n>>>>>>> Stashed changes\r\n            },\r\n          },\r\n        },\r\n      },\r\n    }),\r\n  );\r\n\r\n  const hasCachedProvider = (): Boolean => {\r\n    if (!web3Modal) return false;\r\n    if (!web3Modal.cachedProvider) return false;\r\n    return true;\r\n  };\r\n\r\n  // NOTE (appleseed): none of these listeners are needed for Backend API Providers\r\n  // ... so I changed these listeners so that they only apply to walletProviders, eliminating\r\n  // ... polling to the backend providers for network changes\r\n  \r\n  const _initListeners = useCallback(\r\n    rawProvider => {\r\n      if (!rawProvider.on) {\r\n        return;\r\n      }\r\n      rawProvider.on(\"accountsChanged\", async (accounts: string[]) => {\r\n        setTimeout(() => window.location.reload(), 1);\r\n      });\r\n\r\n      rawProvider.on(\"chainChanged\", async (chain: number) => {\r\n        _checkNetwork(chain);\r\n        setTimeout(() => window.location.reload(), 1);\r\n      });\r\n\r\n      rawProvider.on(\"network\", (_newNetwork: any, oldNetwork: any) => {\r\n        if (!oldNetwork) return;\r\n        window.location.reload();\r\n      });\r\n    },\r\n    [provider],\r\n  );\r\n\r\n  /**\r\n   * throws an error if networkID is not 137 (mainnet) or 80001 (testnet)\r\n   */\r\n   \r\n  const _checkNetwork = (otherChainID: number): Boolean => {\r\n    if (chainID !== 97 && otherChainID !== 80001) {\r\n      return false;\r\n    }\r\n    if (chainID !== otherChainID) {\r\n      console.warn(\"You are switching networks\");\r\n      if (otherChainID === 97 || otherChainID === 80001) {\r\n        setChainID(otherChainID);\r\n        if (otherChainID === 97) setUri(getBSCTestnetURI);\r\n        else if (otherChainID === 80001) setUri(getMumbaiTestnetURI);\r\n        // else setUri(getBSCTestnetURI());\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  // connect - only runs for WalletProviders\r\n  const connect = useCallback(async () => {\r\n    // handling Ledger Live;\r\n    let rawProvider;\r\n    if (isIframe()) {\r\n      rawProvider = new IFrameEthereumProvider();\r\n    } else {\r\n      rawProvider = await web3Modal.connect();\r\n    }\r\n\r\n    // new _initListeners implementation matches Web3Modal Docs\r\n    // ... see here: https://github.com/Web3Modal/web3modal/blob/2ff929d0e99df5edf6bb9e88cff338ba6d8a3991/example/src/App.tsx#L185\r\n    _initListeners(rawProvider);\r\n    const connectedProvider = new Web3Provider(rawProvider, \"any\");\r\n    const chainId = await connectedProvider.getNetwork().then(network => network.chainId);\r\n    const connectedAddress = await connectedProvider.getSigner().getAddress();\r\n    const validNetwork = _checkNetwork(chainId);\r\n    if (!validNetwork) {\r\n      console.error(\"Wrong network, please switch to Polygon\");\r\n      return;\r\n    }\r\n    // Save everything after we've validated the right network.\r\n    // Eventually we'll be fine without doing network validations.\r\n    setAddress(connectedAddress);\r\n    setProvider(connectedProvider);\r\n\r\n    // Keep this at the bottom of the method, to ensure any repaints have the data we need\r\n    setConnected(true);\r\n\r\n    return connectedProvider;\r\n  }, [provider, web3Modal, connected]);\r\n\r\n  const disconnect = useCallback(async () => {\r\n    console.log(\"disconnecting\");\r\n    web3Modal.clearCachedProvider();\r\n    setConnected(false);\r\n\r\n    setTimeout(() => {\r\n      window.location.reload();\r\n    }, 1);\r\n  }, [provider, web3Modal, connected]);\r\n\r\n  const onChainProvider = useMemo(\r\n    () => ({ connect, disconnect, hasCachedProvider, provider, connected, address, chainID, web3Modal, uri }),\r\n    [connect, disconnect, hasCachedProvider, provider, connected, address, chainID, web3Modal, uri],\r\n  );\r\n\r\n  useEffect(() => {\r\n    // logs non-functioning nodes && returns an array of working mainnet nodes\r\n    NodeHelper.checkAllNodesStatus().then((validNodes: any) => {\r\n      validNodes = validNodes.filter((url: boolean | string) => url !== false);\r\n      if (!validNodes.includes(uri) && NodeHelper.retryOnInvalid()) {\r\n        // force new provider...\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 1);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return <Web3Context.Provider value={{ onChainProvider }}>{children}</Web3Context.Provider>;\r\n};\r\n","C:\\alphaomega\\temp33\\src\\App.jsx",[],"C:\\alphaomega\\temp33\\src\\themes\\dark.js",["363"],"import { createTheme, responsiveFontSizes } from \"@material-ui/core/styles\";\r\nimport fonts from \"./fonts\";\r\nimport commonSettings, { handleBackdropFilter } from \"./global.js\";\r\n\r\n// TODO: Break repeated use color values out into list of consts declared here\r\n// then set the values in darkTheme using the global color variables\r\n\r\nconst colors = {\r\n  gold: {\r\n    500: \"#FFBC45\",\r\n    600: \"#F0A72C\",\r\n  },\r\n  common: {\r\n    white: \"#FCFCFC\",\r\n    black: \"\",\r\n  },\r\n  dark: {\r\n    700: \"#344750\",\r\n    800: \"#232E33\",\r\n    900: \"#182328\",\r\n  },\r\n};\r\n\r\nconst darkTheme = {\r\n<<<<<<< Updated upstream\r\n  color: colors.common.white,\r\n  gold: colors.gold[500],\r\n  gray: \"#A3A3A3\",\r\n  textHighlightColor: colors.gold[500],\r\n  backgroundColor: colors.dark[800],\r\n  background: `\r\n    radial-gradient(circle at 44% 35%, rgba(255, 109, 0, .25), rgba(255, 109, 0, 0) 27%),\r\n    radial-gradient(circle at 75% 59%, rgba(0, 209, 197, .25), rgba(0, 209, 197, 0) 33%)\r\n  `,\r\n  paperBg: `${colors.dark[900]}40`,\r\n  modalBg: \"#24242699\",\r\n  popoverBg: colors.dark[900],\r\n  menuBg: \"#36384080\",\r\n  backdropBg: \"rgba(54, 56, 64, 0.5)\",\r\n  largeTextColor: colors.gold[500],\r\n  activeLinkColor: colors.gold[500],\r\n  activeLinkSvgColor:\r\n    \"brightness(0) saturate(100%) invert(84%) sepia(49%) saturate(307%) hue-rotate(326deg) brightness(106%) contrast(92%)\",\r\n  primaryButtonColor: \"#333333\",\r\n  primaryButtonBG: \"#F4D092\",\r\n  primaryButtonHoverBG: \"#EDD8B4\",\r\n  secondaryButtonHoverBG: \"rgba(54, 56, 64, 1)\",\r\n  outlinedPrimaryButtonHoverBG: \"#F8CC82\",\r\n  outlinedPrimaryButtonHoverColor: \"#333333\",\r\n  outlinedSecondaryButtonHoverBG: \"transparent\",\r\n  outlinedSecondaryButtonHoverColor: \"#F8CC82\", //gold\r\n  containedSecondaryButtonBG: colors.dark[900],\r\n  containedSecondaryButtonHoverBG: colors.dark[700],\r\n=======\r\n  color: \"#FCFCFC\",\r\n  gold: \"#d1d1d1\",\r\n  gray: \"#A3A3A3\",\r\n  textHighlightColor: \"#d1d1d1\",\r\n  backgroundColor: \"#ffffff\",\r\n\r\n  background:`\r\n   linear-gradient(180deg, rgba(8, 15, 53, 0), rgba(0, 0, 10, 0.9))\r\n   `,\r\n   background: `\r\n     linear-gradient(280deg, rgba(0, 15, 53, 0), rgba(0, 0, 10, 0.9)),\r\n     linear-gradient(333deg, rgba(153, 207, 255, 0.2), rgba(180, 255, 217, 0.08)),\r\n     radial-gradient(circle at 77% 89%, rgba(125, 163, 169, 0.8), rgba(125, 163, 169, 0) 50%),\r\n     radial-gradient(circle at 15% 95%, rgba(125, 163, 169, 0.8), rgba(125, 163, 169, 0) 43%),\r\n     radial-gradient(circle at 65% 23%, rgba(137, 151, 119, 0.4), rgba(137, 151, 119, 0) 70%),\r\n    radial-gradient(circle at 10% 0%, rgba(187, 211, 204, 0.33), rgba(187,211,204,0) 35%),\r\n     radial-gradient(circle at 11% 100%, rgba(131, 165, 203, 0.3), rgba(131, 165, 203, 0) 30%)\r\n     `,\r\n  paperBg: \"#282D37\",\r\n  modalBg: \"#282D37\",\r\n  popoverBg: \"rgba(54, 56, 64, 0.99)\",\r\n  menuBg: \"#36384080\",\r\n  backdropBg: \"rgba(54, 56, 64, 0.5)\",\r\n  largeTextColor: \"#d1d1d1\",\r\n  activeLinkColor: \"#F5DDB4\",\r\n  activeLinkSvgColor:\r\n    \"brightness(0) saturate(100%) invert(84%) sepia(49%) saturate(307%) hue-rotate(326deg) brightness(106%) contrast(92%)\",\r\n  primaryButtonColor: \"#333333\",\r\n  primaryButtonBG: \"#d1d1d1\",\r\n  primaryButtonHoverBG: \"#EDD8B4\",\r\n  secondaryButtonHoverBG: \"rgba(54, 56, 64, 1)\",\r\n  outlinedPrimaryButtonHoverBG: \"#d1d1d1\",\r\n  outlinedPrimaryButtonHoverColor: \"#333333\",\r\n  outlinedSecondaryButtonHoverBG: \"transparent\",\r\n  outlinedSecondaryButtonHoverColor: \"#d1d1d1\", //gold\r\n  containedSecondaryButtonHoverBG: \"rgba(255, 255, 255, 0.15)\",\r\n>>>>>>> Stashed changes\r\n  graphStrokeColor: \"rgba(255, 255, 255, .1)\",\r\n\r\n  containedIconButton: colors.common.white,\r\n  containedIconButtonHover: colors.gold[500],\r\n};\r\n\r\nexport const dark = responsiveFontSizes(\r\n  createTheme(\r\n    {\r\n      primary: {\r\n        main: darkTheme.color,\r\n      },\r\n      palette: {\r\n        type: \"dark\",\r\n        background: {\r\n          default: darkTheme.backgroundColor,\r\n          paper: darkTheme.paperBg,\r\n        },\r\n        contrastText: darkTheme.color,\r\n        primary: {\r\n          main: darkTheme.color,\r\n        },\r\n        neutral: {\r\n          main: darkTheme.color,\r\n          secondary: darkTheme.gray,\r\n        },\r\n        text: {\r\n          primary: darkTheme.color,\r\n          secondary: darkTheme.gray,\r\n        },\r\n        graphStrokeColor: darkTheme.graphStrokeColor,\r\n      },\r\n      typography: {\r\n        fontFamily: \"CoHeadline\",\r\n      },\r\n      props: {\r\n        MuiSvgIcon: {\r\n          htmlColor: darkTheme.color,\r\n        },\r\n      },\r\n      overrides: {\r\n        MuiCssBaseline: {\r\n          \"@global\": {\r\n            \"@font-face\": fonts,\r\n            body: {\r\n              background: darkTheme.background,\r\n            },\r\n          },\r\n        },\r\n        MuiAlert: {\r\n          filledInfo: {\r\n            backgroundColor: colors.gold[500],\r\n            color: colors.dark[900],\r\n          },\r\n        },\r\n        MuiDrawer: {\r\n          paper: {\r\n            backgroundColor: darkTheme.paperBg,\r\n            zIndex: 7,\r\n          },\r\n        },\r\n        MuiPaper: {\r\n          root: {\r\n            backgroundColor: darkTheme.paperBg,\r\n            backdropFilter: \"blur(200px)\",\r\n            background: `radial-gradient(circle at 28% 13%, rgba(255, 109, 0, .06), rgba(255, 109, 0, 0) 24%)`,\r\n            \"&.ohm-card\": {\r\n              background: \"rgba(255, 255, 255, 0.05)\",\r\n              border: \"0.5px solid rgba(255, 255, 255, 0.2)\",\r\n              boxShadow: \"0px 20px 20px rgba(0, 0, 0, 0.05)\",\r\n              // backgroundColor: darkTheme.paperBg,\r\n              backdropFilter: \"blur(40px)\",\r\n            },\r\n            \"&.bond-card\": {\r\n              background: colors.dark[900],\r\n              border: \"0.5px solid rgba(255, 255, 255, 0.2)\",\r\n              boxShadow: \"0px 20px 20px rgba(0, 0, 0, 0.05)\",\r\n              // backgroundColor: darkTheme.paperBg,\r\n              // backdropFilter: \"blur(40px)\",\r\n            },\r\n            \"&.ohm-modal\": {\r\n              background: colors.dark[900],\r\n              // backgroundColor: darkTheme.modalBg,\r\n            },\r\n            \"&.ohm-menu\": {\r\n              backgroundColor: darkTheme.menuBg,\r\n              backdropFilter: \"blur(33px)\",\r\n            },\r\n            \"&.ohm-popover\": {\r\n              backgroundColor: darkTheme.popoverBg,\r\n              color: darkTheme.color,\r\n              backdropFilter: \"blur(15px)\",\r\n            },\r\n          },\r\n        },\r\n        MuiBackdrop: {\r\n          root: {\r\n            backgroundColor: darkTheme.backdropBg,\r\n          },\r\n        },\r\n        MuiLink: {\r\n          root: {\r\n            color: darkTheme.color,\r\n            \"& #non-active-bond-icon, & #non-active-stake-icon, & #doc-icon, & #dashboard-icon, & #settings-icon\": {\r\n              fill: \"none\",\r\n              stroke: darkTheme.color,\r\n            },\r\n            \"&:hover\": {\r\n              \"&:hover #non-active-bond-icon, &:hover #non-active-stake-icon, &:hover #doc-icon, & #dashboard-icon, & #settings-icon\":\r\n                {\r\n                  fill: \"none\",\r\n                  stroke: darkTheme.textHighlightColor,\r\n                },\r\n              color: darkTheme.textHighlightColor,\r\n              textDecoration: \"none\",\r\n              \"&.active\": {\r\n                color: darkTheme.activeLinkColor,\r\n              },\r\n            },\r\n            \"&.active\": {\r\n              color: darkTheme.activeLinkColor,\r\n              textDecoration: \"none\",\r\n              \"& #dashboard-icon\": {\r\n                fill: darkTheme.textHighlightColor,\r\n                stroke: darkTheme.textHighlightColor,\r\n              },\r\n              \" & #stake-icon, & #bond-icon\": {\r\n                fill: darkTheme.textHighlightColor,\r\n                stroke: \"none\",\r\n              },\r\n            },\r\n          },\r\n        },\r\n        MuiTableCell: {\r\n          root: {\r\n            color: darkTheme.color,\r\n          },\r\n        },\r\n        MuiInputBase: {\r\n          root: {\r\n            // color: darkTheme.gold,\r\n          },\r\n        },\r\n        MuiOutlinedInput: {\r\n          notchedOutline: {\r\n            // borderColor: `${darkTheme.gold} !important`,\r\n            \"&:hover\": {\r\n              // borderColor: `${darkTheme.gold} !important`,\r\n            },\r\n          },\r\n        },\r\n        MuiTab: {\r\n          textColorPrimary: {\r\n            color: darkTheme.gray,\r\n            \"&$selected\": {\r\n              color: darkTheme.gold,\r\n            },\r\n          },\r\n        },\r\n        PrivateTabIndicator: {\r\n          colorPrimary: {\r\n            \"&$selected\": {\r\n              color: darkTheme.gold,\r\n            },\r\n            backgroundColor: darkTheme.gold,\r\n            // \"&.active\": {\r\n            color: darkTheme.activeLinkColor,\r\n            // },\r\n          },\r\n        },\r\n        MuiToggleButton: {\r\n          root: {\r\n            backgroundColor: darkTheme.paperBg,\r\n            \"&:hover\": {\r\n              color: darkTheme.color,\r\n              backgroundColor: `${darkTheme.containedSecondaryButtonHoverBG} !important`,\r\n            },\r\n            selected: {\r\n              backgroundColor: darkTheme.containedSecondaryButtonHoverBG,\r\n            },\r\n            \"@media (hover:none)\": {\r\n              \"&:hover\": {\r\n                color: darkTheme.color,\r\n                backgroundColor: darkTheme.paperBg,\r\n              },\r\n              \"&:focus\": {\r\n                color: darkTheme.color,\r\n                backgroundColor: darkTheme.paperBg,\r\n                borderColor: \"transparent\",\r\n                outline: \"#00000000\",\r\n              },\r\n            },\r\n          },\r\n        },\r\n        MuiButton: {\r\n          containedPrimary: {\r\n            color: darkTheme.primaryButtonColor,\r\n            backgroundColor: darkTheme.gold,\r\n            \"&:hover\": {\r\n              backgroundColor: darkTheme.primaryButtonHoverBG,\r\n              color: darkTheme.primaryButtonHoverColor,\r\n            },\r\n            \"&:active\": {\r\n              backgroundColor: darkTheme.primaryButtonHoverBG,\r\n              color: darkTheme.primaryButtonHoverColor,\r\n            },\r\n            \"@media (hover:none)\": {\r\n              color: darkTheme.primaryButtonColor,\r\n              backgroundColor: darkTheme.gold,\r\n              \"&:hover\": {\r\n                backgroundColor: darkTheme.primaryButtonHoverBG,\r\n              },\r\n            },\r\n          },\r\n          containedSecondary: {\r\n            border: \"0.5px solid rgba(255, 255, 255, 0.2)\",\r\n            backgroundColor: darkTheme.containedSecondaryButtonBG,\r\n            \"&:disabled\": {\r\n              backgroundColor: darkTheme.containedSecondaryButtonBG,\r\n              opacity: 0.5,\r\n              color: darkTheme.color,\r\n            },\r\n            \"&:hover\": {\r\n              backgroundColor: `${darkTheme.containedSecondaryButtonHoverBG} !important`,\r\n            },\r\n            \"&:active\": {\r\n              backgroundColor: darkTheme.containedSecondaryButtonHoverBG,\r\n            },\r\n            \"&:focus\": {\r\n              backgroundColor: darkTheme.paperBg,\r\n            },\r\n            \"@media (hover:none)\": {\r\n              color: darkTheme.color,\r\n              backgroundColor: darkTheme.paperBg,\r\n              \"&:hover\": {\r\n                backgroundColor: `${darkTheme.containedSecondaryButtonHoverBG} !important`,\r\n              },\r\n            },\r\n          },\r\n          outlinedPrimary: {\r\n            backgroundColor: darkTheme.containedSecondaryButtonBG,\r\n            border: \"0.5px solid rgba(255, 255, 255, 0.2)\",\r\n            \"&:hover\": {\r\n              color: darkTheme.outlinedPrimaryButtonHoverColor,\r\n              backgroundColor: darkTheme.primaryButtonHoverBG,\r\n            },\r\n            \"@media (hover:none)\": {\r\n              backgroundColor: darkTheme.containedSecondaryButtonBG,\r\n              border: \"0.5px solid rgba(255, 255, 255, 0.2)\",\r\n              \"&:hover\": {\r\n                color: darkTheme.outlinedPrimaryButtonHoverColor,\r\n                backgroundColor: `${darkTheme.primaryButtonHoverBG} !important`,\r\n                textDecoration: \"none !important\",\r\n              },\r\n            },\r\n          },\r\n          outlinedSecondary: {\r\n            color: darkTheme.color,\r\n            borderColor: darkTheme.color,\r\n            \"&:hover\": {\r\n              color: darkTheme.outlinedSecondaryButtonHoverColor,\r\n              backgroundColor: darkTheme.outlinedSecondaryButtonHoverBG,\r\n              borderColor: darkTheme.gold,\r\n            },\r\n          },\r\n          textPrimary: {\r\n            color: \"#A3A3A3\",\r\n            \"&:hover\": {\r\n              color: darkTheme.gold,\r\n              backgroundColor: \"#00000000\",\r\n            },\r\n            \"&:active\": {\r\n              color: darkTheme.gold,\r\n<<<<<<< Updated upstream\r\n              borderBottom: \"#F8CC82\",\r\n=======\r\n              borderBottom: \"#d1d1d1\",\r\n>>>>>>> Stashed changes\r\n            },\r\n          },\r\n          textSecondary: {\r\n            color: darkTheme.color,\r\n            \"&:hover\": {\r\n              color: darkTheme.textHighlightColor,\r\n            },\r\n          },\r\n        },\r\n        MuiIconButton: {\r\n          root: {\r\n            color: darkTheme.containedIconButton,\r\n            \"& #settings-icon\": {\r\n              fill: \"none\",\r\n              stroke: darkTheme.containedIconButton,\r\n            },\r\n            \"&:hover\": {\r\n              color: darkTheme.containedIconButtonHover,\r\n            },\r\n            \"&:hover #settings-icon\": {\r\n              fill: \"none\",\r\n              stroke: darkTheme.containedIconButtonHover,\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n    commonSettings,\r\n  ),\r\n);\r\n","C:\\alphaomega\\temp33\\src\\themes\\light.js",["364"],"import { createTheme, responsiveFontSizes } from \"@material-ui/core/styles\";\r\nimport fonts from \"./fonts\";\r\nimport commonSettings, { handleBackdropFilter } from \"./global.js\";\r\n\r\nconst lightTheme = {\r\n  color: \"#253449\",\r\n<<<<<<< Updated upstream\r\n  gold: \"#F8CC82\",\r\n  gray: \"#A3A3A3\",\r\n  blueish_gray: \"#768299\",\r\n  textHighlightColor: \"#93AEBC\", // \"#F4D092\",\r\n=======\r\n  gold: \"#d1d1d1\",\r\n  gray: \"#A3A3A3\",\r\n  blueish_gray: \"#768299\",\r\n  textHighlightColor: \"#93AEBC\", // \"#d1d1d1\",\r\n>>>>>>> Stashed changes\r\n  backgroundColor: \"#AFCDE9\",\r\n  // background:\r\n  // \"radial-gradient(circle at 25% 0%, rgba(227,255,240,.5), rgba(227,255,240,0) 50%), radial-gradient(circle at 80% 80%, rgba(131,165,203,.5), rgba(131,165,203,0) 50%)\",\r\n  background: \"linear-gradient(180deg, #AFCDE9 1%, #F7FBE7 100%)\",\r\n  paperBg: \"rgba(255, 255, 255, 0.6)\",\r\n  modalBg: \"#FAFAFAEF\",\r\n  popoverBg: \"rgba(255, 255, 255, 0.95)\",\r\n  menuBg: handleBackdropFilter(\"rgba(255, 255, 255, 0.5)\"),\r\n  backdropBg: \"rgba(200, 200, 200, 0.4)\",\r\n  largeTextColor: \"#759AAE\",\r\n  activeLinkColor: \"#222222\",\r\n  activeLinkSvgColor: \"invert(64%) sepia(11%) saturate(934%) hue-rotate(157deg) brightness(90%) contrast(86%)\",\r\n  // primaryButtonBG: \"#759AAE\",\r\n  primaryButtonBG: \"#93AEBC\",\r\n  primaryButtonHoverBG: \"#759AAE\",\r\n  // these need fixing\r\n  primaryButtonHoverColor: \"#333333\",\r\n  secondaryButtonHoverBG: \"rgba(54, 56, 64, 1)\",\r\n<<<<<<< Updated upstream\r\n  outlinedPrimaryButtonHoverBG: \"#F8CC82\",\r\n=======\r\n  outlinedPrimaryButtonHoverBG: \"#d1d1d1\",\r\n>>>>>>> Stashed changes\r\n  outlinedPrimaryButtonHoverColor: \"#333333\",\r\n  outlinedSecondaryButtonHoverBG: \"#FCFCFC\",\r\n  outlinedSecondaryButtonHoverColor: \"#333333\",\r\n  containedSecondaryButtonHoverBG: \"#33333333\",\r\n  graphStrokeColor: \"rgba(37, 52, 73, .2)\",\r\n};\r\n\r\nexport const light = responsiveFontSizes(\r\n  createTheme(\r\n    {\r\n      primary: {\r\n        main: lightTheme.color,\r\n      },\r\n      palette: {\r\n        type: \"light\",\r\n        background: {\r\n          default: lightTheme.backgroundColor,\r\n          paper: lightTheme.paperBg,\r\n        },\r\n        contrastText: lightTheme.color,\r\n        primary: {\r\n          main: lightTheme.color,\r\n        },\r\n        neutral: {\r\n          main: lightTheme.color,\r\n          secondary: lightTheme.gray,\r\n        },\r\n        text: {\r\n          primary: lightTheme.color,\r\n          secondary: lightTheme.blueish_gray,\r\n        },\r\n        graphStrokeColor: lightTheme.graphStrokeColor,\r\n      },\r\n      typography: {\r\n        fontFamily: \"CoHeadline\",\r\n      },\r\n      props: {\r\n        MuiSvgIcon: {\r\n          htmlColor: lightTheme.color,\r\n        },\r\n      },\r\n      overrides: {\r\n        MuiCssBaseline: {\r\n          \"@global\": {\r\n            \"@font-face\": fonts,\r\n            body: {\r\n              background: lightTheme.background,\r\n            },\r\n          },\r\n        },\r\n        MuiPaper: {\r\n          root: {\r\n            backgroundColor: lightTheme.paperBg,\r\n            \"&.ohm-card\": {\r\n              // backgroundColor: lightTheme.paperBg,\r\n            },\r\n            \"&.ohm-modal\": {\r\n              backgroundColor: lightTheme.modalBg,\r\n            },\r\n            \"&.ohm-menu\": {\r\n              backgroundColor: lightTheme.menuBg,\r\n              backdropFilter: \"blur(33px)\",\r\n            },\r\n            \"&.ohm-popover\": {\r\n              backgroundColor: lightTheme.popoverBg,\r\n              color: lightTheme.color,\r\n              backdropFilter: \"blur(15px)\",\r\n            },\r\n          },\r\n        },\r\n        MuiDrawer: {\r\n          paper: {\r\n            backgroundColor: lightTheme.backdropBg,\r\n            zIndex: 7,\r\n          },\r\n        },\r\n        MuiBackdrop: {\r\n          root: {\r\n            backgroundColor: \"rgba(255,255,255, 0)\",\r\n          },\r\n        },\r\n        MuiLink: {\r\n          root: {\r\n            color: lightTheme.color,\r\n            \"&:hover\": {\r\n              color: lightTheme.textHighlightColor,\r\n              textDecoration: \"none\",\r\n              \"&.active\": {\r\n                color: lightTheme.color,\r\n              },\r\n            },\r\n            \"&.active\": {\r\n              color: lightTheme.color,\r\n              textDecoration: \"underline\",\r\n            },\r\n            \"@media (hover:none)\": {\r\n              \"&:hover\": {\r\n                color: lightTheme.textHighlightColor,\r\n                textDecoration: \"none\",\r\n                backgroundColor: \"#00000000 !important\",\r\n              },\r\n              \"&:focus\": {\r\n                color: lightTheme.textHighlightColor,\r\n                backgroundColor: \"#00000000 !important\",\r\n              },\r\n            },\r\n          },\r\n        },\r\n        MuiTableCell: {\r\n          root: {\r\n            color: lightTheme.color,\r\n          },\r\n        },\r\n        MuiInputBase: {\r\n          root: {\r\n            color: lightTheme.color,\r\n          },\r\n        },\r\n        MuiOutlinedInput: {\r\n          notchedOutline: {\r\n            borderColor: `${lightTheme.color} !important`,\r\n            \"&:hover\": {\r\n              borderColor: `${lightTheme.color} !important`,\r\n            },\r\n          },\r\n        },\r\n        MuiTab: {\r\n          textColorPrimary: {\r\n            color: lightTheme.blueish_gray,\r\n            \"&$selected\": {\r\n              color: lightTheme.color,\r\n            },\r\n          },\r\n        },\r\n        PrivateTabIndicator: {\r\n          colorPrimary: {\r\n            backgroundColor: lightTheme.color,\r\n          },\r\n        },\r\n        MuiToggleButton: {\r\n          root: {\r\n            backgroundColor: lightTheme.paperBg,\r\n            \"&:hover\": {\r\n              color: lightTheme.color,\r\n              backgroundColor: lightTheme.containedSecondaryButtonHoverBG,\r\n            },\r\n            selected: {\r\n              backgroundColor: lightTheme.containedSecondaryButtonHoverBG,\r\n            },\r\n            \"@media (hover:none)\": {\r\n              \"&:hover\": {\r\n                color: lightTheme.color,\r\n                backgroundColor: lightTheme.paperBg,\r\n              },\r\n              \"&:focus\": {\r\n                color: lightTheme.color,\r\n                backgroundColor: lightTheme.paperBg,\r\n              },\r\n            },\r\n          },\r\n        },\r\n        MuiIconButton: {\r\n          root: {\r\n            \"&:hover\": {\r\n              backgroundColor: lightTheme.containedSecondaryButtonHoverBG,\r\n            },\r\n            \"@media (hover:none)\": {\r\n              \"&:hover\": {\r\n                color: lightTheme.color,\r\n                backgroundColor: lightTheme.containedSecondaryButtonHoverBG,\r\n              },\r\n              \"&:focus\": {\r\n                color: lightTheme.color,\r\n                backgroundColor: lightTheme.containedSecondaryButtonHoverBG,\r\n              },\r\n            },\r\n          },\r\n        },\r\n        MuiButton: {\r\n          containedPrimary: {\r\n            color: \"#FCFCFC\",\r\n            backgroundColor: lightTheme.primaryButtonBG,\r\n            \"&:hover\": {\r\n              backgroundColor: lightTheme.primaryButtonHoverBG,\r\n              color: lightTheme.primaryButtonHoverColor,\r\n            },\r\n            \"@media (hover:none)\": {\r\n              color: lightTheme.color,\r\n              backgroundColor: lightTheme.primaryButtonBG,\r\n              \"&:hover\": {\r\n                backgroundColor: lightTheme.primaryButtonHoverBG,\r\n              },\r\n            },\r\n          },\r\n          containedSecondary: {\r\n            color: lightTheme.color,\r\n            backgroundColor: lightTheme.paperBg,\r\n            \"&:hover\": {\r\n              color: \"#FCFCFC\",\r\n              backgroundColor: `${lightTheme.containedSecondaryButtonHoverBG} !important`,\r\n            },\r\n            \"@media (hover:none)\": {\r\n              color: lightTheme.color,\r\n              backgroundColor: lightTheme.paperBg,\r\n              \"&:hover\": {\r\n                color: \"#FCFCFC\",\r\n                backgroundColor: `${lightTheme.containedSecondaryButtonHoverBG} !important`,\r\n              },\r\n            },\r\n          },\r\n          outlinedPrimary: {\r\n            color: lightTheme.primaryButtonBG,\r\n            borderColor: lightTheme.primaryButtonBG,\r\n            \"&:hover\": {\r\n              color: lightTheme.gold,\r\n              backgroundColor: lightTheme.primaryButtonHoverBG,\r\n              borderColor: lightTheme.primaryButtonBG,\r\n            },\r\n            \"@media (hover:none)\": {\r\n              color: lightTheme.primaryButtonBG,\r\n              borderColor: lightTheme.primaryButtonBG,\r\n              \"&:hover\": {\r\n                color: `${lightTheme.gold} !important`,\r\n                backgroundColor: `${lightTheme.primaryButtonBG} !important`,\r\n              },\r\n            },\r\n          },\r\n          outlinedSecondary: {\r\n            color: lightTheme.color,\r\n            borderColor: lightTheme.color,\r\n            \"&:hover\": {\r\n              color: lightTheme.outlinedSecondaryButtonHoverColor,\r\n              backgroundColor: lightTheme.outlinedSecondaryButtonHoverBG,\r\n              borderColor: \"#333333\",\r\n            },\r\n          },\r\n          textPrimary: {\r\n            color: lightTheme.gray,\r\n            \"&:hover\": {\r\n              color: lightTheme.textHighlightColor,\r\n              backgroundColor: \"#00000000\",\r\n            },\r\n            \"&:active\": {\r\n              color: lightTheme.gold,\r\n<<<<<<< Updated upstream\r\n              borderBottom: \"#F8CC82\",\r\n=======\r\n              borderBottom: \"#d1d1d1\",\r\n>>>>>>> Stashed changes\r\n            },\r\n          },\r\n          textSecondary: {\r\n            color: lightTheme.color,\r\n            \"&:hover\": {\r\n              color: lightTheme.textHighlightColor,\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n    commonSettings,\r\n  ),\r\n);\r\n","C:\\alphaomega\\temp33\\src\\themes\\girth.js",["365"],"import { createTheme, responsiveFontSizes } from \"@material-ui/core/styles\";\r\nimport fonts from \"./fonts\";\r\nimport commonSettings, { handleBackdropFilter } from \"./global.js\";\r\n\r\nexport const girthTheme = {\r\n  color: \"#EFEFEF\",\r\n<<<<<<< Updated upstream\r\n  gold: \"#F8CC82\",\r\n  textHighlightColor: \"#F4D092\",\r\n=======\r\n  gold: \"#d1d1d1\",\r\n  textHighlightColor: \"#d1d1d1\",\r\n>>>>>>> Stashed changes\r\n  backgroundColor: \"#4158D0\",\r\n  background: \"linear-gradient(43deg, #4158D0 0%, #C850C0 46%, #FFCC70 100%)\",\r\n  paperBg: \"#4242426A\",\r\n  menuBg: handleBackdropFilter(\"rgba(66, 66, 66, 0.41)\"),\r\n  modalBg: \"#F9F9F9AA\",\r\n<<<<<<< Updated upstream\r\n  primaryButtonBG: \"#F8CC82\",\r\n=======\r\n  primaryButtonBG: \"#d1d1d1\",\r\n>>>>>>> Stashed changes\r\n  primaryButtonHoverBG: \"#759AAE\",\r\n  largeTextColor: \"#759AAE\",\r\n  activeLinkColor: \"#222222\",\r\n  secondaryButtonBG: \"linear-gradient(43deg, #4158D0 0%, #C850C0 46%, #FFCC70 100%)\",\r\n  secondaryButtonHoverBG: \"rgba(54, 56, 64, 1)\",\r\n<<<<<<< Updated upstream\r\n  outlinedPrimaryButtonHoverBG: \"#F8CC82\",\r\n=======\r\n  outlinedPrimaryButtonHoverBG: \"#d1d1d1\",\r\n>>>>>>> Stashed changes\r\n  outlinedPrimaryButtonHoverColor: \"#333333\",\r\n  outlinedSecondaryButtonHoverBG: \"#FCFCFC\",\r\n  outlinedSecondaryButtonHoverColor: \"#333333\",\r\n  containedSecondaryButtonHoverBG: \"#363840\",\r\n};\r\n\r\nexport const girth = responsiveFontSizes(\r\n  createTheme(\r\n    {\r\n      primary: {\r\n        main: girthTheme.color,\r\n      },\r\n      palette: {\r\n        type: \"dark\",\r\n        background: {\r\n          default: girthTheme.backgroundColor,\r\n          paper: girthTheme.paperBg,\r\n        },\r\n        contrastText: girthTheme.color,\r\n        primary: {\r\n          main: girthTheme.color,\r\n        },\r\n        neutral: {\r\n          main: girthTheme.color,\r\n          secondary: girthTheme.gray,\r\n        },\r\n        text: {\r\n          primary: girthTheme.color,\r\n          secondary: girthTheme.gray,\r\n        },\r\n      },\r\n      typography: {\r\n        fontFamily: \"CoHeadline\",\r\n      },\r\n      props: {\r\n        MuiSvgIcon: {\r\n          htmlColor: girthTheme.color,\r\n        },\r\n      },\r\n      overrides: {\r\n        MuiCssBaseline: {\r\n          \"@global\": {\r\n            \"@font-face\": fonts,\r\n            body: {\r\n              background: girthTheme.background,\r\n            },\r\n          },\r\n        },\r\n        MuiPaper: {\r\n          root: {\r\n            \"&.ohm-menu\": {\r\n              backgroundColor: girthTheme.menuBg,\r\n            },\r\n            \"&.ohm-modal\": {\r\n              backgroundColor: girthTheme.menuBg,\r\n            },\r\n          },\r\n        },\r\n        MuiBackdrop: {\r\n          root: {\r\n            backgroundColor: \"rgba(100, 100, 100, 0.41)\",\r\n          },\r\n        },\r\n        MuiLink: {\r\n          root: {\r\n            color: girthTheme.color,\r\n            \"&:hover\": {\r\n              color: girthTheme.textHighlightColor,\r\n              textDecoration: \"none\",\r\n              \"&.active\": {\r\n                color: girthTheme.color,\r\n              },\r\n            },\r\n            \"&.active\": {\r\n              color: girthTheme.color,\r\n              textDecoration: \"underline\",\r\n            },\r\n          },\r\n        },\r\n        MuiTableCell: {\r\n          root: {\r\n            color: girthTheme.color,\r\n          },\r\n        },\r\n        MuiToggleButton: {\r\n          root: {\r\n            backgroundColor: girthTheme.paperBg,\r\n            \"&:hover\": {\r\n              backgroundColor: girthTheme.secondaryButtonHoverBG,\r\n            },\r\n            selected: {\r\n              backgroundColor: girthTheme.secondaryButtonHoverBG,\r\n            },\r\n          },\r\n        },\r\n        MuiButton: {\r\n          containedPrimary: {\r\n            color: \"#333333\",\r\n            backgroundColor: girthTheme.primaryButtonBG,\r\n            \"&:hover\": {\r\n              backgroundColor: girthTheme.primaryButtonHoverBG,\r\n              color: girthTheme.primaryButtonHoverColor,\r\n            },\r\n            \"@media (hover:none)\": {\r\n              color: girthTheme.color,\r\n              backgroundColor: girthTheme.primaryButtonBG,\r\n              \"&:hover\": {\r\n                backgroundColor: girthTheme.primaryButtonHoverBG,\r\n              },\r\n            },\r\n          },\r\n          containedSecondary: {\r\n            backgroundColor: girthTheme.paperBg,\r\n            color: girthTheme.color,\r\n            \"&:hover\": {\r\n              backgroundColor: girthTheme.secondaryButtonHoverBG,\r\n            },\r\n            \"@media (hover:none)\": {\r\n              color: girthTheme.color,\r\n              backgroundColor: girthTheme.paperBg,\r\n              \"&:hover\": {\r\n                backgroundColor: girthTheme.secondaryButtonHoverBG,\r\n              },\r\n            },\r\n          },\r\n          outlinedPrimary: {\r\n            color: girthTheme.gold,\r\n            borderColor: girthTheme.gold,\r\n            \"&:hover\": {\r\n              color: girthTheme.outlinedPrimaryButtonHoverColor,\r\n              backgroundColor: girthTheme.outlinedPrimaryButtonHoverBG,\r\n            },\r\n          },\r\n          outlinedSecondary: {\r\n            color: girthTheme.color,\r\n            borderColor: girthTheme.color,\r\n            \"&:hover\": {\r\n              color: girthTheme.outlinedSecondaryButtonHoverColor,\r\n              backgroundColor: girthTheme.outlinedSecondaryButtonHoverBG,\r\n              borderColor: \"#333333\",\r\n            },\r\n          },\r\n          textPrimary: {\r\n            color: \"#A3A3A3\",\r\n            \"&:hover\": {\r\n              color: girthTheme.gold,\r\n              backgroundColor: \"#00000000\",\r\n            },\r\n            \"&:active\": {\r\n              color: girthTheme.gold,\r\n<<<<<<< Updated upstream\r\n              borderBottom: \"#F8CC82\",\r\n=======\r\n              borderBottom: \"#d1d1d1\",\r\n>>>>>>> Stashed changes\r\n            },\r\n          },\r\n          textSecondary: {\r\n            color: girthTheme.color,\r\n            \"&:hover\": {\r\n              color: girthTheme.textHighlightColor,\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n    commonSettings,\r\n  ),\r\n);\r\n","C:\\alphaomega\\temp33\\src\\slices\\AccountSlice.ts",[],"C:\\alphaomega\\temp33\\src\\slices\\PendingTxnsSlice.ts",[],"C:\\alphaomega\\temp33\\src\\slices\\LusdSlice.ts",[],"C:\\alphaomega\\temp33\\src\\slices\\AppSlice.ts",[],"C:\\alphaomega\\temp33\\src\\slices\\PoolThunk.ts",[],"C:\\alphaomega\\temp33\\src\\slices\\BondSlice.ts",[],"C:\\alphaomega\\temp33\\src\\slices\\MessagesSlice.ts",[],"C:\\alphaomega\\temp33\\src\\components\\Sidebar\\NavDrawer.jsx",[],"C:\\alphaomega\\temp33\\src\\components\\Sidebar\\Sidebar.jsx",[],"C:\\alphaomega\\temp33\\src\\components\\TopBar\\TopBar.jsx",[],"C:\\alphaomega\\temp33\\src\\hooks\\useSegmentAnalytics.js",[],"C:\\alphaomega\\temp33\\src\\helpers\\NodeHelper.ts",[],[],"C:\\alphaomega\\temp33\\src\\helpers\\Environment.ts",["366","367","368","369","370","371","372","373"],"/**\r\n * Access `process.env` in an environment helper\r\n * Usage: `EnvHelper.env`\r\n * - Other static methods can be added as needed per\r\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes/static\r\n */\r\nexport class EnvHelper {\r\n\r\n  /**\r\n   * @returns `process.env`\r\n   */\r\n   \r\n  static env = process.env;\r\n  static mumbaiTestnetURI = ``;\r\n  static polygonURI = ``;\r\n  static bscTestnetURI = ``;\r\n  static whitespaceRegex = /\\s+/;\r\n\r\n  /**\r\n   * Returns env contingent segment api key\r\n   * @returns segment\r\n   */\r\n   \r\n  static getSegmentKey() {\r\n    return EnvHelper.env.REACT_APP_SEGMENT_API_KEY;\r\n  }\r\n\r\n  static isNotEmpty(envVariable: string) {\r\n    if (envVariable.length > 10) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n\r\n /**\r\n   * NOTE(appleseed): Moralis IDs are only used as Fallbacks & are not Mandatory\r\n   * @returns {Array} Array of Moralis API Ids\r\n   */\r\n   \r\n  static getMoralisIdList() {\r\n    let MORALIS_ID_LIST: string[];\r\n\r\n    // split the provided API keys on whitespace\r\n    if (EnvHelper.env.REACT_APP_MORALIS_IDS && EnvHelper.isNotEmpty(EnvHelper.env.REACT_APP_MORALIS_IDS)) {\r\n      MORALIS_ID_LIST = EnvHelper.env.REACT_APP_MORALIS_IDS.split(new RegExp(EnvHelper.whitespaceRegex));\r\n    } else {\r\n      MORALIS_ID_LIST = [];\r\n    }\r\n\r\n    // now add the uri path\r\n    if (MORALIS_ID_LIST.length > 0) {\r\n      MORALIS_ID_LIST = MORALIS_ID_LIST.map(moralisID => ``);\r\n    } else {\r\n      MORALIS_ID_LIST = [];\r\n    }\r\n    return MORALIS_ID_LIST;\r\n  }\r\n\r\n  /**\r\n   * @returns {Array} Array of node url addresses or empty set\r\n   * node url addresses can be whitespace-separated string of \"https\" addresses\r\n   * - functionality for Websocket addresses has been deprecated due to issues with WalletConnect\r\n   *     - WalletConnect Issue: https://github.com/WalletConnect/walletconnect-monorepo/issues/193\r\n   */\r\n   \r\n  static getSelfHostedNode() {\r\n    let URI_LIST: string[];\r\n    if (EnvHelper.env.REACT_APP_SELF_HOSTED_NODE && EnvHelper.isNotEmpty(EnvHelper.env.REACT_APP_SELF_HOSTED_NODE)) {\r\n      URI_LIST = EnvHelper.env.REACT_APP_SELF_HOSTED_NODE.split(new RegExp(EnvHelper.whitespaceRegex));\r\n    } else {\r\n      URI_LIST = [];\r\n    }\r\n    return URI_LIST;\r\n  }\r\n\r\n  /**\r\n   * in development will always return the `ethers` community key url even if .env is blank\r\n   * in prod if .env is blank API connections will fail\r\n   * @returns array of API urls\r\n   */\r\n   \r\n  static getAPIUris() {\r\n    let ALL_URIs = EnvHelper.getSelfHostedNode();\r\n    if (EnvHelper.env.NODE_ENV === \"development\" && ALL_URIs.length === 0) {\r\n      // push in the common ethers key in development\r\n      ALL_URIs.push(\"https://hkxjqt7bwz2j.usemoralis.com:2053/server\");\r\n    }\r\n    if (ALL_URIs.length === 0) console.error(\"API keys must be set in the .env\");\r\n    return ALL_URIs;\r\n  }\r\n\r\n  static getFallbackURIs() {\r\n    const ALL_URIs = [...EnvHelper.getMoralisIdList()];\r\n    return ALL_URIs;\r\n  }\r\n\r\n  static getGeoapifyAPIKey() {\r\n    var apiKey = EnvHelper.env.REACT_APP_GEOAPIFY_API_KEY;\r\n    if (!apiKey) {\r\n      console.warn(\"Missing REACT_APP_GEOAPIFY_API_KEY environment variable\");\r\n      return null;\r\n    }\r\n\r\n    return apiKey;\r\n  }\r\n}\r\n","C:\\alphaomega\\temp33\\src\\hooks\\useTheme.ts",[],"C:\\alphaomega\\temp33\\src\\hooks\\Bonds.ts",[],"C:\\alphaomega\\temp33\\src\\helpers\\QueryParameterHelper.ts",[],"C:\\alphaomega\\temp33\\src\\themes\\global.js",[],"C:\\alphaomega\\temp33\\src\\components\\Sidebar\\NavContent.jsx",["374","375","376","377","378"],"import { useCallback, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Social from \"./Social\";\r\nimport externalUrls from \"./externalUrls\";\r\nimport { ReactComponent as BondIcon } from \"../../assets/icons/bond.svg\";\r\nimport { ReactComponent as ActiveBondIcon } from \"../../assets/icons/active-bond.svg\";\r\nimport { ReactComponent as StakeIcon } from \"../../assets/icons/stake.svg\";\r\nimport { ReactComponent as ActiveStakeIcon } from \"../../assets/icons/active-stake.svg\";\r\nimport { ReactComponent as DashboardIcon } from \"../../assets/icons/dashboard.svg\";\r\nimport { ReactComponent as AlphaIcon } from \"../../assets/icons/alphaHeader.svg\";\r\nimport { ReactComponent as WalletIcon } from \"../../assets/icons/wallet.svg\";\r\n// import { ReactComponent as PoolTogetherIcon } from \"../../assets/icons/33-together.svg\";\r\nimport { trim, shorten } from \"../../helpers\";\r\nimport { useAddress, useWeb3Context } from \"src/hooks/web3Context\";\r\nimport useBonds from \"../../hooks/Bonds\";\r\nimport { Paper, Link, Box, Typography, SvgIcon } from \"@material-ui/core\";\r\nimport { Skeleton } from \"@material-ui/lab\";\r\nimport \"./sidebar.scss\";\r\n\r\nfunction NavContent() {\r\n  const [isActive] = useState();\r\n  const [activeIcon, setActiveIcon] = useState();\r\n  const address = useAddress();\r\n  const { bonds, realBonds } = useBonds();\r\n  const { chainID } = useWeb3Context();\r\n\r\n  const checkPage = useCallback((match, location, page) => {\r\n    const currentPath = location.pathname.replace(\"/\", \"\");\r\n    if (currentPath.indexOf(\"dashboard\") >= 0 && page === \"dashboard\") {\r\n      setActiveIcon(\"dashboard\");\r\n      return true;\r\n    }\r\n    if (currentPath.indexOf(\"stake\") >= 0 && page === \"stake\") {\r\n      setActiveIcon(\"stake\");\r\n      return true;\r\n    }\r\n    if (currentPath.indexOf(\"claim\") >= 0 && page === \"claim\") {\r\n      setActiveIcon(\"claim\");\r\n      return true;\r\n    }\r\n    if ((currentPath.indexOf(\"bonds\") >= 0 || currentPath.indexOf(\"choose_bond\") >= 0) && page === \"bonds\") {\r\n      setActiveIcon(\"bonds\");\r\n      return true;\r\n    }\r\n    return false;\r\n  }, []);\r\n\r\n  return (\r\n    <Paper className=\"dapp-sidebar\">\r\n      <Box className=\"dapp-sidebar-inner\" display=\"flex\" justifyContent=\"space-between\" flexDirection=\"column\">\r\n        <div className=\"dapp-menu-top\" align=\"center\">\r\n          <Box className=\"branding-header\">\r\n            <Link href=\"https://alphadao.financial\" target=\"_blank\">\r\n               <SvgIcon\r\n                color=\"primary\"\r\n                component={OlympusIcon}\r\n                viewBox=\"0 0 151 100\"\r\n                style={{ minWdth: \"151px\", minHeight: \"100px\", width: \"151px\" }}\r\n              /> \r\n            </Link>\r\n\r\n             {address && (\r\n              <div className=\"wallet-link\">\r\n                <Link href={`https://testnet.bscscan.com/address/${address}`} target=\"_blank\">\r\n                  {shorten(address)}\r\n                </Link>\r\n              </div>\r\n            )} \r\n          </Box>\r\n\r\n          <div className=\"dapp-menu-links\">\r\n            <div className=\"dapp-nav\" id=\"navbarNav\">\r\n              <Link\r\n                component={NavLink}\r\n                id=\"dash-nav\"\r\n                to=\"/dashboard\"\r\n                isActive={(match, location) => {\r\n                  return checkPage(match, location, \"dashboard\");\r\n                }}\r\n                className={`button-dapp-menu ${isActive ? \"active\" : \"\"}`}\r\n              >\r\n                <Typography variant=\"h6\">\r\n                  <SvgIcon color=\"primary\" component={DashboardIcon} />\r\n                  Dashboard\r\n                </Typography>\r\n              </Link>\r\n\r\n              <Link\r\n                component={NavLink}\r\n                id=\"stake-nav\"\r\n                to=\"/stake\"\r\n                isActive={(match, location) => {\r\n                  return checkPage(match, location, \"stake\");\r\n                }}\r\n                className={`button-dapp-menu ${isActive ? \"active\" : \"\"}`}\r\n              >\r\n                <Typography variant=\"h6\">\r\n                  <SvgIcon color=\"primary\" component={activeIcon === \"stake\" ? ActiveStakeIcon : StakeIcon} />\r\n                  Stake\r\n                </Typography>\r\n              </Link>\r\n\r\n              {/*<Link*/}\r\n              {/*  component={NavLink}*/}\r\n              {/*  id=\"33-together-nav\"*/}\r\n              {/*  to=\"/33-together\"*/}\r\n              {/*  isActive={(match, location) => {*/}\r\n              {/*    return checkPage(match, location, \"33-together\");*/}\r\n              {/*  }}*/}\r\n              {/*  className={`button-dapp-menu ${isActive ? \"active\" : \"\"}`}*/}\r\n              {/*>*/}\r\n              {/*  <Typography variant=\"h6\">*/}\r\n              {/*    <SvgIcon color=\"primary\" component={PoolTogetherIcon} />*/}\r\n              {/*    3,3 Together*/}\r\n              {/*  </Typography>*/}\r\n              {/*</Link>*/}\r\n\r\n              <Link\r\n                component={NavLink}\r\n                id=\"bond-nav\"\r\n                to=\"/bonds\"\r\n                isActive={(match, location) => {\r\n                  return checkPage(match, location, \"bonds\");\r\n                }}\r\n                className={`button-dapp-menu ${isActive ? \"active\" : \"\"}`}\r\n              >\r\n                <Typography variant=\"h6\">\r\n                  <SvgIcon color=\"primary\" component={activeIcon === \"bonds\" ? ActiveBondIcon : BondIcon} />\r\n                  Bond\r\n                </Typography>\r\n              </Link>\r\n\r\n              <div className=\"dapp-menu-data discounts\">\r\n                <div className=\"bond-discounts\">\r\n                  <Typography variant=\"body2\">Bond discounts</Typography>\r\n                  {bonds.map((bond, i) => (\r\n                    <Link component={NavLink} to={`/bonds/${bond.name}`} key={i} className={\"bond\"}>\r\n                      {!bond.bondDiscount ? (\r\n                        <Skeleton variant=\"text\" width={\"150px\"} />\r\n                      ) : (\r\n                        <Typography variant=\"body2\">\r\n                          {bond.displayName}\r\n                          <span className=\"bond-pair-roi\">\r\n                            {bond.bondDiscount && trim(bond.bondDiscount * 100, 2)}%\r\n                          </span>\r\n                        </Typography>\r\n                      )}\r\n                    </Link>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              <div className=\"dapp-menu-data discounts\">\r\n                <div className=\"bond-discounts\">\r\n                  <Typography variant=\"body2\">Bond with real world assets</Typography>\r\n                  {realBonds &&\r\n                    realBonds.map((realBond, i) => (\r\n                      <Link disabled component={NavLink} to={`/bonds/${realBond.name}`} key={i} className={\"bond\"}>\r\n                        {/*<Link className={\"bond\"}>*/}\r\n                        {!realBond.bondDiscount ? (\r\n                          <Skeleton variant=\"text\" width={\"150px\"} />\r\n                        ) : (\r\n                          <Typography variant=\"body2\">\r\n                            {realBond.displayName}\r\n                            <span className=\"bond-pair-roi\">\r\n                              {realBond.bondDiscount}\r\n                              {/*  {realBond.bondDiscount && trim(realBond.bondDiscount * 100, 2)}%*/}\r\n                            </span>\r\n                          </Typography>\r\n                        )}\r\n                      </Link>\r\n                    ))}\r\n                </div>\r\n              </div>\r\n              {/*\r\n              <Link\r\n                component={NavLink}\r\n                id=\"claim-nav\"\r\n                to=\"/claim\"\r\n                isActive={(match, location) => {\r\n                  return checkPage(match, location, \"claim\");\r\n                }}\r\n                className={`button-dapp-menu ${isActive ? \"active\" : \"\"}`}\r\n              >\r\n                <Typography variant=\"h6\">\r\n                  <SvgIcon color=\"primary\" component={WalletIcon} />\r\n                  Early? Claim\r\n                </Typography>\r\n              </Link> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Box className=\"dapp-menu-bottom\" display=\"flex\" justifyContent=\"flex-end\" flexDirection=\"column\">\r\n          <div className=\"dapp-menu-external-links\">\r\n            {Object.keys(externalUrls).map((link, i) => {\r\n              return (\r\n                <Link key={i} href={`${externalUrls[link].url}`} target=\"_blank\">\r\n                  <Typography variant=\"h6\">{externalUrls[link].icon}</Typography>\r\n                  <Typography variant=\"h6\">{externalUrls[link].title}</Typography>\r\n                </Link>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"dapp-menu-social\">\r\n            <Social />\r\n          </div>\r\n        </Box>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default NavContent;\r\n\r\n\r\n\r\n","C:\\alphaomega\\temp33\\src\\components\\TopBar\\ThemeSwitch.jsx",[],"C:\\alphaomega\\temp33\\src\\components\\TopBar\\OhmMenu.jsx",[],"C:\\alphaomega\\temp33\\src\\components\\TopBar\\ConnectMenu.jsx",[],"C:\\alphaomega\\temp33\\src\\themes\\fonts.js",[],"C:\\alphaomega\\temp33\\src\\helpers\\userAnalyticHelpers.js",[],"C:\\alphaomega\\temp33\\src\\components\\Loading\\LoadingSplash.jsx",[],"C:\\alphaomega\\temp33\\src\\components\\Messages\\Messages.jsx",[],"C:\\alphaomega\\temp33\\src\\views\\404\\NotFound.jsx",[],"C:\\alphaomega\\temp33\\src\\constants.ts",["379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395"],"export const THE_GRAPH_URL = \"https://api.thegraph.com/subgraphs/name/drondin/olympus-graph\";\r\nexport const EPOCH_INTERVAL = 2200;\r\n\r\n// NOTE could get this from an outside source since it changes slightly over time\r\nexport const BLOCK_RATE_SECONDS = 2.2;\r\n\r\nexport const TOKEN_DECIMALS = 9;\r\n\r\nexport const POOL_GRAPH_URLS = {\r\n  4: \"https://api.thegraph.com/subgraphs/name/pooltogether/rinkeby-v3_4_3\",\r\n  1: \"https://api.thegraph.com/subgraphs/name/pooltogether/pooltogether-v3_4_3\",\r\n};\r\n\r\ninterface IAddresses {\r\n  [key: number]: { [key: string]: string };\r\n}\r\n\r\nexport const addresses: IAddresses = {\r\n  97: {\r\n    DAI_ADDRESS: \"0x5edC7520b04Ec84FEeAcA55490d7b9e32116Df08\", // duplicate\r\n    BNB_ADDRESS: \"0x1B408886aBBDfdBDC0CC5FFF2D0E982E593F4672\",\r\n    PID_ADDRESS: \"0x78888343fa41EF68FbCFA53E0C110eCeC08886B1\",\r\n    STAKING_ADDRESS: \"0x0D1ef04547846143c2D364d22319b1A9A9276f10\", // The new staking contract\r\n    STAKING_HELPER_ADDRESS: \"0xc9744b3eA6f968F3daeAAE0061b5Bddd76BBEe01\", // Helper contract used for Staking only\r\n    SPID_ADDRESS: \"0x02CE7e58BC21871Fc1d6173C3C8c778D7269E795\",\r\n    DISTRIBUTOR_ADDRESS: \"0xdA83C8f209aba132C4BC0C8B2c35082C22157199\",\r\n    BONDINGCALC_ADDRESS: \"0xC9c89Bde9E3BA9bEfA4a743046f2d128FEC48d42\",\r\n    TREASURY_ADDRESS: \"0xca7bAa1FdCA16230408Ab28d3E84d9f17C488eAB\",\r\n    REDEEM_HELPER_ADDRESS: \"0xE8eE0bE2d8BAABf9924d7f1459d9467E4399badB\",\r\n    IDO_ADDRESS:'0x1B408886aBBDfdBDC0CC5FFF2D0E982E593F4672',\r\n    BUSD_ADDRESS:'0x8301f2213c0eed49a7e28ae4c3e91722919b8b47'\r\n  },\r\n   \r\n//  OHM: 0x78888343fa41EF68FbCFA53E0C110eCeC08886B1\r\n//  DAI: 0x5edC7520b04Ec84FEeAcA55490d7b9e32116Df08\r\n//  Frax: 0x225f09d861f5FD0aD0422597Ed32eFC26Bfd7C87\r\n//  Treasury: 0xca7bAa1FdCA16230408Ab28d3E84d9f17C488eAB\r\n//  Calc: 0xC9c89Bde9E3BA9bEfA4a743046f2d128FEC48d42\r\n//  Staking: 0x0D1ef04547846143c2D364d22319b1A9A9276f10\r\n//  sOHM: 0x02CE7e58BC21871Fc1d6173C3C8c778D7269E795\r\n//  Distributor 0xdA83C8f209aba132C4BC0C8B2c35082C22157199\r\n//  Staking Wawrmup 0x57E399598bf5feE8240D31CE29093d1CFbc3a8Ed\r\n//  Staking Helper 0xc9744b3eA6f968F3daeAAE0061b5Bddd76BBEe01\r\n//  DAI Bond: 0x56AC9b37D4677fC8902C97C0B8F197687Dea03ac\r\n//  Frax Bond: 0x2A33a00d58e2A918EF9417a269B0F2043529a57B\r\n\r\n  56: {\r\n    DAI_ADDRESS: \"0x5edC7520b04Ec84FEeAcA55490d7b9e32116Df08\", // duplicate\r\n    BNB_ADDRESS: \"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\",\r\n    PID_ADDRESS: \"0xce1aD4E2810E413e2e3684DeCC58A0Bd01c907d9\",\r\n    STAKING_ADDRESS: \"0x0D1ef04547846143c2D364d22319b1A9A9276f10\", // The new staking contract\r\n    STAKING_HELPER_ADDRESS: \"0xc9744b3eA6f968F3daeAAE0061b5Bddd76BBEe01\", // Helper contract used for Staking only\r\n    SPID_ADDRESS: \"0x06cae0720fA3147E2d8dB66A18B7883221D84246\",\r\n    DISTRIBUTOR_ADDRESS: \"0x8421aA5b4f863c5105998F0cbae512Dd3855fA12\",\r\n    BONDINGCALC_ADDRESS: \"0x855D0eb9CcAFB566dEeBc7089396c5f8af4937C2\",\r\n    TREASURY_ADDRESS: \"0x950D8C342bC6e0Bcf9c1DEb87D039947f35b3eb9\",\r\n    REDEEM_HELPER_ADDRESS: \"0xE8eE0bE2d8BAABf9924d7f1459d9467E4399badB\",\r\n    IDO_ADDRESS:'0x3Ae07374d7C89f608906321444e8AFdED91aDA5E',\r\n    BUSD_ADDRESS:'0xe9e7cea3dedca5984780bafc599bd69add087d56'\r\n  },\r\n};\r\n","C:\\alphaomega\\temp33\\src\\helpers\\OhmLusdCrucible.ts",[],"C:\\alphaomega\\temp33\\src\\helpers\\33Together.ts",[],"C:\\alphaomega\\temp33\\src\\helpers\\AllBonds.ts",["396"],"import { StableBond, LPBond, NetworkID, CustomBond, BondType } from \"src/lib/Bond\";\r\nimport { addresses } from \"src/constants\";\r\n\r\nimport { ReactComponent as DaiImg } from \"src/assets/tokens/DAI.svg\";\r\nimport { ReactComponent as GuruDaiImg } from \"src/assets/tokens/OX-DAI.svg\";\r\nimport { ReactComponent as FraxImg } from \"src/assets/tokens/FRAX.svg\";\r\nimport { ReactComponent as GuruFraxImg } from \"src/assets/tokens/OX-FRAX.svg\";\r\nimport { ReactComponent as GuruLusdImg } from \"src/assets/tokens/OX-LUSD.svg\";\r\nimport { ReactComponent as GuruEthImg } from \"src/assets/tokens/OX-WETH.svg\";\r\nimport { ReactComponent as wETHImg } from \"src/assets/tokens/wETH.svg\";\r\nimport { ReactComponent as LusdImg } from \"src/assets/tokens/LUSD.svg\";\r\n\r\nimport { abi as FraxOhmBondContract } from \"src/abi/bonds/OhmFraxContract.json\";\r\nimport { abi as BondOhmDaiContract } from \"src/abi/bonds/OhmDaiContract.json\";\r\nimport { abi as BondOhmLusdContract } from \"src/abi/bonds/OhmLusdContract.json\";\r\nimport { abi as BondOhmEthContract } from \"src/abi/bonds/OhmEthContract.json\";\r\n\r\nimport { abi as DaiBondContract } from \"src/abi/bonds/DaiContract.json\";\r\nimport { abi as ReserveOhmLusdContract } from \"src/abi/reserves/OhmLusd.json\";\r\nimport { abi as ReserveOhmDaiContract } from \"src/abi/reserves/OhmDai.json\";\r\nimport { abi as ReserveOhmFraxContract } from \"src/abi/reserves/OhmFrax.json\";\r\nimport { abi as ReserveOhmEthContract } from \"src/abi/reserves/OhmEth.json\";\r\n\r\nimport { abi as FraxBondContract } from \"src/abi/bonds/FraxContract.json\";\r\nimport { abi as LusdBondContract } from \"src/abi/bonds/LusdContract.json\";\r\nimport { abi as EthBondContract } from \"src/abi/bonds/EthContract.json\";\r\n\r\nimport { abi as ierc20Abi } from \"src/abi/IERC20.json\";\r\nimport { getBondCalculator } from \"src/helpers/BondCalculator\";\r\nimport { BigNumberish } from \"ethers\";\r\n\r\n// import ERC20 from \"src/lib/ERC20\";\r\n//import { StaticJsonRpcProvider } from \"@ethersproject/providers\";\r\n\r\n// TODO(zx): Further modularize by splitting up reserveAssets into vendor token definitions\r\n//   and include that in the definition of a bond\r\nexport const dai = new StableBond({\r\n  name: \"dai\",\r\n  displayName: \"DAI\",\r\n  bondToken: \"DAI\",\r\n  isAvailable: { [NetworkID.Mumbai]: true, [NetworkID.Polygon]: true },\r\n  bondIconSvg: DaiImg,\r\n  bondContractABI: DaiBondContract,\r\n  networkAddrs: {\r\n    [NetworkID.Mumbai]: {\r\n      bondAddress: \"0x3c2b484057e7ba8832c2abc7774b30fba691c789\",\r\n      reserveAddress: \"0x52439209dc5f526375b8ab036ef9ea15bf0ce63b\",\r\n    },\r\n    [NetworkID.Polygon]: {\r\n      bondAddress: \"0xFDAACD04f8ad605e928F4A44864FF825dCd4796d\",\r\n      reserveAddress: \"0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063\",\r\n    },\r\n  },\r\n});\r\n\r\n// export const frax = new StableBond({\r\n//   name: \"frax\",\r\n//   displayName: \"FRAX\",\r\n//   bondToken: \"FRAX\",\r\n//   isAvailable: { [NetworkID.Mainnet]: true, [NetworkID.Testnet]: true },\r\n//   bondIconSvg: FraxImg,\r\n//   bondContractABI: FraxBondContract,\r\n//   networkAddrs: {\r\n//     [NetworkID.Mainnet]: {\r\n//       bondAddress: \"0x8510c8c2B6891E04864fa196693D44E6B6ec2514\",\r\n//       reserveAddress: \"0x853d955acef822db058eb8505911ed77f175b99e\",\r\n//     },\r\n//     [NetworkID.Testnet]: {\r\n//       bondAddress: \"0xF651283543fB9D61A91f318b78385d187D300738\",\r\n//       reserveAddress: \"0x2F7249cb599139e560f0c81c269Ab9b04799E453\",\r\n//     },\r\n//   },\r\n// });\r\n\r\nexport const ohm_dai = new LPBond({\r\n  name: \"OX-BUSD\",\r\n  displayName: \"OX-BUSD LP\",\r\n  bondToken: \"OX-BUSD\",\r\n  bondIconSvg: OhmDaiImg,\r\n  bondContractABI: BondOhmDaiContract,\r\n  reserveContract: ReserveOhmDaiContract,\r\n  networkAddrs: {\r\n    [NetworkID.Mainnet]: {\r\n      bondAddress: \"0x7F1b0Dab5C7c8d7a63758946f853049bC53f4306\",\r\n      reserveAddress: \"0x96b6d5482313eECC031aFEb2Fb32da2BA7439BA2\",\r\n    },\r\n    [NetworkID.Testnet]: {\r\n      bondAddress: \"0xcF449dA417cC36009a1C6FbA78918c31594B9377\",\r\n      reserveAddress: \"0x8D5a22Fb6A1840da602E56D1a260E56770e0bCE2\",\r\n    },\r\n  },\r\n  lpUrl:\r\n   `https://pancakeswap.finance/add/${addresses[NetworkID.Mainnet].DAI_ADDRESS}/${addresses[NetworkID.Mainnet].PID_ADDRESS}`,\r\n});\r\nexport const ohm_eth = new LPBond({\r\n  name: \"OX-BNB\",\r\n  displayName: \"OX-BNB LP\",\r\n  bondToken: \"OX-BNB\",\r\n  bondIconSvg: OhmDaiImg,\r\n  bondContractABI: BondOhmDaiContract,\r\n  reserveContract: ReserveOhmDaiContract,\r\n  networkAddrs: {\r\n    [NetworkID.Mumbai]: {\r\n      bondAddress: \"0x695e445610c2dad7fb166acae7636a3b29936364\",\r\n      reserveAddress: \"0xf86868748f973322e38152f75275777a34d8e3fd\",\r\n    },\r\n    [NetworkID.Polygon]: {\r\n      bondAddress: \"0xbbA07bd5B20B63249398b831082ace6415afB7E0\",\r\n      reserveAddress: \"0x7c9B16d845FE163F464d265193cC2B4eE3faC326\",\r\n    },\r\n  },\r\n  lpUrl:\r\n    \"https://app.sushi.com/add/0x383518188c0c6d7730d91b2c03a03c837814a899/0x6b175474e89094c44da98b954eedeac495271d0f\",\r\n});\r\n\r\n// export const ohm_frax = new LPBond({\r\n//   name: \"ohm_frax_lp\",\r\n//   displayName: \"OX-FRAX LP\",\r\n//   bondToken: \"FRAX\",\r\n//   isAvailable: { [NetworkID.Mainnet]: true, [NetworkID.Testnet]: true },\r\n//   bondIconSvg: OhmFraxImg,\r\n//   bondContractABI: FraxOhmBondContract,\r\n//   reserveContract: ReserveOhmFraxContract,\r\n//   networkAddrs: {\r\n//     [NetworkID.Mainnet]: {\r\n//       bondAddress: \"0xc20CffF07076858a7e642E396180EC390E5A02f7\",\r\n//       reserveAddress: \"0x2dce0dda1c2f98e0f171de8333c3c6fe1bbf4877\",\r\n//     },\r\n//     [NetworkID.Testnet]: {\r\n//       bondAddress: \"0x7BB53Ef5088AEF2Bb073D9C01DCa3a1D484FD1d2\",\r\n//       reserveAddress: \"0x11BE404d7853BDE29A3e73237c952EcDCbBA031E\",\r\n//     },\r\n//   },\r\n//   lpUrl:\r\n//     \"https://app.uniswap.org/#/add/v2/0x853d955acef822db058eb8505911ed77f175b99e/0x383518188c0c6d7730d91b2c03a03c837814a899\",\r\n// });\r\n\r\n// export const ohm_lusd = new LPBond({\r\n//   name: \"ohm_lusd_lp\",\r\n//   displayName: \"OHM-LUSD LP\",\r\n//   bondToken: \"LUSD\",\r\n//   isAvailable: { [NetworkID.Mainnet]: false, [NetworkID.Testnet]: true },\r\n//   bondIconSvg: GuruLusdImg,\r\n//   bondContractABI: BondOhmLusdContract,\r\n//   reserveContract: ReserveOhmLusdContract,\r\n//   networkAddrs: {\r\n//     [NetworkID.Mainnet]: {\r\n//       bondAddress: \"0xFB1776299E7804DD8016303Df9c07a65c80F67b6\",\r\n//       reserveAddress: \"0xfDf12D1F85b5082877A6E070524f50F6c84FAa6b\",\r\n//     },\r\n//     [NetworkID.Testnet]: {\r\n//       // NOTE (appleseed-lusd): using ohm-dai rinkeby contracts\r\n//       bondAddress: \"0xcF449dA417cC36009a1C6FbA78918c31594B9377\",\r\n//       reserveAddress: \"0x8D5a22Fb6A1840da602E56D1a260E56770e0bCE2\",\r\n//     },\r\n//   },\r\n//   lpUrl:\r\n//     \"https://app.sushi.com/add/0x383518188C0C6d7730D91b2c03a03C837814a899/0x5f98805A4E8be255a32880FDeC7F6728C6568bA0\",\r\n// });\r\n\r\n// export const ohm_weth = new CustomBond({\r\n//   name: \"ohm_weth_lp\",\r\n//   displayName: \"Guru-WETH LP\",\r\n//   bondToken: \"WETH\",\r\n//   isAvailable: { [NetworkID.Mainnet]: true, [NetworkID.Testnet]: true },\r\n//   bondIconSvg: GuruEthImg,\r\n//   bondContractABI: BondOhmEthContract,\r\n//   reserveContract: ReserveOhmEthContract,\r\n//   networkAddrs: {\r\n//     [NetworkID.Mainnet]: {\r\n//       bondAddress: \"0xB6C9dc843dEc44Aa305217c2BbC58B44438B6E16\",\r\n//       reserveAddress: \"0xfffae4a0f4ac251f4705717cd24cadccc9f33e06\",\r\n//     },\r\n//     [NetworkID.Testnet]: {\r\n//       // NOTE (unbanksy): using ohm-dai rinkeby contracts\r\n//       bondAddress: \"0xcF449dA417cC36009a1C6FbA78918c31594B9377\",\r\n//       reserveAddress: \"0x8D5a22Fb6A1840da602E56D1a260E56770e0bCE2\",\r\n//     },\r\n//   },\r\n//   bondType: BondType.LP,\r\n//   lpUrl:\r\n//     \"https://app.sushi.com/add/0x383518188c0c6d7730d91b2c03a03c837814a899/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\r\n//   customTreasuryBalanceFunc: async function (this: CustomBond, networkID, provider) {\r\n//     if (networkID === NetworkID.Mainnet) {\r\n//       const ethBondContract = this.getContractForBond(networkID, provider);\r\n//       let ethPrice: BigNumberish = await ethBondContract.assetPrice();\r\n//       ethPrice = Number(ethPrice.toString()) / Math.pow(10, 8);\r\n//       const token = this.getContractForReserve(networkID, provider);\r\n//       const tokenAddress = this.getAddressForReserve(networkID);\r\n//       const bondCalculator = getBondCalculator(networkID, provider);\r\n//       const tokenAmount = await token.balanceOf(addresses[networkID].TREASURY_ADDRESS);\r\n//       const valuation = await bondCalculator.valuation(tokenAddress, tokenAmount);\r\n//       const markdown = await bondCalculator.markdown(tokenAddress);\r\n//       let tokenUSD =\r\n//         (Number(valuation.toString()) / Math.pow(10, 9)) * (Number(markdown.toString()) / Math.pow(10, 18));\r\n//       return tokenUSD * Number(ethPrice.toString());\r\n//     } else {\r\n//       // NOTE (appleseed): using OHM-DAI on rinkeby\r\n//       const token = this.getContractForReserve(networkID, provider);\r\n//       const tokenAddress = this.getAddressForReserve(networkID);\r\n//       const bondCalculator = getBondCalculator(networkID, provider);\r\n//       const tokenAmount = await token.balanceOf(addresses[networkID].TREASURY_ADDRESS);\r\n//       const valuation = await bondCalculator.valuation(tokenAddress, tokenAmount);\r\n//       const markdown = await bondCalculator.markdown(tokenAddress);\r\n//       let tokenUSD =\r\n//         (Number(valuation.toString()) / Math.pow(10, 9)) * (Number(markdown.toString()) / Math.pow(10, 18));\r\n//       return tokenUSD;\r\n//     }\r\n//   },\r\n// });\r\n\r\n// HOW TO ADD A NEW BOND:\r\n// Is it a stableCoin bond? use `new StableBond`\r\n// Is it an LP Bond? use `new LPBond`\r\n// Add new bonds to this array!!\r\nexport const allBonds = [dai, guru_dai];\r\nexport const allBondsMap = allBonds.reduce((prevVal, bond) => {\r\n  return { ...prevVal, [bond.name]: bond };\r\n}, {});\r\n\r\n// Debug Log\r\n// console.log(allBondsMap);\r\nexport default allBonds;\r\n","C:\\alphaomega\\temp33\\src\\helpers\\BondCalculator.ts",[],"C:\\alphaomega\\temp33\\src\\views\\index.js",[],"C:\\alphaomega\\temp33\\src\\components\\Sidebar\\externalUrls.js",[],"C:\\alphaomega\\temp33\\src\\helpers\\index.tsx",["397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418"],"import { EPOCH_INTERVAL, BLOCK_RATE_SECONDS, addresses } from \"../constants\";\r\nimport { BigNumber, ethers } from \"ethers\";\r\nimport axios from \"axios\";\r\nimport { abi as PairContract } from \"../abi/PairContract.json\";\r\nimport { abi as RedeemHelperAbi } from \"../abi/RedeemHelper.json\";\r\n\r\nimport { SvgIcon } from \"@material-ui/core\";\r\nimport { ReactComponent as OhmImg } from \"../assets/tokens/token_OHM.svg\";\r\nimport { ReactComponent as SOhmImg } from \"../assets/tokens/token_sOHM.svg\";\r\nimport LogoImg from '../assets/ohm/logo.png'\r\n\r\nimport { ohm_dai } from \"./AllBonds\";\r\nimport { JsonRpcSigner, StaticJsonRpcProvider } from \"@ethersproject/providers\";\r\nimport { IBaseAsyncThunk } from \"src/slices/interfaces\";\r\n\r\n// NOTE (appleseed): this looks like an outdated method... we now have this data in the graph (used elsewhere in the app)\r\nexport async function getMarketPrice({ networkID, provider }: IBaseAsyncThunk) {\r\n  const ohm_dai_address = ohm_dai.getAddressForReserve(networkID);\r\n  const pairContract = new ethers.Contract(ohm_dai_address, PairContract, provider);\r\n  const reserves = await pairContract.getReserves();\r\n\r\n  \r\n  console.error(reserves[0].toString())\r\n  const reserves0 = getDisplayBalance(reserves[1],18)\r\n  const reserves1 = getDisplayBalance(reserves[0],9,2)\r\n\r\n  const marketPrice = (Number(reserves0))/Number(reserves1);\r\n\r\n  // console.error('测试参数')\r\n  // console.error(marketPrice)\r\n  // commit('set', { marketPrice: marketPrice / Math.pow(10, 9) });\r\n  return marketPrice;\r\n}\r\n\r\nexport async function getTokenPrice(tokenId = \"olympus\") {\r\n  const resp = await axios.get(`https://api.coingecko.com/api/v3/simple/price?ids=${tokenId}&vs_currencies=usd`);\r\n  let tokenPrice: number = resp.data[tokenId].usd;\r\n  return tokenPrice;\r\n}\r\n\r\nexport function shorten(str: string) {\r\n  if (str.length < 10) return str;\r\n  return `${str.slice(0, 6)}...${str.slice(str.length - 4)}`;\r\n}\r\n\r\nexport function formatCurrency(c: number, precision = 0) {\r\n  return new Intl.NumberFormat(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\",\r\n    maximumFractionDigits: precision,\r\n    minimumFractionDigits: precision,\r\n  }).format(c);\r\n}\r\n\r\nexport function trim(number = 0, precision = 0) {\r\n  // why would number ever be undefined??? what are we trimming?\r\n  const array = number.toString().split(\".\");\r\n  if (array.length === 1) return number.toString();\r\n  if (precision === 0) return array[0].toString();\r\n\r\n  const poppedNumber = array.pop() || \"0\";\r\n  array.push(poppedNumber.substring(0, precision));\r\n  const trimmedNumber = array.join(\".\");\r\n  return trimmedNumber;\r\n}\r\n\r\nexport function getRebaseBlock(currentBlock: number) {\r\n  return currentBlock + EPOCH_INTERVAL - (currentBlock % EPOCH_INTERVAL);\r\n}\r\n\r\nexport function secondsUntilBlock(startBlock: number, endBlock: number) {\r\n  const blocksAway = endBlock - startBlock;\r\n  console.error({\r\n    endBlock,\r\n    startBlock\r\n  })\r\n  const secondsAway = blocksAway * BLOCK_RATE_SECONDS;\r\n\r\n  return secondsAway;\r\n}\r\n\r\nexport function prettyVestingPeriod(currentBlock: number, vestingBlock: number) {\r\n  if (vestingBlock === 0) {\r\n    return \"\";\r\n  }\r\n\r\n  const seconds = secondsUntilBlock(currentBlock, vestingBlock);\r\n  if (seconds < 0) {\r\n    return \"Fully Vested\";\r\n  }\r\n  return prettifySeconds(seconds);\r\n}\r\n\r\nexport function prettifySeconds(seconds: number, resolution?: string) {\r\n  if (seconds !== 0 && !seconds) {\r\n    return \"\";\r\n  }\r\n\r\n  const d = Math.floor(seconds / (3600 * 24));\r\n  const h = Math.floor((seconds % (3600 * 24)) / 3600);\r\n  const m = Math.floor((seconds % 3600) / 60);\r\n\r\n  if (resolution === \"day\") {\r\n    return d + (d == 1 ? \" day\" : \" days\");\r\n  }\r\n\r\n  const dDisplay = d > 0 ? d + (d == 1 ? \" day, \" : \" days, \") : \"\";\r\n  const hDisplay = h > 0 ? h + (h == 1 ? \" hr, \" : \" hrs, \") : \"\";\r\n  const mDisplay = m > 0 ? m + (m == 1 ? \" min\" : \" mins\") : \"\";\r\n\r\n  let result = dDisplay + hDisplay + mDisplay;\r\n  if (mDisplay === \"\") {\r\n    result = result.slice(0, result.length - 2);\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nfunction getSohmTokenImage() {\r\n  return <img src={LogoImg} style={{ height: \"1rem\", width: \"1rem\",borderRadius:\"50%\"}}/>\r\n  // <SvgIcon component={SOhmImg} viewBox=\"0 0 100 100\" style={{ height: \"1rem\", width: \"1rem\" }} />;\r\n}\r\n\r\nexport function getOhmTokenImage(w?: number, h?: number) {\r\n  const height = h == null ? \"32px\" : `${h}px`;\r\n  const width = w == null ? \"32px\" : `${w}px`;\r\n  return <img src={LogoImg} style={{ height, width }} />\r\n  \r\n  // <SvgIcon component={OhmImg} viewBox=\"0 0 32 32\" style={{ height, width }} />;\r\n}\r\n\r\nexport function getTokenImage(name: string) {\r\n  if (name === \"ohm\") return getOhmTokenImage();\r\n  if (name === \"sohm\") return getSohmTokenImage();\r\n}\r\n\r\n// TS-REFACTOR-NOTE - Used for:\r\n// AccountSlice.ts, AppSlice.ts, LusdSlice.ts\r\nexport function setAll(state: any, properties: any) {\r\n  const props = Object.keys(properties);\r\n  props.forEach(key => {\r\n    state[key] = properties[key];\r\n  });\r\n}\r\n\r\nexport function contractForRedeemHelper({\r\n  networkID,\r\n  provider,\r\n}: {\r\n  networkID: number;\r\n  provider: StaticJsonRpcProvider | JsonRpcSigner;\r\n}) {\r\n  return new ethers.Contract(addresses[networkID].REDEEM_HELPER_ADDRESS as string, RedeemHelperAbi, provider);\r\n}\r\n\r\n/**\r\n * returns unix timestamp for x minutes ago\r\n * @param x minutes as a number\r\n */\r\nexport const minutesAgo = (x: number) => {\r\n  const now = new Date().getTime();\r\n  return new Date(now - x * 60000).getTime();\r\n};\r\n\r\n/**\r\n * subtracts two dates for use in 33-together timer\r\n * param (Date) dateA is the ending date object\r\n * param (Date) dateB is the current date object\r\n * returns days, hours, minutes, seconds\r\n * NOTE: this func previously used parseInt() to convert to whole numbers, however, typescript doesn't like\r\n * ... using parseInt on number params. It only allows parseInt on string params. So we converted usage to\r\n * ... Math.trunc which accomplishes the same result as parseInt.\r\n */\r\nexport const subtractDates = (dateA: Date, dateB: Date) => {\r\n  let msA: number = dateA.getTime();\r\n  let msB: number = dateB.getTime();\r\n\r\n  let diff: number = msA - msB;\r\n\r\n  let days: number = 0;\r\n  if (diff >= 86400000) {\r\n    days = Math.trunc(diff / 86400000);\r\n    diff -= days * 86400000;\r\n  }\r\n\r\n  let hours: number = 0;\r\n  if (days || diff >= 3600000) {\r\n    hours = Math.trunc(diff / 3600000);\r\n    diff -= hours * 3600000;\r\n  }\r\n\r\n  let minutes: number = 0;\r\n  if (hours || diff >= 60000) {\r\n    minutes = Math.trunc(diff / 60000);\r\n    diff -= minutes * 60000;\r\n  }\r\n\r\n  let seconds: number = 0;\r\n  if (minutes || diff >= 1000) {\r\n    seconds = Math.trunc(diff / 1000);\r\n  }\r\n  return {\r\n    days,\r\n    hours,\r\n    minutes,\r\n    seconds,\r\n  };\r\n};\r\n\r\n\r\nexport const getDisplayBalance = (balance: BigNumber, decimals = 18, fractionDigits = 4) => {\r\n  try{\r\n    if(balance){\r\n      // fractionDigits = decimals<=10 ?  2 : fractionDigits \r\n      const number = getBalance(balance, decimals - fractionDigits)\r\n      return String(parseFloat((number / 10 ** fractionDigits).toFixed(fractionDigits)))\r\n    }\r\n  }catch(e){\r\n    // console.error(e,'----------------balance-------------',balance)\r\n  }\r\n}\r\n\r\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\r\n  return getDisplayBalance(balance, decimals)\r\n};\r\n\r\nexport function getBalance(balance: BigNumber, decimals = 18) : number {\r\n  return balance.div(BigNumber.from(10).pow(decimals)).toNumber()\r\n}","C:\\alphaomega\\temp33\\src\\components\\Messages\\ConsoleInterceptor.js",[],"C:\\alphaomega\\temp33\\src\\views\\33Together\\33Together.jsx",[],"C:\\alphaomega\\temp33\\src\\components\\Sidebar\\Social.jsx",[],"C:\\alphaomega\\temp33\\src\\lib\\Bond.ts",["419"],"import { StaticJsonRpcProvider, JsonRpcSigner } from \"@ethersproject/providers\";\r\nimport { ethers } from \"ethers\";\r\n\r\nimport { abi as ierc20Abi } from \"src/abi/IERC20.json\";\r\nimport { getBondCalculator } from \"src/helpers/BondCalculator\";\r\nimport { EthContract, PairContract } from \"src/typechain\";\r\nimport { addresses } from \"src/constants\";\r\nimport React from \"react\";\r\n\r\nexport enum NetworkID {\r\n<<<<<<< Updated upstream\r\n  Mumbai = 80001,\r\n  Polygon = 137,\r\n=======\r\n  Mainnet = 56,\r\n  Testnet = 97,\r\n>>>>>>> Stashed changes\r\n}\r\n\r\nexport enum BondType {\r\n  StableAsset,\r\n  LP,\r\n}\r\n\r\nexport interface BondAddresses {\r\n  reserveAddress: string;\r\n  bondAddress: string;\r\n}\r\n\r\nexport interface NetworkAddresses {\r\n  [NetworkID.Mumbai]: BondAddresses;\r\n  [NetworkID.Polygon]: BondAddresses;\r\n}\r\n\r\nexport interface Available {\r\n  [NetworkID.Mumbai]?: boolean;\r\n  [NetworkID.Polygon]?: boolean;\r\n}\r\n\r\ninterface BondOpts {\r\n  name: string; // Internal name used for references\r\n  displayName: string; // Displayname on UI\r\n  isAvailable: Available; // set false to hide\r\n  bondIconSvg: React.ReactNode; //  SVG path for icons\r\n  bondContractABI: ethers.ContractInterface; // ABI for contract\r\n  networkAddrs: NetworkAddresses; // Mapping of network --> Addresses\r\n  bondToken: string; // Unused, but native token to buy the bond.\r\n}\r\n\r\n// Technically only exporting for the interface\r\nexport abstract class Bond {\r\n  // Standard Bond fields regardless of LP bonds or stable bonds.\r\n  readonly name: string;\r\n  readonly displayName: string;\r\n  readonly type: BondType;\r\n  readonly isAvailable: Available;\r\n  readonly bondIconSvg: React.ReactNode;\r\n  readonly bondContractABI: ethers.ContractInterface; // Bond ABI\r\n  readonly networkAddrs: NetworkAddresses;\r\n  readonly bondToken: string;\r\n\r\n  // The following two fields will differ on how they are set depending on bond type\r\n  abstract isLP: Boolean;\r\n  abstract reserveContract: ethers.ContractInterface; // Token ABI\r\n  abstract displayUnits: string;\r\n\r\n  // Async method that returns a Promise\r\n  abstract getTreasuryBalance(networkID: NetworkID, provider: StaticJsonRpcProvider): Promise<number>;\r\n\r\n  constructor(type: BondType, bondOpts: BondOpts) {\r\n    this.name = bondOpts.name;\r\n    this.displayName = bondOpts.displayName;\r\n    this.type = type;\r\n    this.isAvailable = bondOpts.isAvailable;\r\n    this.bondIconSvg = bondOpts.bondIconSvg;\r\n    this.bondContractABI = bondOpts.bondContractABI;\r\n    this.networkAddrs = bondOpts.networkAddrs;\r\n    this.bondToken = bondOpts.bondToken;\r\n  }\r\n\r\n  /**\r\n   * makes isAvailable accessible within Bonds.ts\r\n   * @param networkID\r\n   * @returns boolean\r\n   */\r\n  getAvailability(networkID: NetworkID) {\r\n    return this.isAvailable[networkID];\r\n  }\r\n\r\n  getAddressForBond(networkID: NetworkID) {\r\n    return this.networkAddrs[networkID].bondAddress;\r\n  }\r\n  getContractForBond(networkID: NetworkID, provider: StaticJsonRpcProvider | JsonRpcSigner) {\r\n    const bondAddress = this.getAddressForBond(networkID);\r\n    return new ethers.Contract(bondAddress, this.bondContractABI, provider) as EthContract;\r\n  }\r\n\r\n  getAddressForReserve(networkID: NetworkID) {\r\n    return this.networkAddrs[networkID]?.reserveAddress;\r\n  }\r\n \r\n  getContractForReserve(networkID: NetworkID, provider: StaticJsonRpcProvider | JsonRpcSigner) {\r\n    const bondAddress = this.getAddressForReserve(networkID);\r\n    return new ethers.Contract(bondAddress, this.reserveContract, provider) as PairContract;\r\n  }\r\n\r\n  async getBondReservePrice(networkID: NetworkID, provider: StaticJsonRpcProvider | JsonRpcSigner) {\r\n    const pairContract = this.getContractForReserve(networkID, provider);\r\n    const reserves = await pairContract.getReserves();\r\n    const marketPrice = Number(reserves[1].toString()) / Number(reserves[0].toString()) / 10 ** 9;\r\n    return marketPrice;\r\n  }\r\n}\r\n\r\n// Keep all LP specific fields/logic within the LPBond class\r\nexport interface LPBondOpts extends BondOpts {\r\n  reserveContract: ethers.ContractInterface;\r\n  lpUrl: string;\r\n}\r\n\r\nexport class LPBond extends Bond {\r\n  readonly isLP = true;\r\n  readonly lpUrl: string;\r\n  readonly reserveContract: ethers.ContractInterface;\r\n  readonly displayUnits: string;\r\n\r\n  constructor(lpBondOpts: LPBondOpts) {\r\n    super(BondType.LP, lpBondOpts);\r\n\r\n    this.lpUrl = lpBondOpts.lpUrl;\r\n    this.reserveContract = lpBondOpts.reserveContract;\r\n    this.displayUnits = \"LP\";\r\n  }\r\n  async getTreasuryBalance(networkID: NetworkID, provider: StaticJsonRpcProvider) {\r\n    const token = this.getContractForReserve(networkID, provider);\r\n    const tokenAddress = this.getAddressForReserve(networkID);\r\n    const bondCalculator = getBondCalculator(networkID, provider);\r\n    const tokenAmount = await token.balanceOf(addresses[networkID].TREASURY_ADDRESS);\r\n    const valuation = await bondCalculator.valuation(tokenAddress, tokenAmount);\r\n    const markdown = await bondCalculator.markdown(tokenAddress);\r\n    let tokenUSD = (Number(valuation.toString()) / Math.pow(10, 9)) * (Number(markdown.toString()) / Math.pow(10, 18));\r\n    return Number(tokenUSD.toString());\r\n  }\r\n}\r\n\r\n// Generic BondClass we should be using everywhere\r\n// Assumes the token being deposited follows the standard ERC20 spec\r\nexport interface StableBondOpts extends BondOpts {}\r\nexport class StableBond extends Bond {\r\n  readonly isLP = false;\r\n  readonly reserveContract: ethers.ContractInterface;\r\n  readonly displayUnits: string;\r\n\r\n  constructor(stableBondOpts: StableBondOpts) {\r\n    super(BondType.StableAsset, stableBondOpts);\r\n    // For stable bonds the display units are the same as the actual token\r\n    this.displayUnits = stableBondOpts.displayName;\r\n    this.reserveContract = ierc20Abi; // The Standard ierc20Abi since they're normal tokens\r\n  }\r\n\r\n  async getTreasuryBalance(networkID: NetworkID, provider: StaticJsonRpcProvider) {\r\n    let token = this.getContractForReserve(networkID, provider);\r\n    console.log(\"token\", token);\r\n    let tokenAmount = await token.balanceOf(addresses[networkID].TREASURY_ADDRESS);\r\n    console.log(\"tokenAmount\", tokenAmount);\r\n    return Number(tokenAmount.toString()) / Math.pow(10, 18);\r\n  }\r\n}\r\n\r\n// These are special bonds that have different valuation methods\r\nexport interface CustomBondOpts extends BondOpts {\r\n  reserveContract: ethers.ContractInterface;\r\n  bondType: number;\r\n  lpUrl: string;\r\n  customTreasuryBalanceFunc: (\r\n    this: CustomBond,\r\n    networkID: NetworkID,\r\n    provider: StaticJsonRpcProvider,\r\n  ) => Promise<number>;\r\n}\r\nexport class CustomBond extends Bond {\r\n  readonly isLP: Boolean;\r\n  getTreasuryBalance(networkID: NetworkID, provider: StaticJsonRpcProvider): Promise<number> {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n  readonly reserveContract: ethers.ContractInterface;\r\n  readonly displayUnits: string;\r\n  readonly lpUrl: string;\r\n\r\n  constructor(customBondOpts: CustomBondOpts) {\r\n    super(customBondOpts.bondType, customBondOpts);\r\n\r\n    if (customBondOpts.bondType === BondType.LP) {\r\n      this.isLP = true;\r\n    } else {\r\n      this.isLP = false;\r\n    }\r\n    this.lpUrl = customBondOpts.lpUrl;\r\n    // For stable bonds the display units are the same as the actual token\r\n    this.displayUnits = customBondOpts.displayName;\r\n    this.reserveContract = customBondOpts.reserveContract;\r\n    this.getTreasuryBalance = customBondOpts.customTreasuryBalanceFunc.bind(this);\r\n  }\r\n}\r\n","C:\\alphaomega\\temp33\\src\\views\\Bond\\Bond.jsx",["420","421"],"import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { formatCurrency, trim } from \"../../helpers\";\r\nimport {\r\n  Backdrop,\r\n  Box,\r\n  Fade,\r\n  Grid,\r\n  Paper,\r\n  Tab,\r\n  Tabs,\r\n  Typography,\r\n  makeStyles,\r\n  Button,\r\n  SvgIcon,\r\n  Link,\r\n} from \"@material-ui/core\";\r\nimport TabPanel from \"../../components/TabPanel\";\r\nimport BondHeader from \"./BondHeader\";\r\nimport BondRedeem from \"./BondRedeem\";\r\nimport BondPurchase from \"./BondPurchase\";\r\nimport \"./bond.scss\";\r\nimport { useWeb3Context } from \"src/hooks/web3Context\";\r\nimport { Skeleton } from \"@material-ui/lab\";\r\n// import { isPendingTxn, txnButtonText } from \"../../slices/PendingTxnsSlice\";\r\nimport { ReactComponent as LinkIcon } from \"../../assets/icons/link.svg\";\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  customStyleOnTab: {\r\n    width: \"145px\",\r\n  },\r\n});\r\n\r\nfunction Bond({ bond, nft }) {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { provider, address, chainID } = useWeb3Context();\r\n\r\n  const [slippage, setSlippage] = useState(0.5);\r\n  const [recipientAddress, setRecipientAddress] = useState(address);\r\n\r\n  const [view, setView] = useState(0);\r\n  const [quantity, setQuantity] = useState();\r\n\r\n  const isBondLoading = useSelector(state => state.bonding.loading ?? true);\r\n\r\n  const onRecipientAddressChange = e => {\r\n    return setRecipientAddress(e.target.value);\r\n  };\r\n\r\n  const onSlippageChange = e => {\r\n    return setSlippage(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (address) setRecipientAddress(address);\r\n  }, [provider, quantity, address]);\r\n\r\n  const changeView = (event, newView) => {\r\n    setView(newView);\r\n  };\r\n\r\n  if (nft) {\r\n    return (\r\n      <Fade in={true} mountOnEnter unmountOnExit>\r\n        <Grid container id=\"bond-view\">\r\n          <Backdrop open={true}>\r\n            <Fade in={true}>\r\n              <Paper className=\"ohm-card ohm-modal\">\r\n                <BondHeader bond={bond} nft />\r\n                <Box direction=\"column\" className=\"bond-price-data-column\">\r\n                  <Typography variant=\"h6\" color=\"textSecondary\">\r\n                    Bond with real world assets\r\n                  </Typography>\r\n                  <Typography variant=\"h5\" color=\"textPrimary\">\r\n                    Gold, Fine Wine, Real Estate and Art\r\n                  </Typography>\r\n                </Box>\r\n\r\n                <Tabs\r\n                  centered\r\n                  value={view}\r\n                  textColor=\"primary\"\r\n                  indicatorColor=\"primary\"\r\n                  onChange={changeView}\r\n                  aria-label=\"bond tabs\"\r\n                >\r\n                  <Tab label={<span className={classes.customStyleOnTab}>BOND</span>} {...a11yProps(0)} />\r\n                </Tabs>\r\n\r\n                <TabPanel value={view} index={0}>\r\n                  <Box className=\"wallet-menu bond-nft-box\">\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      id=\"bond-coming-soon-btn\"\r\n                      className=\"nft-coming-soon-button nft-coming-soon-button-text \"\r\n                      disabled={true}\r\n                      onClick={() => {}}\r\n                    >\r\n                      COMING SOON\r\n                    </Button>\r\n                    <Typography className=\"bond-nft-description\">\r\n                      OX is the first algorithmic currency backed by real world assets. Enabled by our partnership\r\n                      with Tangible, the AlphaDAO treasury is filled with gold, fine wine and other tangible assets.\r\n                    </Typography>\r\n                    <Button\r\n                      href=\"https://medium.com/tangible/introducing-tangible-5f3947276125\"\r\n                      target=\"_blank\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      id=\"bond-approve-btn\"\r\n                      className=\"transaction-button nft-coming-soon-button\"\r\n                      disabled={false}\r\n                      endIcon={<SvgIcon component={LinkIcon} className=\"nft-learn-more-button\" />}\r\n                    >\r\n                      Learn More\r\n                    </Button>\r\n                  </Box>\r\n                </TabPanel>\r\n              </Paper>\r\n            </Fade>\r\n          </Backdrop>\r\n        </Grid>\r\n      </Fade>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Fade in={true} mountOnEnter unmountOnExit>\r\n      <Grid container id=\"bond-view\">\r\n        <Backdrop open={true}>\r\n          <Fade in={true}>\r\n            <Paper className=\"ohm-card ohm-modal\">\r\n              <BondHeader\r\n                bond={bond}\r\n                slippage={slippage}\r\n                recipientAddress={recipientAddress}\r\n                onSlippageChange={onSlippageChange}\r\n                onRecipientAddressChange={onRecipientAddressChange}\r\n              />\r\n\r\n              <Box direction=\"row\" className=\"bond-price-data-row\">\r\n                <div className=\"bond-price-data\">\r\n                  <Typography variant=\"h5\" color=\"textSecondary\">\r\n                    Bond Price\r\n                  </Typography>\r\n                  <Typography variant=\"h3\" className=\"price\" color=\"primary\">\r\n                    {isBondLoading ? <Skeleton /> : formatCurrency(bond.bondPrice, 2)}\r\n                  </Typography>\r\n                </div>\r\n                <div className=\"bond-price-data\">\r\n                  <Typography variant=\"h5\" color=\"textSecondary\">\r\n                    Market Price\r\n                  </Typography>\r\n                  <Typography variant=\"h3\" color=\"primary\" className=\"price\">\r\n                    {isBondLoading ? <Skeleton /> : formatCurrency(bond.marketPrice, 2)}\r\n                  </Typography>\r\n                </div>\r\n              </Box>\r\n\r\n              <Tabs\r\n                centered\r\n                value={view}\r\n                textColor=\"primary\"\r\n                indicatorColor=\"primary\"\r\n                onChange={changeView}\r\n                aria-label=\"bond tabs\"\r\n              >\r\n                <Tab label={<span className={classes.customStyleOnTab}>BOND</span>} {...a11yProps(0)} />\r\n                <Tab label={<span className={classes.customStyleOnTab}>REDEEM</span>} {...a11yProps(1)} />\r\n              </Tabs>\r\n\r\n              <TabPanel value={view} index={0}>\r\n                <BondPurchase bond={bond} slippage={slippage} recipientAddress={recipientAddress} />\r\n              </TabPanel>\r\n\r\n              <TabPanel value={view} index={1}>\r\n                <BondRedeem bond={bond} />\r\n              </TabPanel>\r\n            </Paper>\r\n          </Fade>\r\n        </Backdrop>\r\n      </Grid>\r\n    </Fade>\r\n  );\r\n}\r\n\r\n// export function DisplayBondPrice({ bond }) {\r\n//   const { chainID } = useWeb3Context();\r\n//   return (\r\n//     <>\r\n//       {!bond.isAvailable[chainID] ? (\r\n//         <>--</>\r\n//       ) : (\r\n//         `${new Intl.NumberFormat(\"en-US\", {\r\n//           style: \"currency\",\r\n//           currency: \"USD\",\r\n//           maximumFractionDigits: 2,\r\n//           minimumFractionDigits: 2,\r\n//         }).format(bond.bondPrice)}`\r\n//       )}\r\n//     </>\r\n//   );\r\n// }\r\n\r\nexport function DisplayBondDiscount({ bond }) {\r\n  const { chainID } = useWeb3Context();\r\n  return <>{!bond.isAvailable[chainID] ? <>--</> : `${bond.bondDiscount && trim(bond.bondDiscount * 100, 2)}%`}</>;\r\n}\r\n\r\nexport default Bond;\r\n","C:\\alphaomega\\temp33\\src\\views\\TreasuryDashboard\\TreasuryDashboard.jsx",["422"],"import { useEffect, useState } from \"react\";\r\nimport { Paper, Grid, Typography, Box, Zoom, Container, useMediaQuery } from \"@material-ui/core\";\r\nimport { Skeleton } from \"@material-ui/lab\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Chart from \"../../components/Chart/Chart.jsx\";\r\nimport { trim, formatCurrency } from \"../../helpers\";\r\nimport {\r\n  treasuryDataQuery,\r\n  rebasesDataQuery,\r\n  bulletpoints,\r\n  tooltipItems,\r\n  tooltipInfoMessages,\r\n  itemType,\r\n} from \"./treasuryData.js\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport \"./treasury-dashboard.scss\";\r\nimport apollo from \"../../lib/apolloClient\";\r\nimport InfoTooltip from \"src/components/InfoTooltip/InfoTooltip.jsx\";\r\nimport Stake from \"../Stake/Stake\";\r\n\r\nfunction TreasuryDashboard() {\r\n  // const [data, setData] = useState(null);\r\n  // const [apy, setApy] = useState(null);\r\n  // const [runway, setRunway] = useState(null);\r\n  // const [staked, setStaked] = useState(null);\r\n  const theme = useTheme();\r\n  const smallerScreen = useMediaQuery(\"(max-width: 650px)\");\r\n  const verySmallScreen = useMediaQuery(\"(max-width: 379px)\");\r\n\r\n  const marketPrice = useSelector(state => {\r\n    return state.app.marketPrice;\r\n  });\r\n  const circSupply = useSelector(state => {\r\n    return state.app.circSupply;\r\n  });\r\n  const totalSupply = useSelector(state => {\r\n    return state.app.totalSupply;\r\n  });\r\n  const marketCap = useSelector(state => {\r\n    return state.app.marketCap;\r\n  });\r\n\r\n  const currentIndex = useSelector(state => {\r\n    return state.app.currentIndex;\r\n  });\r\n\r\n  const backingPerOhm = useSelector(state => {\r\n    return state.app.treasuryMarketValue / state.app.circSupply;\r\n  });\r\n\r\n  const treasuryMarketValue = useSelector(state => {\r\n    return state.app.treasuryMarketValue;\r\n  });\r\n\r\n  // useEffect(() => {\r\n  //   apollo(treasuryDataQuery).then(r => {\r\n  //     let metrics = r.data.protocolMetrics.map(entry =>\r\n  //       Object.entries(entry).reduce((obj, [key, value]) => ((obj[key] = parseFloat(value)), obj), {}),\r\n  //     );\r\n  //     metrics = metrics.filter(pm => pm.treasuryMarketValue > 0);\r\n  //     setData(metrics);\r\n  //\r\n  //     let staked = r.data.protocolMetrics.map(entry => ({\r\n  //       staked: (parseFloat(entry.sOhmCirculatingSupply) / parseFloat(entry.ohmCirculatingSupply)) * 100,\r\n  //       timestamp: entry.timestamp,\r\n  //     }));\r\n  //     staked = staked.filter(pm => pm.staked < 100);\r\n  //     setStaked(staked);\r\n  //\r\n  //     let runway = metrics.filter(pm => pm.runway10k > 5);\r\n  //     setRunway(runway);\r\n  //   });\r\n\r\n  // apollo(rebasesDataQuery).then(r => {\r\n  //   let apy = r.data.rebases.map(entry => ({\r\n  //     apy: Math.pow(parseFloat(entry.percentage) + 1, 365 * 3) * 100,\r\n  //     timestamp: entry.timestamp,\r\n  //   }));\r\n  //\r\n  //   apy = apy.filter(pm => pm.apy < 300000);\r\n  //\r\n  //   setApy(apy);\r\n  // });\r\n  // }, []);\r\n\r\n  return (\r\n    <div id=\"treasury-dashboard-view\" className={`${smallerScreen && \"smaller\"} ${verySmallScreen && \"very-small\"}`}>\r\n      <Container\r\n        style={{\r\n          paddingLeft: smallerScreen || verySmallScreen ? \"0\" : \"3.3rem\",\r\n          paddingRight: smallerScreen || verySmallScreen ? \"0\" : \"3.3rem\",\r\n          paddingBottom: smallerScreen || verySmallScreen ? \"3.3rem\" : \"0\",\r\n        }}\r\n      >\r\n        <Box className={`hero-metrics`}>\r\n          <Paper className=\"ohm-card\">\r\n            <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"space-between\" alignItems=\"center\">\r\n              <Box className=\"metric market\">\r\n                <Typography variant=\"h6\" color=\"textSecondary\">\r\n                  Market Cap\r\n                </Typography>\r\n                <Typography variant=\"h5\">\r\n                  {marketCap && formatCurrency(marketCap, 0)}\r\n                  {!marketCap && <Skeleton type=\"text\" />}\r\n                </Typography>\r\n              </Box>\r\n\r\n              <Box className=\"metric price\">\r\n                <Typography variant=\"h6\" color=\"textSecondary\">\r\n                  OX Price\r\n                </Typography>\r\n                <Typography variant=\"h5\">\r\n                  {/* appleseed-fix */}\r\n                  {marketPrice ? formatCurrency(marketPrice, 2) : <Skeleton type=\"text\" />}\r\n                </Typography>\r\n              </Box>\r\n\r\n              <Box className=\"metric circ\">\r\n                <Typography variant=\"h6\" color=\"textSecondary\">\r\n                  Circulating Supply (total)\r\n                </Typography>\r\n                <Typography variant=\"h5\">\r\n                  {circSupply && totalSupply ? (\r\n                    parseInt(circSupply) + \" / \" + parseInt(totalSupply)\r\n                  ) : (\r\n                    <Skeleton type=\"text\" />\r\n                  )}\r\n                </Typography>\r\n              </Box>\r\n\r\n              <Box className=\"metric bpo\">\r\n                <Typography variant=\"h6\" color=\"textSecondary\">\r\n                  Backing per OX\r\n                </Typography>\r\n                <Typography variant=\"h5\">\r\n                  {backingPerOhm ? formatCurrency(backingPerOhm, 2) : <Skeleton type=\"text\" />}\r\n                </Typography>\r\n              </Box>\r\n\r\n              <Box className=\"metric wsoprice\">\r\n                <Typography variant=\"h6\" color=\"textSecondary\">\r\n                  Treasury Balance\r\n                  {/*<InfoTooltip*/}\r\n                  {/*  message={*/}\r\n                  {/*    \"wsOHM = sOHM * index\\n\\nThe price of wsOHM is equal to the price of OHM multiplied by the current index\"*/}\r\n                  {/*  }*/}\r\n                  {/*/>*/}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h5\">\r\n                  {treasuryMarketValue ? formatCurrency(treasuryMarketValue, 2) : <Skeleton type=\"text\" />}\r\n                </Typography>\r\n              </Box>\r\n\r\n              <Box className=\"metric index\">\r\n                <Typography variant=\"h6\" color=\"textSecondary\">\r\n                  Current Index\r\n                  {/*<InfoTooltip*/}\r\n                  {/*  message={*/}\r\n                  {/*    \"The current index tracks the amount of sOHM accumulated since the beginning of staking. Basically, how much sOX one would have if they staked and held a single OX from day 1.\"*/}\r\n                  {/*  }*/}\r\n                  {/*/>*/}\r\n                </Typography>\r\n                <Typography variant=\"h5\">\r\n                  {currentIndex ? trim(currentIndex, 2) + \" sOX\" : <Skeleton type=\"text\" />}\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n          </Paper>\r\n        </Box>\r\n\r\n        {/*<Zoom in={true}>*/}\r\n        {/*  <Grid container spacing={2} className=\"data-grid\">*/}\r\n        {/*<Grid item lg={6} md={6} sm={12} xs={12}>*/}\r\n        {/*  <Paper className=\"ohm-card ohm-chart-card\">*/}\r\n        {/*    <Chart*/}\r\n        {/*      type=\"area\"*/}\r\n        {/*      data={data}*/}\r\n        {/*      dataKey={[\"totalValueLocked\"]}*/}\r\n        {/*      stopColor={[[\"#768299\", \"#98B3E9\"]]}*/}\r\n        {/*      headerText=\"Total Value Deposited\"*/}\r\n        {/*      headerSubText={`${data && formatCurrency(data[0].totalValueLocked)}`}*/}\r\n        {/*      bulletpointColors={bulletpoints.tvl}*/}\r\n        {/*      itemNames={tooltipItems.tvl}*/}\r\n        {/*      itemType={itemType.dollar}*/}\r\n        {/*      infoTooltipMessage={tooltipInfoMessages.tvl}*/}\r\n        {/*      expandedGraphStrokeColor={theme.palette.graphStrokeColor}*/}\r\n        {/*    />*/}\r\n        {/*  </Paper>*/}\r\n        {/*</Grid>*/}\r\n\r\n        {/*<Grid item lg={6} md={6} sm={12} xs={12}>*/}\r\n        {/*  <Paper className=\"ohm-card ohm-chart-card\">*/}\r\n        {/*    <Chart*/}\r\n        {/*      type=\"stack\"*/}\r\n        {/*      data={data}*/}\r\n        {/*      dataKey={[*/}\r\n        {/*        \"treasuryDaiMarketValue\",*/}\r\n        {/*        \"treasuryFraxMarketValue\",*/}\r\n        {/*        \"treasuryWETHMarketValue\",*/}\r\n        {/*        \"treasuryXsushiMarketValue\",*/}\r\n        {/*      ]}*/}\r\n        {/*      stopColor={[*/}\r\n        {/*        [\"#F5AC37\", \"#EA9276\"],*/}\r\n        {/*        [\"#768299\", \"#98B3E9\"],*/}\r\n        {/*        [\"#DC30EB\", \"#EA98F1\"],*/}\r\n        {/*        [\"#8BFF4D\", \"#4C8C2A\"],*/}\r\n        {/*      ]}*/}\r\n        {/*      headerText=\"Market Value of Treasury Assets\"*/}\r\n        {/*      headerSubText={`${data && formatCurrency(data[0].treasuryMarketValue)}`}*/}\r\n        {/*      bulletpointColors={bulletpoints.coin}*/}\r\n        {/*      itemNames={tooltipItems.coin}*/}\r\n        {/*      itemType={itemType.dollar}*/}\r\n        {/*      infoTooltipMessage={tooltipInfoMessages.mvt}*/}\r\n        {/*      expandedGraphStrokeColor={theme.palette.graphStrokeColor}*/}\r\n        {/*    />*/}\r\n        {/*  </Paper>*/}\r\n        {/*</Grid>*/}\r\n\r\n        {/*<Grid item lg={6} md={6} sm={12} xs={12}>*/}\r\n        {/*  <Paper className=\"ohm-card ohm-chart-card\">*/}\r\n        {/*    <Chart*/}\r\n        {/*      type=\"stack\"*/}\r\n        {/*      data={data}*/}\r\n        {/*      format=\"currency\"*/}\r\n        {/*      dataKey={[\"treasuryDaiRiskFreeValue\", \"treasuryFraxRiskFreeValue\"]}*/}\r\n        {/*      stopColor={[*/}\r\n        {/*        [\"#F5AC37\", \"#EA9276\"],*/}\r\n        {/*        [\"#768299\", \"#98B3E9\"],*/}\r\n        {/*        [\"#000\", \"#fff\"],*/}\r\n        {/*        [\"#000\", \"#fff\"],*/}\r\n        {/*      ]}*/}\r\n        {/*      headerText=\"Risk Free Value of Treasury Assets\"*/}\r\n        {/*      headerSubText={`${data && formatCurrency(data[0].treasuryRiskFreeValue)}`}*/}\r\n        {/*      bulletpointColors={bulletpoints.coin}*/}\r\n        {/*      itemNames={tooltipItems.coin}*/}\r\n        {/*      itemType={itemType.dollar}*/}\r\n        {/*      infoTooltipMessage={tooltipInfoMessages.rfv}*/}\r\n        {/*      expandedGraphStrokeColor={theme.palette.graphStrokeColor}*/}\r\n        {/*    />*/}\r\n        {/*  </Paper>*/}\r\n        {/*</Grid>*/}\r\n\r\n        {/*<Grid item lg={6} md={6} sm={12} xs={12}>*/}\r\n        {/*  <Paper className=\"ohm-card\">*/}\r\n        {/*    <Chart*/}\r\n        {/*      type=\"area\"*/}\r\n        {/*      data={data}*/}\r\n        {/*      dataKey={[\"treasuryOhmDaiPOL\"]}*/}\r\n        {/*      stopColor={[[\"rgba(128, 204, 131, 1)\", \"rgba(128, 204, 131, 0)\"]]}*/}\r\n        {/*      headerText=\"Protocol Owned Liquidity OHM-DAI\"*/}\r\n        {/*      headerSubText={`${data && trim(data[0].treasuryOhmDaiPOL, 2)}% `}*/}\r\n        {/*      dataFormat=\"percent\"*/}\r\n        {/*      bulletpointColors={bulletpoints.pol}*/}\r\n        {/*      itemNames={tooltipItems.pol}*/}\r\n        {/*      itemType={itemType.percentage}*/}\r\n        {/*      infoTooltipMessage={tooltipInfoMessages.pol}*/}\r\n        {/*      expandedGraphStrokeColor={theme.palette.graphStrokeColor}*/}\r\n        {/*      isPOL={true}*/}\r\n        {/*    />*/}\r\n        {/*  </Paper>*/}\r\n        {/*</Grid>*/}\r\n        {/*  Temporarily removed until correct data is in the graph */}\r\n        {/* <Grid item lg={6} md={12} sm={12} xs={12}>\r\n              <Paper className=\"ohm-card\">\r\n                <Chart\r\n                  type=\"bar\"\r\n                  data={data}\r\n                  dataKey={[\"holders\"]}\r\n                  headerText=\"Holders\"\r\n                  stroke={[theme.palette.text.secondary]}\r\n                  headerSubText={`${data && data[0].holders}`}\r\n                  bulletpointColors={bulletpoints.holder}\r\n                  itemNames={tooltipItems.holder}\r\n                  itemType={\"\"}\r\n                  infoTooltipMessage={tooltipInfoMessages.holder}\r\n                  expandedGraphStrokeColor={theme.palette.graphStrokeColor}\r\n                />\r\n              </Paper>\r\n            </Grid> */}\r\n\r\n<<<<<<< Updated upstream\r\n        {/*<Grid item lg={6} md={6} sm={12} xs={12}>*/}\r\n        {/*  <Paper className=\"ohm-card\">*/}\r\n        {/*    <Chart*/}\r\n        {/*      type=\"area\"*/}\r\n        {/*      data={staked}*/}\r\n        {/*      dataKey={[\"staked\"]}*/}\r\n        {/*      stopColor={[[\"#55EBC7\", \"#47ACEB\"]]}*/}\r\n        {/*      headerText=\"OHM Staked\"*/}\r\n        {/*      dataFormat=\"percent\"*/}\r\n        {/*      headerSubText={`${staked && trim(staked[0].staked, 2)}% `}*/}\r\n        {/*      isStaked={true}*/}\r\n        {/*      bulletpointColors={bulletpoints.staked}*/}\r\n        {/*      infoTooltipMessage={tooltipInfoMessages.staked}*/}\r\n        {/*      expandedGraphStrokeColor={theme.palette.graphStrokeColor}*/}\r\n        {/*    />*/}\r\n        {/*  </Paper>*/}\r\n        {/*</Grid>*/}\r\n=======\r\n            <Grid item lg={6} md={6} sm={12} xs={12}>\r\n              <Paper className=\"ohm-card\">\r\n                <Typography variant=\"h6\" color=\"textSecondary\">\r\n                  Backing per OX\r\n                </Typography>\r\n                <Typography variant=\"h5\">\r\n                  {backingPerOhm ? formatCurrency(backingPerOhm, 2) : <Skeleton type=\"text\" />}\r\n                </Typography>\r\n                {/* <Chart\r\n                  type=\"area\"\r\n                  data={staked}\r\n                  dataKey={[\"staked\"]}\r\n                  stopColor={[[\"#55EBC7\", \"#47ACEB\"]]}\r\n                  headerText=\"OHM Staked\"\r\n                  dataFormat=\"percent\"\r\n                  headerSubText={`${staked && trim(staked[0]?.staked, 2)}% `}\r\n                  isStaked={true}\r\n                  bulletpointColors={bulletpoints.staked}\r\n                  infoTooltipMessage={tooltipInfoMessages.staked}\r\n                  expandedGraphStrokeColor={theme.palette.graphStrokeColor}\r\n                /> */}\r\n              </Paper>\r\n            </Grid>\r\n>>>>>>> Stashed changes\r\n\r\n        {/*<Grid item lg={6} md={6} sm={12} xs={12}>*/}\r\n        {/*  <Paper className=\"ohm-card\">*/}\r\n        {/*    <Chart*/}\r\n        {/*      type=\"line\"*/}\r\n        {/*      scale=\"log\"*/}\r\n        {/*      data={apy}*/}\r\n        {/*      dataKey={[\"apy\"]}*/}\r\n        {/*      color={theme.palette.text.primary}*/}\r\n        {/*      stroke={[theme.palette.text.primary]}*/}\r\n        {/*      headerText=\"APY over time\"*/}\r\n        {/*      dataFormat=\"percent\"*/}\r\n        {/*      headerSubText={`${apy && trim(apy[0].apy, 2)}%`}*/}\r\n        {/*      bulletpointColors={bulletpoints.apy}*/}\r\n        {/*      itemNames={tooltipItems.apy}*/}\r\n        {/*      itemType={itemType.percentage}*/}\r\n        {/*      infoTooltipMessage={tooltipInfoMessages.apy}*/}\r\n        {/*      expandedGraphStrokeColor={theme.palette.graphStrokeColor}*/}\r\n        {/*    />*/}\r\n        {/*  </Paper>*/}\r\n        {/*</Grid>*/}\r\n\r\n<<<<<<< Updated upstream\r\n        {/*<Grid item lg={6} md={6} sm={12} xs={12}>*/}\r\n        {/*  <Paper className=\"ohm-card\">*/}\r\n        {/*    <Chart*/}\r\n        {/*      type=\"line\"*/}\r\n        {/*      data={runway}*/}\r\n        {/*      dataKey={[\"runwayCurrent\"]}*/}\r\n        {/*      color={theme.palette.text.primary}*/}\r\n        {/*      stroke={[theme.palette.text.primary]}*/}\r\n        {/*      headerText=\"Runway Available\"*/}\r\n        {/*      headerSubText={`${data && trim(data[0].runwayCurrent, 1)} Days`}*/}\r\n        {/*      dataFormat=\"days\"*/}\r\n        {/*      bulletpointColors={bulletpoints.runway}*/}\r\n        {/*      itemNames={tooltipItems.runway}*/}\r\n        {/*      itemType={\"\"}*/}\r\n        {/*      infoTooltipMessage={tooltipInfoMessages.runway}*/}\r\n        {/*      expandedGraphStrokeColor={theme.palette.graphStrokeColor}*/}\r\n        {/*    />*/}\r\n        {/*  </Paper>*/}\r\n        {/*</Grid>*/}\r\n        {/*  </Grid>*/}\r\n        {/*</Zoom>*/}\r\n=======\r\n            <Grid item lg={6} md={6} sm={12} xs={12}>\r\n              <Paper className=\"ohm-card\">\r\n                <Typography variant=\"h6\" color=\"textSecondary\">\r\n                OX Staked\r\n                  </Typography>\r\n                  <Typography variant=\"h5\">\r\n                    {staked ? `${trim(staked, 2)}%` : <Skeleton type=\"text\" />}\r\n                  </Typography>\r\n                {/* <Chart\r\n                  type=\"line\"\r\n                  data={runway}\r\n                  dataKey={[\"runwayCurrent\"]}\r\n                  color={theme.palette.text.primary}\r\n                  stroke={[theme.palette.text.primary]}\r\n                  headerText=\"Runway Available\"\r\n                  headerSubText={`${data && trim(data[0]?.runwayCurrent, 1)} Days`}\r\n                  dataFormat=\"days\"\r\n                  bulletpointColors={bulletpoints.runway}\r\n                  itemNames={tooltipItems.runway}\r\n                  itemType={\"\"}\r\n                  infoTooltipMessage={tooltipInfoMessages.runway}\r\n                  expandedGraphStrokeColor={theme.palette.graphStrokeColor}\r\n                /> */}\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item lg={6} md={6} sm={12} xs={12}>\r\n              <Paper className=\"ohm-card\">\r\n                <Typography variant=\"h6\" color=\"textSecondary\">\r\n                APY\r\n                </Typography>\r\n                <Typography variant=\"h5\">\r\n                  {stakingAPY ? `${trim(stakingAPY*100, 2)}%` : <Skeleton type=\"text\" />}\r\n                </Typography> \r\n                {/* <Chart\r\n                  type=\"line\"\r\n                  data={runway}\r\n                  dataKey={[\"runwayCurrent\"]}\r\n                  color={theme.palette.text.primary}\r\n                  stroke={[theme.palette.text.primary]}\r\n                  headerText=\"Runway Available\"\r\n                  headerSubText={`${data && trim(data[0]?.runwayCurrent, 1)} Days`}\r\n                  dataFormat=\"days\"\r\n                  bulletpointColors={bulletpoints.runway}\r\n                  itemNames={tooltipItems.runway}\r\n                  itemType={\"\"}\r\n                  infoTooltipMessage={tooltipInfoMessages.runway}\r\n                  expandedGraphStrokeColor={theme.palette.graphStrokeColor}\r\n                /> */}\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item lg={6} md={6} sm={12} xs={12}>\r\n              <Paper className=\"ohm-card\">\r\n                <Typography variant=\"h6\" color=\"textSecondary\">\r\n                  Market Cap\r\n                </Typography>\r\n                <Typography variant=\"h5\">\r\n                  {marketCap && formatCurrency(marketCap, 2)}\r\n                  {!marketCap && <Skeleton type=\"text\" />}\r\n                </Typography> \r\n                {/* <Chart\r\n                  type=\"line\"\r\n                  data={runway}\r\n                  dataKey={[\"runwayCurrent\"]}\r\n                  color={theme.palette.text.primary}\r\n                  stroke={[theme.palette.text.primary]}\r\n                  headerText=\"Runway Available\"\r\n                  headerSubText={`${data && trim(data[0]?.runwayCurrent, 1)} Days`}\r\n                  dataFormat=\"days\"\r\n                  bulletpointColors={bulletpoints.runway}\r\n                  itemNames={tooltipItems.runway}\r\n                  itemType={\"\"}\r\n                  infoTooltipMessage={tooltipInfoMessages.runway}\r\n                  expandedGraphStrokeColor={theme.palette.graphStrokeColor}\r\n                /> */}\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Zoom>\r\n>>>>>>> Stashed changes\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TreasuryDashboard;\r\n","C:\\alphaomega\\temp33\\src\\views\\TreasuryDashboard\\treasuryData.js",[],"C:\\alphaomega\\temp33\\src\\components\\InfoTooltip\\InfoTooltip.jsx",[],"C:\\alphaomega\\temp33\\src\\components\\Chart\\Chart.jsx",[],"C:\\alphaomega\\temp33\\src\\lib\\apolloClient.js",[],"C:\\alphaomega\\temp33\\src\\components\\TokenSymbol\\TokenSymbol.tsx",[],"C:\\alphaomega\\temp33\\src\\views\\Bond\\BondPurchase.jsx",[],"C:\\alphaomega\\temp33\\src\\views\\Bond\\BondRedeem.jsx",[],"C:\\alphaomega\\temp33\\src\\views\\Bond\\BondHeader.jsx",[],"C:\\alphaomega\\temp33\\src\\components\\TabPanel.jsx",[],"C:\\alphaomega\\temp33\\src\\components\\Chart\\ExpandedChart.jsx",[],"C:\\alphaomega\\temp33\\src\\components\\Chart\\CustomTooltip.jsx",[],"C:\\alphaomega\\temp33\\src\\hooks\\Debounce.ts",[],"C:\\alphaomega\\temp33\\src\\hooks\\useEscape.ts",[],"C:\\alphaomega\\temp33\\src\\views\\Bond\\AdvancedSettings.jsx",[],"C:\\alphaomega\\temp33\\src\\components\\BondLogo.jsx",[],"C:\\alphaomega\\temp33\\src\\views\\33Together\\poolData.js",[],"C:\\alphaomega\\temp33\\src\\views\\33Together\\PoolPrize.jsx",[],"C:\\alphaomega\\temp33\\src\\views\\33Together\\PoolInfo.jsx",[],"C:\\alphaomega\\temp33\\src\\views\\33Together\\PoolDeposit.jsx",[],"C:\\alphaomega\\temp33\\src\\views\\33Together\\PoolWithdraw.jsx",[],"C:\\alphaomega\\temp33\\src\\components\\InfoTooltip\\InfoTooltipMulti.jsx",[],"C:\\alphaomega\\temp33\\src\\components\\CardHeader\\CardHeader.jsx",[],"C:\\alphaomega\\temp33\\src\\hooks\\index.ts",[],"C:\\alphaomega\\temp33\\src\\components\\ConnectButton.jsx",[],"C:\\alphaomega\\temp33\\src\\views\\Stake\\Stake.jsx",["423"],"import { useCallback, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  Grid,\r\n  InputAdornment,\r\n  InputLabel,\r\n  Link,\r\n  OutlinedInput,\r\n  Paper,\r\n  SvgIcon,\r\n  Tab,\r\n  Tabs,\r\n  Typography,\r\n  Zoom,\r\n} from \"@material-ui/core\";\r\nimport NewReleases from \"@material-ui/icons/NewReleases\";\r\nimport RebaseTimer from \"../../components/RebaseTimer/RebaseTimer\";\r\nimport TabPanel from \"../../components/TabPanel\";\r\nimport { getOhmTokenImage, getTokenImage, trim } from \"../../helpers\";\r\nimport { changeApproval, changeStake } from \"../../slices/StakeThunk\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport \"./stake.scss\";\r\nimport { useWeb3Context } from \"src/hooks/web3Context\";\r\nimport { isPendingTxn, txnButtonText } from \"src/slices/PendingTxnsSlice\";\r\nimport { Skeleton } from \"@material-ui/lab\";\r\nimport ExternalStakePool from \"./ExternalStakePool\";\r\nimport { error } from \"../../slices/MessagesSlice\";\r\nimport { ethers } from \"ethers\";\r\nimport { ReactComponent as WalletIcon } from \"../../assets/icons/wallet.svg\";\r\nimport ConnectButton from \"../../components/ConnectButton\";\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst sOhmImg = getTokenImage(\"sohm\");\r\nconst ohmImg = getOhmTokenImage(16, 16);\r\n\r\nfunction Stake() {\r\n  const dispatch = useDispatch();\r\n  const { provider, address, connected, connect, chainID } = useWeb3Context();\r\n\r\n  const [zoomed, setZoomed] = useState(false);\r\n  const [view, setView] = useState(0);\r\n  const [quantity, setQuantity] = useState(\"\");\r\n\r\n  const isAppLoading = useSelector(state => state.app.loading);\r\n  const currentIndex = useSelector(state => {\r\n    return state.app.currentIndex;\r\n  });\r\n  const fiveDayRate = useSelector(state => {\r\n    return state.app.fiveDayRate;\r\n  });\r\n  const ohmBalance = useSelector(state => {\r\n    return state.account.balances && state.account.balances.ohm;\r\n  });\r\n  // const oldSohmBalance = useSelector(state => {\r\n  //   return state.account.balances && state.account.balances.oldsohm;\r\n  // });\r\n  const sohmBalance = useSelector(state => {\r\n    return state.account.balances && state.account.balances.sohm;\r\n  });\r\n  const fsohmBalance = useSelector(state => {\r\n    return state.account.balances && state.account.balances.fsohm;\r\n  });\r\n  const wsohmBalance = useSelector(state => {\r\n    return state.account.balances && state.account.balances.wsohm;\r\n  });\r\n  const stakeAllowance = useSelector(state => {\r\n    return state.account.staking && state.account.staking.ohmStake;\r\n  });\r\n  const unstakeAllowance = useSelector(state => {\r\n    return state.account.staking && state.account.staking.ohmUnstake;\r\n  });\r\n  const stakingRebase = useSelector(state => {\r\n    return state.app.stakingRebase;\r\n  });\r\n  const stakingAPY = useSelector(state => {\r\n    return state.app.stakingAPY;\r\n  });\r\n  const stakingTVL = useSelector(state => {\r\n    return state.app.stakingTVL;\r\n  });\r\n\r\n  const pendingTransactions = useSelector(state => {\r\n    return state.pendingTransactions;\r\n  });\r\n\r\n  const setMax = () => {\r\n    if (view === 0) {\r\n      setQuantity(ohmBalance);\r\n    } else {\r\n      setQuantity(sohmBalance);\r\n    }\r\n  };\r\n\r\n  const onSeekApproval = async token => {\r\n    await dispatch(changeApproval({ address, token, provider, networkID: chainID }));\r\n  };\r\n\r\n  const onChangeStake = async action => {\r\n    // eslint-disable-next-line no-restricted-globals\r\n    if (isNaN(quantity) || quantity === 0 || quantity === \"\") {\r\n      // eslint-disable-next-line no-alert\r\n      return dispatch(error(\"Please enter a value!\"));\r\n    }\r\n\r\n    // 1st catch if quantity > balance\r\n    let gweiValue = ethers.utils.parseUnits(quantity, \"gwei\");\r\n    if (action === \"stake\" && gweiValue.gt(ethers.utils.parseUnits(ohmBalance, \"gwei\"))) {\r\n      return dispatch(error(\"You cannot stake more than your OX balance.\"));\r\n    }\r\n\r\n    if (action === \"unstake\" && gweiValue.gt(ethers.utils.parseUnits(sohmBalance, \"gwei\"))) {\r\n      return dispatch(error(\"You cannot unstake more than your sOX balance.\"));\r\n    }\r\n\r\n    await dispatch(changeStake({ address, action, value: quantity.toString(), provider, networkID: chainID }));\r\n  };\r\n\r\n  const hasAllowance = useCallback(\r\n    token => {\r\n      if (token === \"ohm\") return stakeAllowance > 0;\r\n      if (token === \"sohm\") return unstakeAllowance > 0;\r\n      return 0;\r\n    },\r\n    [stakeAllowance, unstakeAllowance],\r\n  );\r\n\r\n  const isAllowanceDataLoading = (stakeAllowance == null && view === 0) || (unstakeAllowance == null && view === 1);\r\n\r\n  let modalButton = [];\r\n\r\n  modalButton.push(<ConnectButton />);\r\n\r\n  const changeView = (event, newView) => {\r\n    setView(newView);\r\n  };\r\n\r\n  const trimmedBalance = Number(\r\n    [sohmBalance, fsohmBalance, wsohmBalance]\r\n      .filter(Boolean)\r\n      .map(balance => Number(balance))\r\n      .reduce((a, b) => a + b, 0)\r\n      .toFixed(4),\r\n  );\r\n  const trimmedStakingAPY = trim(stakingAPY * 100, 1);\r\n  const stakingRebasePercentage = trim(stakingRebase * 100, 4);\r\n  const nextRewardValue = trim((stakingRebasePercentage / 100) * trimmedBalance, 4);\r\n\r\n  return (\r\n    <div id=\"stake-view\" className=\"stake-metrics\">\r\n      <Zoom in={true} onEntered={() => setZoomed(true)}>\r\n        <Paper className={`ohm-card`}>\r\n          <Grid container direction=\"column\" spacing={2}>\r\n            <Grid item>\r\n              <div className=\"card-header\">\r\n                <Typography variant=\"h5\">OX Staking (3,3)</Typography>\r\n                <RebaseTimer />\r\n\r\n                {/*{address && oldSohmBalance > 0.01 && (*/}\r\n                {/*  <Link*/}\r\n                {/*    className=\"migrate-sohm-button\"*/}\r\n                {/*    style={{ textDecoration: \"none\" }}*/}\r\n                {/*    href=\"https://docs.olympusdao.finance/using-the-website/migrate\"*/}\r\n                {/*    aria-label=\"migrate-sohm\"*/}\r\n                {/*    target=\"_blank\"*/}\r\n                {/*  >*/}\r\n                {/*    <NewReleases viewBox=\"0 0 24 24\" />*/}\r\n                {/*    <Typography>Migrate sOHM!</Typography>*/}\r\n                {/*  </Link>*/}\r\n                {/*)}*/}\r\n              </div>\r\n            </Grid>\r\n\r\n            <Grid item>\r\n              <div className=\"stake-top-metrics\">\r\n                <Grid container spacing={2} alignItems=\"flex-end\">\r\n                  <Grid item xs={12} sm={12} md={12} lg={12}>\r\n                    <div className=\"stake-apy\">\r\n                      <Typography variant=\"h6\" color=\"textSecondary\">\r\n                        APY\r\n                      </Typography>\r\n                      <Typography variant=\"h4\">\r\n                        {stakingAPY ? (\r\n                          <>{new Intl.NumberFormat(\"en-US\").format(stakingAPY)}%</>\r\n                        ) : (\r\n                          <Skeleton width=\"150px\" />\r\n                        )}\r\n                      </Typography>\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            </Grid>\r\n\r\n            <Grid item>\r\n              <div className=\"stake-top-metrics\">\r\n                <Grid container spacing={2} alignItems=\"flex-end\">\r\n                  <Grid item xs={12} sm={6} md={6} lg={6}>\r\n                    <div className=\"stake-tvl\">\r\n                      <Typography variant=\"h6\" color=\"textSecondary\">\r\n                        Total Value Deposited\r\n                      </Typography>\r\n                      <Typography variant=\"h4\">\r\n                        {stakingTVL ? (\r\n                          new Intl.NumberFormat(\"en-US\", {\r\n                            style: \"currency\",\r\n                            currency: \"USD\",\r\n                            maximumFractionDigits: 0,\r\n                            minimumFractionDigits: 0,\r\n                          }).format(stakingTVL)\r\n                        ) : (\r\n                          <Skeleton width=\"150px\" />\r\n                        )}\r\n                      </Typography>\r\n                    </div>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} sm={6} md={6} lg={6}>\r\n                    <div className=\"stake-index\">\r\n                      <Typography variant=\"h6\" color=\"textSecondary\">\r\n                        Current Index\r\n                      </Typography>\r\n                      <Typography variant=\"h4\">\r\n<<<<<<< Updated upstream\r\n                        {currentIndex ? <>{trim(currentIndex, 1)} sOX</> : <Skeleton width=\"150px\" />}\r\n=======\r\n                        {currentIndex ? <>{trim(currentIndex, 0) / 10000} OX</> : <Skeleton width=\"150px\" />}\r\n>>>>>>> Stashed changes\r\n                      </Typography>\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            </Grid>\r\n\r\n            <div className=\"staking-area\">\r\n              {!address ? (\r\n                <div className=\"stake-wallet-notification\">\r\n                  <div className=\"wallet-menu\" id=\"wallet-menu\">\r\n                    {modalButton}\r\n                  </div>\r\n<<<<<<< Updated upstream\r\n                  <Typography color=\"textSecondary\" variant=\"h6\">\r\n                    Connect your wallet to stake OX\r\n                  </Typography>\r\n=======\r\n                  <Typography variant=\"h6\">Connect your wallet to stake OX</Typography>\r\n>>>>>>> Stashed changes\r\n                </div>\r\n              ) : (\r\n                <>\r\n                  <Box className=\"stake-action-area\">\r\n                    <Tabs\r\n                      key={String(zoomed)}\r\n                      centered\r\n                      value={view}\r\n                      textColor=\"primary\"\r\n                      indicatorColor=\"primary\"\r\n                      className=\"stake-tab-buttons\"\r\n                      onChange={changeView}\r\n                      aria-label=\"stake tabs\"\r\n                    >\r\n                      <Tab label=\"STAKE\" {...a11yProps(0)} />\r\n                      <Tab label=\"UNSTAKE\" {...a11yProps(1)} />\r\n                    </Tabs>\r\n\r\n                    <Box className=\"stake-action-row \" display=\"flex\" alignItems=\"center\">\r\n                      {address && !isAllowanceDataLoading ? (\r\n                        (!hasAllowance(\"ohm\") && view === 0) || (!hasAllowance(\"sohm\") && view === 1) ? (\r\n                          <Box className=\"help-text\">\r\n                            <Typography variant=\"body1\" align=\"left\" className=\"stake-note\" color=\"textSecondary\">\r\n                              {view === 0 ? (\r\n                                <>\r\n                                  First time staking <b>OX</b>?\r\n                                  <br />\r\n                                  Please approve Alpha to use your <b>OX</b> for staking.\r\n                                </>\r\n                              ) : (\r\n                                <>\r\n                                  First time unstaking <b>sOX</b>?\r\n                                  <br />\r\n                                  Please approve Alpha to use your <b>sOX</b> for unstaking.\r\n                                </>\r\n                              )}\r\n                            </Typography>\r\n                          </Box>\r\n                        ) : (\r\n                          <FormControl className=\"ohm-input\" variant=\"outlined\" color=\"primary\">\r\n                            <InputLabel htmlFor=\"amount-input\"></InputLabel>\r\n                            <OutlinedInput\r\n                              id=\"amount-input\"\r\n                              type=\"number\"\r\n                              placeholder=\"Enter an amount\"\r\n                              className=\"stake-input\"\r\n                              value={quantity}\r\n                              onChange={e => setQuantity(e.target.value)}\r\n                              labelWidth={0}\r\n                              endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                  <Button variant=\"text\" onClick={setMax} color=\"inherit\">\r\n                                    Max\r\n                                  </Button>\r\n                                </InputAdornment>\r\n                              }\r\n                            />\r\n                          </FormControl>\r\n                        )\r\n                      ) : (\r\n                        <Skeleton width=\"150px\" />\r\n                      )}\r\n\r\n                      <TabPanel value={view} index={0} className=\"stake-tab-panel\">\r\n                        {isAllowanceDataLoading ? (\r\n                          <Skeleton />\r\n                        ) : address && hasAllowance(\"ohm\") ? (\r\n                          <Button\r\n                            className=\"stake-button\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            disabled={isPendingTxn(pendingTransactions, \"staking\")}\r\n                            onClick={() => {\r\n                              onChangeStake(\"stake\");\r\n                            }}\r\n                          >\r\n                            {txnButtonText(pendingTransactions, \"staking\", \"Stake OX\")}\r\n                          </Button>\r\n                        ) : (\r\n                          <Button\r\n                            className=\"stake-button\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            disabled={isPendingTxn(pendingTransactions, \"approve_staking\")}\r\n                            onClick={() => {\r\n                              onSeekApproval(\"ohm\");\r\n                            }}\r\n                          >\r\n                            {txnButtonText(pendingTransactions, \"approve_staking\", \"Approve\")}\r\n                          </Button>\r\n                        )}\r\n                      </TabPanel>\r\n                      <TabPanel value={view} index={1} className=\"stake-tab-panel\">\r\n                        {isAllowanceDataLoading ? (\r\n                          <Skeleton />\r\n                        ) : address && hasAllowance(\"sohm\") ? (\r\n                          <Button\r\n                            className=\"stake-button\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            disabled={isPendingTxn(pendingTransactions, \"unstaking\")}\r\n                            onClick={() => {\r\n                              onChangeStake(\"unstake\");\r\n                            }}\r\n                          >\r\n                            {txnButtonText(pendingTransactions, \"unstaking\", \"Unstake OX\")}\r\n                          </Button>\r\n                        ) : (\r\n                          <Button\r\n                            className=\"stake-button\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            disabled={isPendingTxn(pendingTransactions, \"approve_unstaking\")}\r\n                            onClick={() => {\r\n                              onSeekApproval(\"sohm\");\r\n                            }}\r\n                          >\r\n                            {txnButtonText(pendingTransactions, \"approve_unstaking\", \"Approve\")}\r\n                          </Button>\r\n                        )}\r\n                      </TabPanel>\r\n                    </Box>\r\n                  </Box>\r\n\r\n                  <div className={`stake-user-data`}>\r\n                    <div className=\"data-row\">\r\n                      <Typography variant=\"body1\">Your Balance</Typography>\r\n                      <Typography variant=\"body1\">\r\n                        {isAppLoading ? <Skeleton width=\"80px\" /> : <>{trim(ohmBalance, 4)} OX</>}\r\n                      </Typography>\r\n                    </div>\r\n\r\n                    <div className=\"data-row\">\r\n                      <Typography variant=\"body1\">Your Staked Balance</Typography>\r\n                      <Typography variant=\"body1\">\r\n                        {isAppLoading ? <Skeleton width=\"80px\" /> : <>{trimmedBalance} sOX</>}\r\n                      </Typography>\r\n                    </div>\r\n\r\n                    <div className=\"data-row\">\r\n                      <Typography variant=\"body1\">Next Reward Amount</Typography>\r\n                      <Typography variant=\"body1\">\r\n                        {isAppLoading ? <Skeleton width=\"80px\" /> : <>{nextRewardValue} sOX</>}\r\n                      </Typography>\r\n                    </div>\r\n\r\n                    <div className=\"data-row\">\r\n                      <Typography variant=\"body1\">Next Reward Yield</Typography>\r\n                      <Typography variant=\"body1\">\r\n                        {isAppLoading ? <Skeleton width=\"80px\" /> : <>{stakingRebasePercentage}%</>}\r\n                      </Typography>\r\n                    </div>\r\n\r\n                    <div className=\"data-row\">\r\n                      <Typography variant=\"body1\">ROI (5-Day Rate)</Typography>\r\n                      <Typography variant=\"body1\">\r\n                        {isAppLoading ? <Skeleton width=\"80px\" /> : <>{trim(fiveDayRate * 100, 4)}%</>}\r\n                      </Typography>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n          </Grid>\r\n        </Paper>\r\n      </Zoom>\r\n\r\n      {/*<ExternalStakePool />*/}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Stake;\r\n","C:\\alphaomega\\temp33\\src\\views\\Dashboard\\Dashboard.jsx",[],"C:\\alphaomega\\temp33\\src\\views\\ChooseBond\\ChooseBond.jsx",[],"C:\\alphaomega\\temp33\\src\\views\\Home\\Home.jsx",[],"C:\\alphaomega\\temp33\\src\\slices\\StakeThunk.ts",[],"C:\\alphaomega\\temp33\\src\\views\\Stake\\ExternalStakePool.jsx",[],"C:\\alphaomega\\temp33\\src\\components\\RebaseTimer\\RebaseTimer.jsx",[],"C:\\alphaomega\\temp33\\src\\views\\ChooseBond\\BondRow.jsx",[],"C:\\alphaomega\\temp33\\src\\views\\ChooseBond\\ClaimBonds.jsx",[],"C:\\alphaomega\\temp33\\src\\views\\ChooseBond\\ClaimRow.jsx",[],"C:\\alphaomega\\temp33\\src\\views\\Claim\\Claim.jsx",[],"C:\\alphaomega\\temp33\\src\\views\\Wrap\\Wrap.jsx",[],"C:\\alphaomega\\temp33\\src\\slices\\WrapThunk.ts",[],"C:\\alphaomega\\temp33\\src\\views\\EarlyClaim\\EarlyClaim.jsx",[],{"ruleId":null,"fatal":true,"severity":2,"message":"424","line":92,"column":0},{"ruleId":null,"fatal":true,"severity":2,"message":"424","line":25,"column":0},{"ruleId":null,"fatal":true,"severity":2,"message":"424","line":7,"column":0},{"ruleId":null,"fatal":true,"severity":2,"message":"424","line":7,"column":0},{"ruleId":"425","severity":1,"message":"426","line":8,"column":1,"nodeType":null,"messageId":"427","endLine":9,"endColumn":1,"fix":"428"},{"ruleId":"425","severity":1,"message":"429","line":12,"column":1,"nodeType":null,"messageId":"427","endLine":12,"endColumn":4,"fix":"430"},{"ruleId":"425","severity":1,"message":"429","line":23,"column":1,"nodeType":null,"messageId":"427","endLine":23,"endColumn":4,"fix":"431"},{"ruleId":"425","severity":1,"message":"426","line":34,"column":4,"nodeType":null,"messageId":"427","endLine":35,"endColumn":1,"fix":"432"},{"ruleId":"425","severity":1,"message":"433","line":37,"column":2,"nodeType":null,"messageId":"434","endLine":37,"endColumn":2,"fix":"435"},{"ruleId":"425","severity":1,"message":"429","line":41,"column":1,"nodeType":null,"messageId":"427","endLine":41,"endColumn":4,"fix":"436"},{"ruleId":"425","severity":1,"message":"429","line":67,"column":1,"nodeType":null,"messageId":"427","endLine":67,"endColumn":4,"fix":"437"},{"ruleId":"425","severity":1,"message":"429","line":83,"column":1,"nodeType":null,"messageId":"427","endLine":83,"endColumn":4,"fix":"438"},{"ruleId":"425","severity":1,"message":"439","line":54,"column":15,"nodeType":null,"messageId":"427","endLine":54,"endColumn":16,"fix":"440"},{"ruleId":"425","severity":1,"message":"439","line":59,"column":17,"nodeType":null,"messageId":"427","endLine":59,"endColumn":18,"fix":"441"},{"ruleId":"425","severity":1,"message":"439","line":62,"column":1,"nodeType":null,"messageId":"427","endLine":62,"endColumn":2,"fix":"442"},{"ruleId":"425","severity":1,"message":"439","line":68,"column":15,"nodeType":null,"messageId":"427","endLine":68,"endColumn":16,"fix":"443"},{"ruleId":"425","severity":1,"message":"444","line":213,"column":1,"nodeType":null,"messageId":"427","endLine":216,"endColumn":1,"fix":"445"},{"ruleId":"425","severity":1,"message":"446","line":30,"column":17,"nodeType":null,"messageId":"447","endLine":30,"endColumn":61,"fix":"448"},{"ruleId":"425","severity":1,"message":"449","line":31,"column":18,"nodeType":null,"messageId":"447","endLine":31,"endColumn":62,"fix":"450"},{"ruleId":"425","severity":1,"message":"451","line":32,"column":5,"nodeType":null,"messageId":"434","endLine":32,"endColumn":5,"fix":"452"},{"ruleId":"425","severity":1,"message":"453","line":33,"column":3,"nodeType":null,"messageId":"427","endLine":34,"endColumn":1,"fix":"454"},{"ruleId":"425","severity":1,"message":"455","line":35,"column":1,"nodeType":null,"messageId":"434","endLine":35,"endColumn":1,"fix":"456"},{"ruleId":"425","severity":1,"message":"455","line":36,"column":1,"nodeType":null,"messageId":"434","endLine":36,"endColumn":1,"fix":"457"},{"ruleId":"425","severity":1,"message":"455","line":37,"column":1,"nodeType":null,"messageId":"434","endLine":37,"endColumn":1,"fix":"458"},{"ruleId":"425","severity":1,"message":"455","line":38,"column":1,"nodeType":null,"messageId":"434","endLine":38,"endColumn":1,"fix":"459"},{"ruleId":"425","severity":1,"message":"455","line":39,"column":1,"nodeType":null,"messageId":"434","endLine":39,"endColumn":1,"fix":"460"},{"ruleId":"425","severity":1,"message":"455","line":40,"column":1,"nodeType":null,"messageId":"434","endLine":40,"endColumn":1,"fix":"461"},{"ruleId":"425","severity":1,"message":"455","line":41,"column":1,"nodeType":null,"messageId":"434","endLine":41,"endColumn":1,"fix":"462"},{"ruleId":"425","severity":1,"message":"455","line":42,"column":1,"nodeType":null,"messageId":"434","endLine":42,"endColumn":1,"fix":"463"},{"ruleId":"425","severity":1,"message":"455","line":43,"column":1,"nodeType":null,"messageId":"434","endLine":43,"endColumn":1,"fix":"464"},{"ruleId":"425","severity":1,"message":"455","line":44,"column":1,"nodeType":null,"messageId":"434","endLine":44,"endColumn":1,"fix":"465"},{"ruleId":"425","severity":1,"message":"455","line":45,"column":1,"nodeType":null,"messageId":"434","endLine":45,"endColumn":1,"fix":"466"},{"ruleId":"425","severity":1,"message":"467","line":58,"column":17,"nodeType":null,"messageId":"447","endLine":58,"endColumn":61,"fix":"468"},{"ruleId":"425","severity":1,"message":"469","line":59,"column":18,"nodeType":null,"messageId":"447","endLine":59,"endColumn":62,"fix":"470"},{"ruleId":"425","severity":1,"message":"471","line":92,"column":9,"nodeType":null,"messageId":"447","endLine":93,"endColumn":123,"fix":"472"},{"ruleId":"425","severity":1,"message":"473","line":10,"column":21,"nodeType":null,"messageId":"447","endLine":10,"endColumn":45,"fix":"474"},{"ruleId":"425","severity":1,"message":"475","line":22,"column":3,"nodeType":null,"messageId":"447","endLine":23,"endColumn":40,"fix":"476"},{"ruleId":"425","severity":1,"message":"477","line":24,"column":51,"nodeType":null,"messageId":"447","endLine":24,"endColumn":54,"fix":"478"},{"ruleId":"425","severity":1,"message":"479","line":25,"column":51,"nodeType":null,"messageId":"447","endLine":25,"endColumn":55,"fix":"480"},{"ruleId":"425","severity":1,"message":"481","line":27,"column":23,"nodeType":null,"messageId":"447","endLine":27,"endColumn":43,"fix":"482"},{"ruleId":"425","severity":1,"message":"483","line":75,"column":15,"nodeType":null,"messageId":"434","endLine":75,"endColumn":15,"fix":"484"},{"ruleId":"425","severity":1,"message":"485","line":76,"column":5,"nodeType":null,"messageId":"434","endLine":76,"endColumn":5,"fix":"486"},{"ruleId":"425","severity":1,"message":"487","line":120,"column":68,"nodeType":null,"messageId":"447","endLine":120,"endColumn":90,"fix":"488"},{"ruleId":"425","severity":1,"message":"485","line":127,"column":57,"nodeType":null,"messageId":"434","endLine":127,"endColumn":57,"fix":"489"},{"ruleId":"425","severity":1,"message":"490","line":128,"column":1,"nodeType":null,"messageId":"427","endLine":128,"endColumn":3,"fix":"491"},{"ruleId":"425","severity":1,"message":"426","line":210,"column":1,"nodeType":null,"messageId":"427","endLine":211,"endColumn":1,"fix":"492"},{"ruleId":"425","severity":1,"message":"433","line":212,"column":6,"nodeType":null,"messageId":"434","endLine":212,"endColumn":6,"fix":"493"},{"ruleId":"425","severity":1,"message":"494","line":213,"column":7,"nodeType":null,"messageId":"447","endLine":213,"endColumn":16,"fix":"495"},{"ruleId":"425","severity":1,"message":"439","line":214,"column":61,"nodeType":null,"messageId":"427","endLine":214,"endColumn":62,"fix":"496"},{"ruleId":"425","severity":1,"message":"485","line":215,"column":68,"nodeType":null,"messageId":"434","endLine":215,"endColumn":68,"fix":"497"},{"ruleId":"425","severity":1,"message":"485","line":216,"column":89,"nodeType":null,"messageId":"434","endLine":216,"endColumn":89,"fix":"498"},{"ruleId":"425","severity":1,"message":"499","line":218,"column":4,"nodeType":null,"messageId":"447","endLine":218,"endColumn":12,"fix":"500"},{"ruleId":"425","severity":1,"message":"485","line":221,"column":2,"nodeType":null,"messageId":"434","endLine":221,"endColumn":2,"fix":"501"},{"ruleId":"425","severity":1,"message":"485","line":224,"column":46,"nodeType":null,"messageId":"434","endLine":224,"endColumn":46,"fix":"502"},{"ruleId":"425","severity":1,"message":"439","line":227,"column":62,"nodeType":null,"messageId":"427","endLine":227,"endColumn":63,"fix":"503"},{"ruleId":"425","severity":1,"message":"485","line":228,"column":66,"nodeType":null,"messageId":"434","endLine":228,"endColumn":66,"fix":"504"},{"ruleId":"425","severity":1,"message":"451","line":229,"column":2,"nodeType":null,"messageId":"434","endLine":229,"endColumn":2,"fix":"505"},{"ruleId":null,"fatal":true,"severity":2,"message":"424","line":11,"column":0},{"ruleId":"425","severity":1,"message":"506","line":111,"column":115,"nodeType":null,"messageId":"434","endLine":111,"endColumn":115,"fix":"507"},{"ruleId":"425","severity":1,"message":"508","line":112,"column":22,"nodeType":null,"messageId":"427","endLine":112,"endColumn":27,"fix":"509"},{"ruleId":null,"fatal":true,"severity":2,"message":"424","line":282,"column":0},{"ruleId":null,"fatal":true,"severity":2,"message":"424","line":232,"column":0},"Parsing error: Merge conflict marker encountered.","prettier/prettier","Delete `␍⏎`","delete",{"range":"510","text":"511"},"Delete `···`",{"range":"512","text":"511"},{"range":"513","text":"511"},{"range":"514","text":"511"},"Insert `·`","insert",{"range":"515","text":"516"},{"range":"517","text":"511"},{"range":"518","text":"511"},{"range":"519","text":"511"},"Delete `·`",{"range":"520","text":"511"},{"range":"521","text":"511"},{"range":"522","text":"511"},{"range":"523","text":"511"},"Delete `␍⏎␍⏎␍⏎`",{"range":"524","text":"511"},"Replace `'0x1B408886aBBDfdBDC0CC5FFF2D0E982E593F4672'` with `·\"0x1B408886aBBDfdBDC0CC5FFF2D0E982E593F4672\"`","replace",{"range":"525","text":"526"},"Replace `'0x8301f2213c0eed49a7e28ae4c3e91722919b8b47'` with `·\"0x8301f2213c0eed49a7e28ae4c3e91722919b8b47\",`",{"range":"527","text":"528"},"Insert `␍⏎`",{"range":"529","text":"530"},"Delete `·␍⏎`",{"range":"531","text":"511"},"Insert `··`",{"range":"532","text":"533"},{"range":"534","text":"533"},{"range":"535","text":"533"},{"range":"536","text":"533"},{"range":"537","text":"533"},{"range":"538","text":"533"},{"range":"539","text":"533"},{"range":"540","text":"533"},{"range":"541","text":"533"},{"range":"542","text":"533"},{"range":"543","text":"533"},"Replace `'0x3Ae07374d7C89f608906321444e8AFdED91aDA5E'` with `·\"0x3Ae07374d7C89f608906321444e8AFdED91aDA5E\"`",{"range":"544","text":"545"},"Replace `'0xe9e7cea3dedca5984780bafc599bd69add087d56'` with `·\"0xe9e7cea3dedca5984780bafc599bd69add087d56\",`",{"range":"546","text":"547"},"Replace `␍⏎···`https://pancakeswap.finance/add/${addresses[NetworkID.Mainnet].DAI_ADDRESS}/${addresses[NetworkID.Mainnet].PID_ADDRESS` with `·`https://pancakeswap.finance/add/${addresses[NetworkID.Mainnet].DAI_ADDRESS}/${␍⏎····addresses[NetworkID.Mainnet].PID_ADDRESS␍⏎··`",{"range":"548","text":"549"},"Replace `'../assets/ohm/logo.png'` with `\"../assets/ohm/logo.png\";`",{"range":"550","text":"551"},"Replace `␍⏎··console.error(reserves[0].toString())` with `console.error(reserves[0].toString());`",{"range":"552","text":"553"},"Replace `18)` with `·18);`",{"range":"554","text":"555"},"Replace `9,2)` with `·9,·2);`",{"range":"556","text":"557"},"Replace `(Number(reserves0))/` with `Number(reserves0)·/·`",{"range":"558","text":"559"},"Insert `,`",{"range":"560","text":"561"},"Insert `;`",{"range":"562","text":"563"},"Replace `borderRadius:\"50%\"}}/>` with `·borderRadius:·\"50%\"·}}·/>;`",{"range":"564","text":"565"},{"range":"566","text":"563"},"Delete `··`",{"range":"567","text":"511"},{"range":"568","text":"511"},{"range":"569","text":"516"},"Replace `(balance)` with `·(balance)·`",{"range":"570","text":"571"},{"range":"572","text":"511"},{"range":"573","text":"563"},{"range":"574","text":"563"},"Replace `catch(e)` with `·catch·(e)·`",{"range":"575","text":"576"},{"range":"577","text":"563"},{"range":"578","text":"563"},{"range":"579","text":"511"},{"range":"580","text":"563"},{"range":"581","text":"530"},"Insert `·with`",{"range":"582","text":"583"},"Delete `·with`",{"range":"584","text":"511"},[252,254],"",[297,300],[540,543],[778,780],[785,785]," ",[927,930],[1894,1897],[2453,2456],[2435,2436],[2657,2658],[2683,2684],[2951,2952],[8872,8878],[1402,1446]," \"0x1B408886aBBDfdBDC0CC5FFF2D0E982E593F4672\"",[1466,1510]," \"0x8301f2213c0eed49a7e28ae4c3e91722919b8b47\",",[1516,1516],"\r\n",[1520,1523],[1576,1576],"  ",[1629,1629],[1683,1683],[1741,1741],[1795,1795],[1852,1852],[1906,1906],[1966,1966],[2030,2030],[2093,2093],[2151,2151],[3006,3050]," \"0x3Ae07374d7C89f608906321444e8AFdED91aDA5E\"",[3070,3114]," \"0xe9e7cea3dedca5984780bafc599bd69add087d56\",",[3971,4095]," `https://pancakeswap.finance/add/${addresses[NetworkID.Mainnet].DAI_ADDRESS}/${\r\n    addresses[NetworkID.Mainnet].PID_ADDRESS\r\n  ",[507,531],"\"../assets/ohm/logo.png\";",[1133,1174],"console.error(reserves[0].toString());",[1226,1229]," 18);",[1281,1285]," 9, 2);",[1311,1331],"Number(reserves0) / ",[2902,2902],",",[2908,2908],";",[4122,4144]," borderRadius: \"50%\" }} />;",[4467,4467],[4469,4471],[6713,6715],[6815,6815],[6824,6833]," (balance) ",[6896,6897],[6966,6966],[7056,7056],[7068,7076]," catch (e) ",[7157,7157],[7285,7285],[7354,7355],[7432,7432],[7435,7435],[3635,3635]," with",[3658,3663]]