{"ast":null,"code":"var _jsxFileName = \"C:\\\\arete\\\\AlphaDAO-react\\\\src\\\\views\\\\ChooseBond\\\\BondRow.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { trim } from \"../../helpers\";\nimport BondLogo from \"../../components/BondLogo\";\nimport { Box, Button, Link, Paper, Typography, TableRow, TableCell, SvgIcon, Slide, makeStyles } from \"@material-ui/core\";\nimport { ReactComponent as ArrowUp } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/icons/arrow-up.svg\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./choosebond.scss\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport useBonds from \"src/hooks/Bonds\";\nimport { useWeb3Context } from \"../../hooks/web3Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function BondDataCard({\n  bond\n}) {\n  _s();\n\n  var _bond$bondPrice;\n\n  const {\n    chainID\n  } = useWeb3Context();\n  const {\n    loading\n  } = useBonds(chainID);\n  const isBondLoading = (_bond$bondPrice = !bond.bondPrice) !== null && _bond$bondPrice !== void 0 ? _bond$bondPrice : true;\n  return /*#__PURE__*/_jsxDEV(Slide, {\n    direction: \"up\",\n    in: true,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      id: `${bond.name}--bond`,\n      className: \"bond-data-card ohm-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bond-pair\",\n        children: [/*#__PURE__*/_jsxDEV(BondLogo, {\n          bond: bond\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bond-name\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: bond.displayName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), bond.isLP && /*#__PURE__*/_jsxDEV(Button, {\n            color: \"secondary\",\n            href: bond.lpUrl,\n            target: \"_blank\",\n            component: Link,\n            children: [\"View Contract\", /*#__PURE__*/_jsxDEV(SvgIcon, {\n              component: ArrowUp,\n              htmlColor: \"#A3A3A3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this) // <div>\n          //   <Link color=\"secondary\" href={bond.lpUrl} target=\"_blank\">\n          //     <Typography color=\"secondary\" variant=\"body1\">\n          //       View Contract\n          //       <SvgIcon component={ArrowUp} htmlColor=\"#A3A3A3\" />\n          //     </Typography>\n          //   </Link>\n          // </div>\n          ]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data-row\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: \"bond-price\",\n          children: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: isBondLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n              width: \"50px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this) : new Intl.NumberFormat(\"en-US\", {\n              style: \"currency\",\n              currency: \"USD\",\n              maximumFractionDigits: 2,\n              minimumFractionDigits: 2\n            }).format(bond.bondPrice)\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data-row\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: \"ROI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: isBondLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n            width: \"50px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 40\n          }, this) : `${trim(bond.bondDiscount * 100, 2)}%`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data-row\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Purchased\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: isBondLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n            width: \"80px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this) : new Intl.NumberFormat(\"en-US\", {\n            style: \"currency\",\n            currency: \"USD\",\n            maximumFractionDigits: 0,\n            minimumFractionDigits: 0\n          }).format(bond.purchased)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        component: NavLink,\n        to: `/bonds/${bond.name}`,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"primary\",\n          fullWidth: true,\n          disabled: !bond.isAvailable[chainID],\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: !bond.isAvailable[chainID] ? \"Sold Out\" : `Bond ${bond.displayName}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BondDataCard, \"uuySl6SY6w3nGxb35oNDJTDwgLU=\", false, function () {\n  return [useWeb3Context, useBonds];\n});\n\n_c = BondDataCard;\nexport function BondTableData({\n  bond\n}) {\n  _s2();\n\n  var _bond$bondPrice2;\n\n  const {\n    chainID\n  } = useWeb3Context(); // Use BondPrice as indicator of loading.\n\n  const isBondLoading = (_bond$bondPrice2 = !bond.bondPrice) !== null && _bond$bondPrice2 !== void 0 ? _bond$bondPrice2 : true; // const isBondLoading = useSelector(state => !state.bonding[bond]?.bondPrice ?? true);\n\n  return /*#__PURE__*/_jsxDEV(TableRow, {\n    id: `${bond.name}--bond`,\n    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n      align: \"left\",\n      className: \"bond-name-cell\",\n      children: [/*#__PURE__*/_jsxDEV(BondLogo, {\n        bond: bond\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bond-name\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: bond.displayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), bond.isLP && /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          href: bond.lpUrl,\n          target: \"_blank\",\n          component: Link,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            children: \"View Contract\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(SvgIcon, {\n            component: ArrowUp,\n            htmlColor: \"#A3A3A3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this) // <Link color=\"secondary\" href={bond.lpUrl} target=\"_blank\">\n        //   <Typography style={{ fontWeight: 400 }}>\n        //     View Contract\n        //     <SvgIcon component={ArrowUp} htmlColor=\"#A3A3A3\" />\n        //   </Typography>\n        // </Link>\n        ]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      align: \"left\",\n      children: bond.isAvailable === false ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"80px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            justifyContent: \"flex-end\"\n          },\n          children: \"\\u2013\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: isBondLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n            width: \"50px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }, this) : new Intl.NumberFormat(\"en-US\", {\n            style: \"currency\",\n            currency: \"USD\",\n            maximumFractionDigits: 2,\n            minimumFractionDigits: 2\n          }).format(bond.bondPrice)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      align: \"left\",\n      children: bond.isAvailable === false ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"50px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            justifyContent: \"flex-end\"\n          },\n          children: \"\\u2013\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this) : isBondLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this) : `${trim(bond.bondDiscount * 100, 2)}%`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      align: \"right\",\n      children: bond.isAvailable === false ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"40px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            justifyContent: \"flex-end\"\n          },\n          children: \"\\u2013\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this) : isBondLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this) : new Intl.NumberFormat(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\",\n        maximumFractionDigits: 0,\n        minimumFractionDigits: 0\n      }).format(bond.purchased)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        component: NavLink,\n        to: `/bonds/${bond.name}`,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          disabled: !bond.isAvailable[chainID],\n          children: bond.isAvailable === false ? /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"COMING SOON\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: !bond.isAvailable[chainID] ? \"SOLD OUT\" : \"BOND\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(BondTableData, \"MByQf+JZKqHkZoGpVBzX8L/vd4M=\", false, function () {\n  return [useWeb3Context];\n});\n\n_c2 = BondTableData;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BondDataCard\");\n$RefreshReg$(_c2, \"BondTableData\");","map":{"version":3,"sources":["C:/arete/AlphaDAO-react/src/views/ChooseBond/BondRow.jsx"],"names":["trim","BondLogo","Box","Button","Link","Paper","Typography","TableRow","TableCell","SvgIcon","Slide","makeStyles","NavLink","Skeleton","useBonds","useWeb3Context","BondDataCard","bond","chainID","loading","isBondLoading","bondPrice","name","displayName","isLP","lpUrl","ArrowUp","Intl","NumberFormat","style","currency","maximumFractionDigits","minimumFractionDigits","format","bondDiscount","purchased","isAvailable","BondTableData","width","justifyContent"],"mappings":"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","sourcesContent":["import { trim } from \"../../helpers\";\nimport BondLogo from \"../../components/BondLogo\";\nimport {\n  Box,\n  Button,\n  Link,\n  Paper,\n  Typography,\n  TableRow,\n  TableCell,\n  SvgIcon,\n  Slide,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { ReactComponent as ArrowUp } from \"../../assets/icons/arrow-up.svg\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./choosebond.scss\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport useBonds from \"src/hooks/Bonds\";\nimport { useWeb3Context } from \"../../hooks/web3Context\";\n\nexport function BondDataCard({ bond }) {\n  const { chainID } = useWeb3Context();\n  const { loading } = useBonds(chainID);\n  const isBondLoading = !bond.bondPrice ?? true;\n\n  return (\n    <Slide direction=\"up\" in={true}>\n      <Paper id={`${bond.name}--bond`} className=\"bond-data-card ohm-card\">\n        <div className=\"bond-pair\">\n          <BondLogo bond={bond} />\n          <div className=\"bond-name\">\n            <Typography>{bond.displayName}</Typography>\n            {bond.isLP && (\n              <Button color=\"secondary\" href={bond.lpUrl} target=\"_blank\" component={Link}>\n                View Contract\n                <SvgIcon component={ArrowUp} htmlColor=\"#A3A3A3\" />\n              </Button>\n              // <div>\n              //   <Link color=\"secondary\" href={bond.lpUrl} target=\"_blank\">\n              //     <Typography color=\"secondary\" variant=\"body1\">\n              //       View Contract\n              //       <SvgIcon component={ArrowUp} htmlColor=\"#A3A3A3\" />\n              //     </Typography>\n              //   </Link>\n              // </div>\n            )}\n          </div>\n        </div>\n\n        <div className=\"data-row\">\n          <Typography>Price</Typography>\n          <Typography className=\"bond-price\">\n            <>\n              {isBondLoading ? (\n                <Skeleton width=\"50px\" />\n              ) : (\n                new Intl.NumberFormat(\"en-US\", {\n                  style: \"currency\",\n                  currency: \"USD\",\n                  maximumFractionDigits: 2,\n                  minimumFractionDigits: 2,\n                }).format(bond.bondPrice)\n              )}\n            </>\n          </Typography>\n        </div>\n\n        <div className=\"data-row\">\n          <Typography>ROI</Typography>\n          <Typography>{isBondLoading ? <Skeleton width=\"50px\" /> : `${trim(bond.bondDiscount * 100, 2)}%`}</Typography>\n        </div>\n\n        <div className=\"data-row\">\n          <Typography>Purchased</Typography>\n          <Typography>\n            {isBondLoading ? (\n              <Skeleton width=\"80px\" />\n            ) : (\n              new Intl.NumberFormat(\"en-US\", {\n                style: \"currency\",\n                currency: \"USD\",\n                maximumFractionDigits: 0,\n                minimumFractionDigits: 0,\n              }).format(bond.purchased)\n            )}\n          </Typography>\n        </div>\n        <Link component={NavLink} to={`/bonds/${bond.name}`}>\n          <Button variant=\"outlined\" color=\"primary\" fullWidth disabled={!bond.isAvailable[chainID]}>\n            <Typography variant=\"h5\">{!bond.isAvailable[chainID] ? \"Sold Out\" : `Bond ${bond.displayName}`}</Typography>\n          </Button>\n        </Link>\n      </Paper>\n    </Slide>\n  );\n}\n\nexport function BondTableData({ bond }) {\n  const { chainID } = useWeb3Context();\n  // Use BondPrice as indicator of loading.\n  const isBondLoading = !bond.bondPrice ?? true;\n  // const isBondLoading = useSelector(state => !state.bonding[bond]?.bondPrice ?? true);\n\n  return (\n    <TableRow id={`${bond.name}--bond`}>\n      <TableCell align=\"left\" className=\"bond-name-cell\">\n        <BondLogo bond={bond} />\n        <div className=\"bond-name\">\n          <Typography variant=\"body1\">{bond.displayName}</Typography>\n          {bond.isLP && (\n            <Button color=\"secondary\" href={bond.lpUrl} target=\"_blank\" component={Link}>\n              <Typography color=\"textSecondary\">View Contract</Typography>\n              <SvgIcon component={ArrowUp} htmlColor=\"#A3A3A3\" />\n            </Button>\n\n            // <Link color=\"secondary\" href={bond.lpUrl} target=\"_blank\">\n            //   <Typography style={{ fontWeight: 400 }}>\n            //     View Contract\n            //     <SvgIcon component={ArrowUp} htmlColor=\"#A3A3A3\" />\n            //   </Typography>\n            // </Link>\n          )}\n        </div>\n      </TableCell>\n      <TableCell align=\"left\">\n        {bond.isAvailable === false ? (\n          <div style={{ width: \"80px\" }}>\n            <Typography style={{ justifyContent: \"flex-end\" }}>–</Typography>\n          </div>\n        ) : (\n          <Typography>\n            <>\n              {isBondLoading ? (\n                <Skeleton width=\"50px\" />\n              ) : (\n                new Intl.NumberFormat(\"en-US\", {\n                  style: \"currency\",\n                  currency: \"USD\",\n                  maximumFractionDigits: 2,\n                  minimumFractionDigits: 2,\n                }).format(bond.bondPrice)\n              )}\n            </>\n          </Typography>\n        )}\n      </TableCell>\n      <TableCell align=\"left\">\n        {bond.isAvailable === false ? (\n          <div style={{ width: \"50px\" }}>\n            <Typography style={{ justifyContent: \"flex-end\" }}>–</Typography>\n          </div>\n        ) : isBondLoading ? (\n          <Skeleton />\n        ) : (\n          `${trim(bond.bondDiscount * 100, 2)}%`\n        )}\n      </TableCell>\n      <TableCell align=\"right\">\n        {bond.isAvailable === false ? (\n          <div style={{ width: \"40px\" }}>\n            <Typography style={{ justifyContent: \"flex-end\" }}>–</Typography>\n          </div>\n        ) : isBondLoading ? (\n          <Skeleton />\n        ) : (\n          new Intl.NumberFormat(\"en-US\", {\n            style: \"currency\",\n            currency: \"USD\",\n            maximumFractionDigits: 0,\n            minimumFractionDigits: 0,\n          }).format(bond.purchased)\n        )}\n      </TableCell>\n      <TableCell>\n        <Link component={NavLink} to={`/bonds/${bond.name}`}>\n          <Button variant=\"contained\" color=\"secondary\" disabled={!bond.isAvailable[chainID]}>\n            {bond.isAvailable === false ? (\n              <Typography variant=\"h6\">COMING SOON</Typography>\n            ) : (\n              <Typography variant=\"h6\">{!bond.isAvailable[chainID] ? \"SOLD OUT\" : \"BOND\"}</Typography>\n            )}\n          </Button>\n        </Link>\n      </TableCell>\n    </TableRow>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}