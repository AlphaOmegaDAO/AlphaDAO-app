{"ast":null,"code":"import { error } from \"../../slices/MessagesSlice\";\nimport store from \"../../store\"; // List of error messages we wish to intercept\n\nconst interceptedConsoleMessages = [\"Wrong network, please switch to Polygon\"]; // Intercepts an error sent to console and dispatches it to the message framework.\n\nvar consoleInterceptor = function (message) {\n  if (interceptedConsoleMessages.includes(message)) {\n    store.dispatch(error(message));\n  }\n\n  console._error_old(message);\n};\n\nconsoleInterceptor.isInterceptor = true; // Replaces the console.error function by our interceptor\n\nif (console.error.isInterceptor != true) {\n  console._error_old = console.error;\n  console.error = consoleInterceptor;\n}","map":{"version":3,"sources":["C:/arete/AlphaDAO-react/src/components/Messages/ConsoleInterceptor.js"],"names":["error","store","interceptedConsoleMessages","consoleInterceptor","message","includes","dispatch","console","_error_old","isInterceptor"],"mappings":"AAAA,SAASA,KAAT,QAAsB,4BAAtB;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CAEA;;AACA,MAAMC,0BAA0B,GAAG,CAAC,yCAAD,CAAnC,C,CAEA;;AACA,IAAIC,kBAAkB,GAAG,UAAUC,OAAV,EAAmB;AAC1C,MAAIF,0BAA0B,CAACG,QAA3B,CAAoCD,OAApC,CAAJ,EAAkD;AAChDH,IAAAA,KAAK,CAACK,QAAN,CAAeN,KAAK,CAACI,OAAD,CAApB;AACD;;AACDG,EAAAA,OAAO,CAACC,UAAR,CAAmBJ,OAAnB;AACD,CALD;;AAMAD,kBAAkB,CAACM,aAAnB,GAAmC,IAAnC,C,CAEA;;AACA,IAAIF,OAAO,CAACP,KAAR,CAAcS,aAAd,IAA+B,IAAnC,EAAyC;AACvCF,EAAAA,OAAO,CAACC,UAAR,GAAqBD,OAAO,CAACP,KAA7B;AACAO,EAAAA,OAAO,CAACP,KAAR,GAAgBG,kBAAhB;AACD","sourcesContent":["import { error } from \"../../slices/MessagesSlice\";\nimport store from \"../../store\";\n\n// List of error messages we wish to intercept\nconst interceptedConsoleMessages = [\"Wrong network, please switch to Polygon\"];\n\n// Intercepts an error sent to console and dispatches it to the message framework.\nvar consoleInterceptor = function (message) {\n  if (interceptedConsoleMessages.includes(message)) {\n    store.dispatch(error(message));\n  }\n  console._error_old(message);\n};\nconsoleInterceptor.isInterceptor = true;\n\n// Replaces the console.error function by our interceptor\nif (console.error.isInterceptor != true) {\n  console._error_old = console.error;\n  console.error = consoleInterceptor;\n}\n"]},"metadata":{},"sourceType":"module"}