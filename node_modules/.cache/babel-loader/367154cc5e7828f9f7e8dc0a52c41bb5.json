{"ast":null,"code":"var _jsxFileName = \"C:\\\\arete\\\\AlphaDAO-react\\\\src\\\\views\\\\Stake\\\\ExternalStakePool.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Box, Paper, Typography, Button, SvgIcon, TableHead, TableCell, TableBody, Table, TableRow, TableContainer, Zoom } from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport BondLogo from \"../../components/BondLogo\";\nimport { ReactComponent as GuruLusdImg } from \"@svgr/webpack?-svgo,+titleProp,+ref!src/assets/tokens/OX-LUSD.svg\";\nimport { ReactComponent as ArrowUp } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/icons/arrow-up.svg\";\nimport { getLusdData } from \"../../slices/LusdSlice\";\nimport { useWeb3Context } from \"src/hooks/web3Context\";\nimport { trim } from \"../../helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ExternalStakePool() {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    provider,\n    hasCachedProvider,\n    address,\n    connected,\n    connect,\n    chainID\n  } = useWeb3Context();\n  const [walletChecked, setWalletChecked] = useState(false);\n  const isSmallScreen = useMediaQuery(\"(max-width: 705px)\");\n  const isMobileScreen = useMediaQuery(\"(max-width: 513px)\");\n  const isLusdLoading = useSelector(state => state.lusdData.loading);\n  const lusdData = useSelector(state => {\n    return state.lusdData;\n  });\n  const ohmLusdReserveBalance = useSelector(state => {\n    var _state$account$bonds, _state$account$bonds$;\n\n    return state.account && ((_state$account$bonds = state.account.bonds) === null || _state$account$bonds === void 0 ? void 0 : (_state$account$bonds$ = _state$account$bonds.ohm_lusd_lp) === null || _state$account$bonds$ === void 0 ? void 0 : _state$account$bonds$.balance);\n  });\n\n  const loadLusdData = async () => {\n    await dispatch(getLusdData({\n      address: address,\n      provider: provider,\n      networkID: chainID\n    }));\n  };\n\n  useEffect(() => {\n    if (hasCachedProvider()) {\n      // then user DOES have a wallet\n      connect().then(() => {\n        setWalletChecked(true);\n      });\n    } else {\n      // then user DOES NOT have a wallet\n      setWalletChecked(true);\n    }\n  }, []); // this useEffect fires on state change from above. It will ALWAYS fire AFTER\n\n  useEffect(() => {\n    // don't load ANY details until wallet is Checked\n    if (walletChecked) {\n      loadLusdData();\n    }\n  }, [walletChecked]);\n  return /*#__PURE__*/_jsxDEV(Zoom, {\n    in: true,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: `ohm-card secondary ${isSmallScreen && \"mobile\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: \"Farm Pool\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-content\",\n        children: !isSmallScreen ? /*#__PURE__*/_jsxDEV(TableContainer, {\n          className: \"stake-table\",\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Asset\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"left\",\n                  children: \"APY\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"left\",\n                  children: \"TVD\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"left\",\n                  children: \"Balance\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    className: \"ohm-pairs\",\n                    children: [/*#__PURE__*/_jsxDEV(BondLogo, {\n                      bond: {\n                        bondIconSvg: GuruLusdImg,\n                        isLP: true\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 92,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      children: \"OHM-LUSD\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 93,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"left\",\n                  children: isLusdLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                    width: \"80px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 25\n                  }, this) : lusdData.apy === 0 ? \"Coming Soon\" : trim(lusdData.apy, 1) + \"%\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"left\",\n                  children: isLusdLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                    width: \"80px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 25\n                  }, this) : new Intl.NumberFormat(\"en-US\", {\n                    style: \"currency\",\n                    currency: \"USD\",\n                    maximumFractionDigits: 0,\n                    minimumFractionDigits: 0\n                  }).format(lusdData.tvl)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"left\",\n                  children: isLusdLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                    width: \"80px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 40\n                  }, this) : (trim(ohmLusdReserveBalance, 2) || 0) + \" SLP\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outlined\",\n                    color: \"secondary\",\n                    href: \"https://crucible.alchemist.wtf/reward-programs\",\n                    target: \"_blank\",\n                    className: \"stake-lp-button\",\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body1\",\n                      children: \"Stake in Crucible\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 128,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(SvgIcon, {\n                      component: ArrowUp,\n                      color: \"primary\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 129,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stake-pool\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `pool-card-top-row ${isMobileScreen && \"small\"}`,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              className: \"ohm-pairs\",\n              children: [/*#__PURE__*/_jsxDEV(BondLogo, {\n                bond: {\n                  bondIconSvg: GuruLusdImg,\n                  isLP: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: false,\n                children: \"OX-LUSD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pool-data\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"data-row\",\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                children: \"APY\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: isLusdLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                  width: \"80px\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 23\n                }, this) : lusdData.apy === 0 ? \"Coming Soon\" : trim(lusdData.apy, 1) + \"%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"data-row\",\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                children: \"TVD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: isLusdLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                  width: \"80px\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 23\n                }, this) : new Intl.NumberFormat(\"en-US\", {\n                  style: \"currency\",\n                  currency: \"USD\",\n                  maximumFractionDigits: 0,\n                  minimumFractionDigits: 0\n                }).format(lusdData.tvl)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"data-row\",\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                children: \"Balance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: isLusdLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                  width: \"80px\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 38\n                }, this) : (trim(lusdData.balance, 2) || 0) + \"LP\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"secondary\",\n              href: \"https://crucible.alchemist.wtf/reward-programs\",\n              target: \"_blank\",\n              className: \"stake-lp-button\",\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: \"Stake in Crucible\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(SvgIcon, {\n                component: ArrowUp,\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ExternalStakePool, \"2qBDYj3otmKMHSGYyIegI8y9aDs=\", false, function () {\n  return [useDispatch, useWeb3Context, useMediaQuery, useMediaQuery, useSelector, useSelector, useSelector];\n});\n\n_c = ExternalStakePool;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExternalStakePool\");","map":{"version":3,"sources":["C:/arete/AlphaDAO-react/src/views/Stake/ExternalStakePool.jsx"],"names":["useEffect","useState","useSelector","useDispatch","Box","Paper","Typography","Button","SvgIcon","TableHead","TableCell","TableBody","Table","TableRow","TableContainer","Zoom","Skeleton","useMediaQuery","BondLogo","getLusdData","useWeb3Context","trim","ExternalStakePool","dispatch","provider","hasCachedProvider","address","connected","connect","chainID","walletChecked","setWalletChecked","isSmallScreen","isMobileScreen","isLusdLoading","state","lusdData","loading","ohmLusdReserveBalance","account","bonds","ohm_lusd_lp","balance","loadLusdData","networkID","then","bondIconSvg","GuruLusdImg","isLP","apy","Intl","NumberFormat","style","currency","maximumFractionDigits","minimumFractionDigits","format","tvl","ArrowUp"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport {\n  Box,\n  Paper,\n  Typography,\n  Button,\n  SvgIcon,\n  TableHead,\n  TableCell,\n  TableBody,\n  Table,\n  TableRow,\n  TableContainer,\n  Zoom,\n} from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\n\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport BondLogo from \"../../components/BondLogo\";\nimport { ReactComponent as GuruLusdImg } from \"src/assets/tokens/OX-LUSD.svg\";\nimport { ReactComponent as ArrowUp } from \"../../assets/icons/arrow-up.svg\";\nimport { getLusdData } from \"../../slices/LusdSlice\";\nimport { useWeb3Context } from \"src/hooks/web3Context\";\nimport { trim } from \"../../helpers\";\n\nexport default function ExternalStakePool() {\n  const dispatch = useDispatch();\n  const { provider, hasCachedProvider, address, connected, connect, chainID } = useWeb3Context();\n  const [walletChecked, setWalletChecked] = useState(false);\n  const isSmallScreen = useMediaQuery(\"(max-width: 705px)\");\n  const isMobileScreen = useMediaQuery(\"(max-width: 513px)\");\n\n  const isLusdLoading = useSelector(state => state.lusdData.loading);\n  const lusdData = useSelector(state => {\n    return state.lusdData;\n  });\n\n  const ohmLusdReserveBalance = useSelector(state => {\n    return state.account && state.account.bonds?.ohm_lusd_lp?.balance;\n  });\n\n  const loadLusdData = async () => {\n    await dispatch(getLusdData({ address: address, provider: provider, networkID: chainID }));\n  };\n\n  useEffect(() => {\n    if (hasCachedProvider()) {\n      // then user DOES have a wallet\n      connect().then(() => {\n        setWalletChecked(true);\n      });\n    } else {\n      // then user DOES NOT have a wallet\n      setWalletChecked(true);\n    }\n  }, []);\n\n  // this useEffect fires on state change from above. It will ALWAYS fire AFTER\n  useEffect(() => {\n    // don't load ANY details until wallet is Checked\n    if (walletChecked) {\n      loadLusdData();\n    }\n  }, [walletChecked]);\n\n  return (\n    <Zoom in={true}>\n      <Paper className={`ohm-card secondary ${isSmallScreen && \"mobile\"}`}>\n        <div className=\"card-header\">\n          <Typography variant=\"h5\">Farm Pool</Typography>\n        </div>\n        <div className=\"card-content\">\n          {!isSmallScreen ? (\n            <TableContainer className=\"stake-table\">\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Asset</TableCell>\n                    <TableCell align=\"left\">APY</TableCell>\n                    <TableCell align=\"left\">TVD</TableCell>\n                    <TableCell align=\"left\">Balance</TableCell>\n                    <TableCell></TableCell>\n                  </TableRow>\n                </TableHead>\n\n                <TableBody>\n                  <TableRow>\n                    <TableCell>\n                      <Box className=\"ohm-pairs\">\n                        <BondLogo bond={{ bondIconSvg: GuruLusdImg, isLP: true }}></BondLogo>\n                        <Typography>OHM-LUSD</Typography>\n                      </Box>\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      {isLusdLoading ? (\n                        <Skeleton width=\"80px\" />\n                      ) : lusdData.apy === 0 ? (\n                        \"Coming Soon\"\n                      ) : (\n                        trim(lusdData.apy, 1) + \"%\"\n                      )}\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      {isLusdLoading ? (\n                        <Skeleton width=\"80px\" />\n                      ) : (\n                        new Intl.NumberFormat(\"en-US\", {\n                          style: \"currency\",\n                          currency: \"USD\",\n                          maximumFractionDigits: 0,\n                          minimumFractionDigits: 0,\n                        }).format(lusdData.tvl)\n                      )}\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      {isLusdLoading ? <Skeleton width=\"80px\" /> : (trim(ohmLusdReserveBalance, 2) || 0) + \" SLP\"}\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      <Button\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        href=\"https://crucible.alchemist.wtf/reward-programs\"\n                        target=\"_blank\"\n                        className=\"stake-lp-button\"\n                      >\n                        <Typography variant=\"body1\">Stake in Crucible</Typography>\n                        <SvgIcon component={ArrowUp} color=\"primary\" />\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </TableContainer>\n          ) : (\n            <div className=\"stake-pool\">\n              <div className={`pool-card-top-row ${isMobileScreen && \"small\"}`}>\n                <Box className=\"ohm-pairs\">\n                  <BondLogo bond={{ bondIconSvg: GuruLusdImg, isLP: true }}></BondLogo>\n                  <Typography gutterBottom={false}>OX-LUSD</Typography>\n                </Box>\n              </div>\n              <div className=\"pool-data\">\n                <div className=\"data-row\">\n                  <Typography>APY</Typography>\n                  <Typography>\n                    {isLusdLoading ? (\n                      <Skeleton width=\"80px\" />\n                    ) : lusdData.apy === 0 ? (\n                      \"Coming Soon\"\n                    ) : (\n                      trim(lusdData.apy, 1) + \"%\"\n                    )}\n                  </Typography>\n                </div>\n                <div className=\"data-row\">\n                  <Typography>TVD</Typography>\n                  <Typography>\n                    {isLusdLoading ? (\n                      <Skeleton width=\"80px\" />\n                    ) : (\n                      new Intl.NumberFormat(\"en-US\", {\n                        style: \"currency\",\n                        currency: \"USD\",\n                        maximumFractionDigits: 0,\n                        minimumFractionDigits: 0,\n                      }).format(lusdData.tvl)\n                    )}\n                  </Typography>\n                </div>\n                <div className=\"data-row\">\n                  <Typography>Balance</Typography>\n                  <Typography>\n                    {isLusdLoading ? <Skeleton width=\"80px\" /> : (trim(lusdData.balance, 2) || 0) + \"LP\"}\n                  </Typography>\n                </div>\n\n                <Button\n                  variant=\"outlined\"\n                  color=\"secondary\"\n                  href=\"https://crucible.alchemist.wtf/reward-programs\"\n                  target=\"_blank\"\n                  className=\"stake-lp-button\"\n                  fullWidth\n                >\n                  <Typography variant=\"body1\">Stake in Crucible</Typography>\n                  <SvgIcon component={ArrowUp} color=\"primary\" />\n                </Button>\n              </div>\n            </div>\n          )}\n        </div>\n      </Paper>\n    </Zoom>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}