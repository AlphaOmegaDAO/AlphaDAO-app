{"ast":null,"code":"var _jsxFileName = \"C:\\\\arete\\\\AlphaDAO-react\\\\src\\\\views\\\\ChooseBond\\\\ClaimRow.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { shorten, trim, prettyVestingPeriod } from \"../../helpers\";\nimport { redeemBond } from \"../../slices/BondSlice\";\nimport BondLogo from \"../../components/BondLogo\";\nimport { Box, Button, Link, Paper, Typography, TableRow, TableCell, SvgIcon, Slide } from \"@material-ui/core\";\nimport { ReactComponent as ArrowUp } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/icons/arrow-up.svg\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./choosebond.scss\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { useWeb3Context, useBonds } from \"src/hooks\";\nimport { isPendingTxn, txnButtonTextGeneralPending } from \"src/slices/PendingTxnsSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ClaimBondTableData({\n  userBond\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    address,\n    chainID,\n    provider\n  } = useWeb3Context();\n  const {\n    bonds\n  } = useBonds(chainID);\n  const bond = userBond[1];\n  const bondName = bond.bond;\n  const isAppLoading = useSelector(state => {\n    var _state$app$loading;\n\n    return (_state$app$loading = state.app.loading) !== null && _state$app$loading !== void 0 ? _state$app$loading : true;\n  });\n  const currentBlock = useSelector(state => {\n    return state.app.currentBlock;\n  });\n  const pendingTransactions = useSelector(state => {\n    return state.pendingTransactions;\n  });\n\n  const vestingPeriod = () => {\n    return prettyVestingPeriod(currentBlock, bond.bondMaturationBlock);\n  };\n\n  async function onRedeem({\n    autostake\n  }) {\n    let currentBond = bonds.find(bnd => bnd.name === bondName);\n    await dispatch(redeemBond({\n      address,\n      bond: currentBond,\n      networkID: chainID,\n      provider,\n      autostake\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(TableRow, {\n    id: `${bondName}--claim`,\n    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n      align: \"left\",\n      className: \"bond-name-cell\",\n      children: [/*#__PURE__*/_jsxDEV(BondLogo, {\n        bond: bond\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bond-name\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: bond.displayName ? trim(bond.displayName, 4) : /*#__PURE__*/_jsxDEV(Skeleton, {\n            width: 100\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 61\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      align: \"center\",\n      children: bond.pendingPayout ? trim(bond.pendingPayout, 4) : /*#__PURE__*/_jsxDEV(Skeleton, {\n        width: 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 61\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      align: \"center\",\n      children: bond.interestDue ? trim(bond.interestDue, 4) : /*#__PURE__*/_jsxDEV(Skeleton, {\n        width: 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 81\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      align: \"right\",\n      style: {\n        whiteSpace: \"nowrap\"\n      },\n      children: isAppLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }, this) : vestingPeriod()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      align: \"right\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        disabled: isPendingTxn(pendingTransactions, \"redeem_bond_\" + bondName),\n        onClick: () => onRedeem({\n          autostake: false\n        }),\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: txnButtonTextGeneralPending(pendingTransactions, \"redeem_bond_\" + bondName, \"Claim\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClaimBondTableData, \"+misVCyG76jbUS2e8cq58aHOnLg=\", false, function () {\n  return [useDispatch, useWeb3Context, useBonds, useSelector, useSelector, useSelector];\n});\n\n_c = ClaimBondTableData;\nexport function ClaimBondCardData({\n  userBond\n}) {\n  _s2();\n\n  const dispatch = useDispatch();\n  const {\n    address,\n    chainID,\n    provider\n  } = useWeb3Context();\n  const {\n    bonds\n  } = useBonds(chainID);\n  const bond = userBond[1];\n  const bondName = bond.bond;\n  const currentBlock = useSelector(state => {\n    return state.app.currentBlock;\n  });\n  const pendingTransactions = useSelector(state => {\n    return state.pendingTransactions;\n  });\n\n  const vestingPeriod = () => {\n    return prettyVestingPeriod(currentBlock, bond.bondMaturationBlock);\n  };\n\n  async function onRedeem({\n    autostake\n  }) {\n    let currentBond = bonds.find(bnd => bnd.name === bondName);\n    await dispatch(redeemBond({\n      address,\n      bond: currentBond,\n      networkID: chainID,\n      provider,\n      autostake\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    id: `${bondName}--claim`,\n    className: \"claim-bond-data-card bond-data-card\",\n    style: {\n      marginBottom: \"30px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: \"bond-pair\",\n      children: [/*#__PURE__*/_jsxDEV(BondLogo, {\n        bond: bond\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"bond-name\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: bond.displayName ? trim(bond.displayName, 4) : /*#__PURE__*/_jsxDEV(Skeleton, {\n            width: 100\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 71\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-row\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Claimable\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: bond.pendingPayout ? trim(bond.pendingPayout, 4) : /*#__PURE__*/_jsxDEV(Skeleton, {\n          width: 100\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 73\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-row\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Pending\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: bond.interestDue ? trim(bond.interestDue, 4) : /*#__PURE__*/_jsxDEV(Skeleton, {\n          width: 100\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 69\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-row\",\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Fully Vested\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: vestingPeriod()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"space-around\",\n      alignItems: \"center\",\n      className: \"claim-bond-card-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        disabled: isPendingTxn(pendingTransactions, \"redeem_bond_\" + bondName),\n        onClick: () => onRedeem({\n          autostake: false\n        }),\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: txnButtonTextGeneralPending(pendingTransactions, \"redeem_bond_\" + bondName, \"Claim\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        onClick: () => onRedeem({\n          autostake: true\n        }),\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: txnButtonTextGeneralPending(pendingTransactions, \"redeem_bond_\" + bondName + \"_autostake\", \"Claim and Stake\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(ClaimBondCardData, \"uMsuPh8E/mMV2LQmLfcbEvYWep0=\", false, function () {\n  return [useDispatch, useWeb3Context, useBonds, useSelector, useSelector];\n});\n\n_c2 = ClaimBondCardData;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ClaimBondTableData\");\n$RefreshReg$(_c2, \"ClaimBondCardData\");","map":{"version":3,"sources":["C:/arete/AlphaDAO-react/src/views/ChooseBond/ClaimRow.jsx"],"names":["useEffect","useSelector","useDispatch","shorten","trim","prettyVestingPeriod","redeemBond","BondLogo","Box","Button","Link","Paper","Typography","TableRow","TableCell","SvgIcon","Slide","NavLink","Skeleton","useWeb3Context","useBonds","isPendingTxn","txnButtonTextGeneralPending","ClaimBondTableData","userBond","dispatch","address","chainID","provider","bonds","bond","bondName","isAppLoading","state","app","loading","currentBlock","pendingTransactions","vestingPeriod","bondMaturationBlock","onRedeem","autostake","currentBond","find","bnd","name","networkID","displayName","pendingPayout","interestDue","whiteSpace","ClaimBondCardData","marginBottom"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { shorten, trim, prettyVestingPeriod } from \"../../helpers\";\nimport { redeemBond } from \"../../slices/BondSlice\";\nimport BondLogo from \"../../components/BondLogo\";\nimport { Box, Button, Link, Paper, Typography, TableRow, TableCell, SvgIcon, Slide } from \"@material-ui/core\";\nimport { ReactComponent as ArrowUp } from \"../../assets/icons/arrow-up.svg\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./choosebond.scss\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { useWeb3Context, useBonds } from \"src/hooks\";\nimport { isPendingTxn, txnButtonTextGeneralPending } from \"src/slices/PendingTxnsSlice\";\n\nexport function ClaimBondTableData({ userBond }) {\n  const dispatch = useDispatch();\n  const { address, chainID, provider } = useWeb3Context();\n  const { bonds } = useBonds(chainID);\n\n  const bond = userBond[1];\n  const bondName = bond.bond;\n\n  const isAppLoading = useSelector(state => state.app.loading ?? true);\n\n  const currentBlock = useSelector(state => {\n    return state.app.currentBlock;\n  });\n\n  const pendingTransactions = useSelector(state => {\n    return state.pendingTransactions;\n  });\n\n  const vestingPeriod = () => {\n    return prettyVestingPeriod(currentBlock, bond.bondMaturationBlock);\n  };\n\n  async function onRedeem({ autostake }) {\n    let currentBond = bonds.find(bnd => bnd.name === bondName);\n    await dispatch(redeemBond({ address, bond: currentBond, networkID: chainID, provider, autostake }));\n  }\n\n  return (\n    <TableRow id={`${bondName}--claim`}>\n      <TableCell align=\"left\" className=\"bond-name-cell\">\n        <BondLogo bond={bond} />\n        <div className=\"bond-name\">\n          <Typography variant=\"body1\">\n            {bond.displayName ? trim(bond.displayName, 4) : <Skeleton width={100} />}\n          </Typography>\n        </div>\n      </TableCell>\n      <TableCell align=\"center\">\n        {bond.pendingPayout ? trim(bond.pendingPayout, 4) : <Skeleton width={100} />}\n      </TableCell>\n      <TableCell align=\"center\">{bond.interestDue ? trim(bond.interestDue, 4) : <Skeleton width={100} />}</TableCell>\n      <TableCell align=\"right\" style={{ whiteSpace: \"nowrap\" }}>\n        {isAppLoading ? <Skeleton /> : vestingPeriod()}\n      </TableCell>\n      <TableCell align=\"right\">\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          disabled={isPendingTxn(pendingTransactions, \"redeem_bond_\" + bondName)}\n          onClick={() => onRedeem({ autostake: false })}\n        >\n          <Typography variant=\"h6\">\n            {txnButtonTextGeneralPending(pendingTransactions, \"redeem_bond_\" + bondName, \"Claim\")}\n          </Typography>\n        </Button>\n      </TableCell>\n    </TableRow>\n  );\n}\n\nexport function ClaimBondCardData({ userBond }) {\n  const dispatch = useDispatch();\n  const { address, chainID, provider } = useWeb3Context();\n  const { bonds } = useBonds(chainID);\n\n  const bond = userBond[1];\n  const bondName = bond.bond;\n\n  const currentBlock = useSelector(state => {\n    return state.app.currentBlock;\n  });\n\n  const pendingTransactions = useSelector(state => {\n    return state.pendingTransactions;\n  });\n\n  const vestingPeriod = () => {\n    return prettyVestingPeriod(currentBlock, bond.bondMaturationBlock);\n  };\n\n  async function onRedeem({ autostake }) {\n    let currentBond = bonds.find(bnd => bnd.name === bondName);\n    await dispatch(redeemBond({ address, bond: currentBond, networkID: chainID, provider, autostake }));\n  }\n\n  return (\n    <Box id={`${bondName}--claim`} className=\"claim-bond-data-card bond-data-card\" style={{ marginBottom: \"30px\" }}>\n      <Box className=\"bond-pair\">\n        <BondLogo bond={bond} />\n        <Box className=\"bond-name\">\n          <Typography>{bond.displayName ? trim(bond.displayName, 4) : <Skeleton width={100} />}</Typography>\n        </Box>\n      </Box>\n\n      <div className=\"data-row\">\n        <Typography>Claimable</Typography>\n        <Typography>{bond.pendingPayout ? trim(bond.pendingPayout, 4) : <Skeleton width={100} />}</Typography>\n      </div>\n\n      <div className=\"data-row\">\n        <Typography>Pending</Typography>\n        <Typography>{bond.interestDue ? trim(bond.interestDue, 4) : <Skeleton width={100} />}</Typography>\n      </div>\n\n      <div className=\"data-row\" style={{ marginBottom: \"20px\" }}>\n        <Typography>Fully Vested</Typography>\n        <Typography>{vestingPeriod()}</Typography>\n      </div>\n      <Box display=\"flex\" justifyContent=\"space-around\" alignItems=\"center\" className=\"claim-bond-card-buttons\">\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          disabled={isPendingTxn(pendingTransactions, \"redeem_bond_\" + bondName)}\n          onClick={() => onRedeem({ autostake: false })}\n        >\n          <Typography variant=\"h5\">\n            {txnButtonTextGeneralPending(pendingTransactions, \"redeem_bond_\" + bondName, \"Claim\")}\n          </Typography>\n        </Button>\n        <Button variant=\"outlined\" color=\"primary\" onClick={() => onRedeem({ autostake: true })}>\n          <Typography variant=\"h5\">\n            {txnButtonTextGeneralPending(\n              pendingTransactions,\n              \"redeem_bond_\" + bondName + \"_autostake\",\n              \"Claim and Stake\",\n            )}\n          </Typography>\n        </Button>\n      </Box>\n    </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}