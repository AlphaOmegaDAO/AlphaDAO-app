{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\n\nconst useTheme = () => {\n  _s();\n\n  const [theme, setTheme] = useState(\"dark\");\n  const [mounted, setMounted] = useState(false);\n\n  const setMode = mode => {\n    window.localStorage.setItem(\"theme\", mode);\n    setTheme(mode);\n  };\n\n  const toggleTheme = e => {\n    if (e.metaKey) {\n      setMode(\"girth\");\n    } else {\n      if (theme === \"light\") {\n        setMode(\"dark\");\n      } else {\n        setMode(\"light\");\n      }\n    }\n  };\n\n  useEffect(() => {\n    const localTheme = window.localStorage.getItem(\"theme\"); // window.matchMedia && window.matchMedia(\"(prefers-color-scheme: dark)\").matches && !localTheme\n    //   ? setMode(\"dark\")\n    //   : localTheme\n    //   ? setTheme(localTheme)\n    //   : setMode(\"light\");\n\n    setMode(\"dark\");\n    setMounted(true);\n  }, []);\n  return [theme, toggleTheme, mounted];\n};\n\n_s(useTheme, \"PMXYpdFteak97Vtku2TV0tPQEaI=\");\n\nexport default useTheme;","map":{"version":3,"sources":["C:/arete/AlphaDAO-react/src/hooks/useTheme.ts"],"names":["useEffect","useState","useTheme","theme","setTheme","mounted","setMounted","setMode","mode","window","localStorage","setItem","toggleTheme","e","metaKey","localTheme","getItem"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAG,MAAqD;AAAA;;AACpE,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,MAAD,CAAlC;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMM,OAAO,GAAIC,IAAD,IAAkB;AAChCC,IAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,EAAqCH,IAArC;AACAJ,IAAAA,QAAQ,CAACI,IAAD,CAAR;AACD,GAHD;;AAKA,QAAMI,WAAW,GAAIC,CAAD,IAAsB;AACxC,QAAIA,CAAC,CAACC,OAAN,EAAe;AACbP,MAAAA,OAAO,CAAC,OAAD,CAAP;AACD,KAFD,MAEO;AACL,UAAIJ,KAAK,KAAK,OAAd,EAAuB;AACrBI,QAAAA,OAAO,CAAC,MAAD,CAAP;AACD,OAFD,MAEO;AACLA,QAAAA,OAAO,CAAC,OAAD,CAAP;AACD;AACF;AACF,GAVD;;AAYAP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,UAAU,GAAGN,MAAM,CAACC,YAAP,CAAoBM,OAApB,CAA4B,OAA5B,CAAnB,CADc,CAEd;AACA;AACA;AACA;AACA;;AACAT,IAAAA,OAAO,CAAC,MAAD,CAAP;AACAD,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GATQ,EASN,EATM,CAAT;AAWA,SAAO,CAACH,KAAD,EAAQS,WAAR,EAAqBP,OAArB,CAAP;AACD,CAjCD;;GAAMH,Q;;AAmCN,eAAeA,QAAf","sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst useTheme = (): [string, (e: KeyboardEvent) => void, boolean] => {\n  const [theme, setTheme] = useState(\"dark\");\n  const [mounted, setMounted] = useState(false);\n\n  const setMode = (mode: string) => {\n    window.localStorage.setItem(\"theme\", mode);\n    setTheme(mode);\n  };\n\n  const toggleTheme = (e: KeyboardEvent) => {\n    if (e.metaKey) {\n      setMode(\"girth\");\n    } else {\n      if (theme === \"light\") {\n        setMode(\"dark\");\n      } else {\n        setMode(\"light\");\n      }\n    }\n  };\n\n  useEffect(() => {\n    const localTheme = window.localStorage.getItem(\"theme\");\n    // window.matchMedia && window.matchMedia(\"(prefers-color-scheme: dark)\").matches && !localTheme\n    //   ? setMode(\"dark\")\n    //   : localTheme\n    //   ? setTheme(localTheme)\n    //   : setMode(\"light\");\n    setMode(\"dark\");\n    setMounted(true);\n  }, []);\n\n  return [theme, toggleTheme, mounted];\n};\n\nexport default useTheme;\n"]},"metadata":{},"sourceType":"module"}