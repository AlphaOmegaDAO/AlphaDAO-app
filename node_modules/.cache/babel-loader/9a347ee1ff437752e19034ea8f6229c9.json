{"ast":null,"code":"var _jsxFileName = \"C:\\\\arete\\\\AlphaDAO-react\\\\src\\\\views\\\\Bond\\\\BondPurchase.jsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Box, Button, FormControl, InputAdornment, InputLabel, OutlinedInput, Slide, Typography } from \"@material-ui/core\";\nimport { prettifySeconds, secondsUntilBlock, shorten, trim } from \"../../helpers\";\nimport { bondAsset, calcBondDetails, changeApproval } from \"../../slices/BondSlice\";\nimport { useWeb3Context } from \"src/hooks/web3Context\";\nimport { isPendingTxn, txnButtonText } from \"src/slices/PendingTxnsSlice\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport useDebounce from \"../../hooks/Debounce\";\nimport { error } from \"../../slices/MessagesSlice\";\nimport { DisplayBondDiscount } from \"./Bond\";\nimport ConnectButton from \"../../components/ConnectButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction BondPurchase({\n  bond,\n  slippage,\n  recipientAddress\n}) {\n  _s();\n\n  const SECONDS_TO_REFRESH = 60;\n  const dispatch = useDispatch();\n  const {\n    provider,\n    address,\n    chainID\n  } = useWeb3Context();\n  const [quantity, setQuantity] = useState(\"\");\n  const [secondsToRefresh, setSecondsToRefresh] = useState(SECONDS_TO_REFRESH);\n  const currentBlock = useSelector(state => {\n    return state.app.currentBlock;\n  });\n  const isBondLoading = useSelector(state => {\n    var _state$bonding$loadin;\n\n    return (_state$bonding$loadin = state.bonding.loading) !== null && _state$bonding$loadin !== void 0 ? _state$bonding$loadin : true;\n  });\n  const pendingTransactions = useSelector(state => {\n    return state.pendingTransactions;\n  });\n\n  const vestingPeriod = () => {\n    const vestingBlock = parseInt(currentBlock) + parseInt(bond.vestingTerm);\n    const seconds = secondsUntilBlock(currentBlock, vestingBlock);\n    return prettifySeconds(seconds, \"day\");\n  };\n\n  async function onBond() {\n    if (quantity === \"\") {\n      dispatch(error(\"Please enter a value!\"));\n    } else if (isNaN(quantity)) {\n      dispatch(error(\"Please enter a valid value!\"));\n    } else if (bond.interestDue > 0 || bond.pendingPayout > 0) {\n      const shouldProceed = window.confirm(\"You have an existing bond. Bonding will reset your vesting period and forfeit rewards. We recommend claiming rewards first or using a fresh wallet. Do you still want to proceed?\");\n\n      if (shouldProceed) {\n        await dispatch(bondAsset({\n          value: quantity,\n          slippage,\n          bond,\n          networkID: chainID,\n          provider,\n          address: recipientAddress || address\n        }));\n      }\n    } else {\n      await dispatch(bondAsset({\n        value: quantity,\n        slippage,\n        bond,\n        networkID: chainID,\n        provider,\n        address: recipientAddress || address\n      }));\n      clearInput();\n    }\n  }\n\n  const clearInput = () => {\n    setQuantity(0);\n  };\n\n  const hasAllowance = useCallback(() => {\n    return bond.allowance > 0;\n  }, [bond.allowance]);\n\n  const setMax = () => {\n    let maxQ;\n\n    if (bond.maxBondPrice * bond.bondPrice < Number(bond.balance)) {\n      // there is precision loss here on Number(bond.balance)\n      maxQ = bond.maxBondPrice * bond.bondPrice.toString();\n    } else {\n      maxQ = bond.balance;\n    }\n\n    setQuantity(maxQ);\n  };\n\n  const bondDetailsDebounce = useDebounce(quantity, 1000);\n  useEffect(() => {\n    dispatch(calcBondDetails({\n      bond,\n      value: quantity,\n      provider,\n      networkID: chainID\n    }));\n  }, [bondDetailsDebounce]);\n  useEffect(() => {\n    let interval = null;\n\n    if (secondsToRefresh > 0) {\n      interval = setInterval(() => {\n        setSecondsToRefresh(secondsToRefresh => secondsToRefresh - 1);\n      }, 1000);\n    } else {\n      clearInterval(interval);\n      dispatch(calcBondDetails({\n        bond,\n        value: quantity,\n        provider,\n        networkID: chainID\n      }));\n      setSecondsToRefresh(SECONDS_TO_REFRESH);\n    }\n\n    return () => clearInterval(interval);\n  }, [secondsToRefresh, quantity]);\n\n  const onSeekApproval = async () => {\n    dispatch(changeApproval({\n      address,\n      bond,\n      provider,\n      networkID: chainID\n    }));\n  };\n\n  const displayUnits = bond.displayUnits;\n  const isAllowanceDataLoading = bond.allowance == null;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: \"wallet-menu\",\n      display: \"flex\",\n      justifyContent: \"space-around\",\n      flexWrap: \"wrap\",\n      children: !address ? /*#__PURE__*/_jsxDEV(ConnectButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [isAllowanceDataLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n          width: \"200px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [!hasAllowance() ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"help-text\",\n            children: /*#__PURE__*/_jsxDEV(\"em\", {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                align: \"left\",\n                color: \"textSecondary\",\n                children: [\"First time bonding \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: bond.displayName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 44\n                }, this), \"? \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 71\n                }, this), \" Please approve Alpha to use your\", \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: bond.displayName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 25\n                }, this), \" for bonding.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(FormControl, {\n            className: \"ohm-input\",\n            variant: \"outlined\",\n            color: \"primary\",\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"outlined-adornment-amount\",\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n              id: \"outlined-adornment-amount\",\n              type: \"number\",\n              value: quantity,\n              onChange: e => setQuantity(e.target.value) // startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n              ,\n              labelWidth: 55,\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"text\",\n                  onClick: setMax,\n                  children: \"Max\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 19\n          }, this), !bond.isAvailable[chainID] ? /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            id: \"bond-btn\",\n            className: \"transaction-button\",\n            disabled: true,\n            children: \"Sold Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 19\n          }, this) : hasAllowance() ? /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            id: \"bond-btn\",\n            className: \"transaction-button\",\n            disabled: isPendingTxn(pendingTransactions, \"bond_\" + bond.name),\n            onClick: onBond,\n            children: txnButtonText(pendingTransactions, \"bond_\" + bond.name, \"Bond\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            id: \"bond-approve-btn\",\n            className: \"transaction-button\",\n            disabled: isPendingTxn(pendingTransactions, \"approve_\" + bond.name),\n            onClick: onSeekApproval,\n            children: txnButtonText(pendingTransactions, \"approve_\" + bond.name, \"Approve\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true), \" \"]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Slide, {\n      direction: \"left\",\n      in: true,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      timeout: 533,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        className: \"bond-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-row\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Your Balance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: isBondLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n              width: \"100px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [trim(bond.balance, 4), \" \", displayUnits]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `data-row`,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: \"You Will Get\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            id: \"bond-value-id\",\n            className: \"price-data\",\n            children: isBondLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n              width: \"100px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 32\n            }, this) : `${trim(bond.bondQuote, 4) || \"0\"} OX`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `data-row`,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Max You Can Buy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            id: \"bond-value-id\",\n            className: \"price-data\",\n            children: isBondLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n              width: \"100px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 32\n            }, this) : `${trim(bond.maxBondPrice, 4) || \"0\"} OX`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-row\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: \"ROI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: isBondLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n              width: \"100px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 32\n            }, this) : /*#__PURE__*/_jsxDEV(DisplayBondDiscount, {\n              bond: bond\n            }, bond.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 61\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-row\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Debt Ratio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: isBondLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n              width: \"100px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 32\n            }, this) : `${trim(bond.debtRatio / 10000000, 2)}%`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-row\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Vesting Term\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: isBondLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n              width: \"100px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 42\n            }, this) : vestingPeriod()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), recipientAddress !== address && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-row\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Recipient\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: isBondLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n              width: \"100px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 44\n            }, this) : shorten(recipientAddress)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BondPurchase, \"Cy5+IoICk+2yxrMzuQzFcTUgi8w=\", false, function () {\n  return [useDispatch, useWeb3Context, useSelector, useSelector, useSelector, useDebounce];\n});\n\n_c = BondPurchase;\nexport default BondPurchase;\n\nvar _c;\n\n$RefreshReg$(_c, \"BondPurchase\");","map":{"version":3,"sources":["C:/arete/AlphaDAO-react/src/views/Bond/BondPurchase.jsx"],"names":["useCallback","useEffect","useState","useDispatch","useSelector","Box","Button","FormControl","InputAdornment","InputLabel","OutlinedInput","Slide","Typography","prettifySeconds","secondsUntilBlock","shorten","trim","bondAsset","calcBondDetails","changeApproval","useWeb3Context","isPendingTxn","txnButtonText","Skeleton","useDebounce","error","DisplayBondDiscount","ConnectButton","BondPurchase","bond","slippage","recipientAddress","SECONDS_TO_REFRESH","dispatch","provider","address","chainID","quantity","setQuantity","secondsToRefresh","setSecondsToRefresh","currentBlock","state","app","isBondLoading","bonding","loading","pendingTransactions","vestingPeriod","vestingBlock","parseInt","vestingTerm","seconds","onBond","isNaN","interestDue","pendingPayout","shouldProceed","window","confirm","value","networkID","clearInput","hasAllowance","allowance","setMax","maxQ","maxBondPrice","bondPrice","Number","balance","toString","bondDetailsDebounce","interval","setInterval","clearInterval","onSeekApproval","displayUnits","isAllowanceDataLoading","displayName","e","target","isAvailable","name","timeout","bondQuote","debtRatio"],"mappings":"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","sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Box,\n  Button,\n  FormControl,\n  InputAdornment,\n  InputLabel,\n  OutlinedInput,\n  Slide,\n  Typography,\n} from \"@material-ui/core\";\nimport { prettifySeconds, secondsUntilBlock, shorten, trim } from \"../../helpers\";\nimport { bondAsset, calcBondDetails, changeApproval } from \"../../slices/BondSlice\";\nimport { useWeb3Context } from \"src/hooks/web3Context\";\nimport { isPendingTxn, txnButtonText } from \"src/slices/PendingTxnsSlice\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport useDebounce from \"../../hooks/Debounce\";\nimport { error } from \"../../slices/MessagesSlice\";\nimport { DisplayBondDiscount } from \"./Bond\";\nimport ConnectButton from \"../../components/ConnectButton\";\n\nfunction BondPurchase({ bond, slippage, recipientAddress }) {\n  const SECONDS_TO_REFRESH = 60;\n  const dispatch = useDispatch();\n  const { provider, address, chainID } = useWeb3Context();\n\n  const [quantity, setQuantity] = useState(\"\");\n  const [secondsToRefresh, setSecondsToRefresh] = useState(SECONDS_TO_REFRESH);\n\n  const currentBlock = useSelector(state => {\n    return state.app.currentBlock;\n  });\n\n  const isBondLoading = useSelector(state => state.bonding.loading ?? true);\n\n  const pendingTransactions = useSelector(state => {\n    return state.pendingTransactions;\n  });\n\n  const vestingPeriod = () => {\n    const vestingBlock = parseInt(currentBlock) + parseInt(bond.vestingTerm);\n    const seconds = secondsUntilBlock(currentBlock, vestingBlock);\n    return prettifySeconds(seconds, \"day\");\n  };\n\n  async function onBond() {\n    if (quantity === \"\") {\n      dispatch(error(\"Please enter a value!\"));\n    } else if (isNaN(quantity)) {\n      dispatch(error(\"Please enter a valid value!\"));\n    } else if (bond.interestDue > 0 || bond.pendingPayout > 0) {\n      const shouldProceed = window.confirm(\n        \"You have an existing bond. Bonding will reset your vesting period and forfeit rewards. We recommend claiming rewards first or using a fresh wallet. Do you still want to proceed?\",\n      );\n      if (shouldProceed) {\n        await dispatch(\n          bondAsset({\n            value: quantity,\n            slippage,\n            bond,\n            networkID: chainID,\n            provider,\n            address: recipientAddress || address,\n          }),\n        );\n      }\n    } else {\n      await dispatch(\n        bondAsset({\n          value: quantity,\n          slippage,\n          bond,\n          networkID: chainID,\n          provider,\n          address: recipientAddress || address,\n        }),\n      );\n      clearInput();\n    }\n  }\n\n  const clearInput = () => {\n    setQuantity(0);\n  };\n\n  const hasAllowance = useCallback(() => {\n    return bond.allowance > 0;\n  }, [bond.allowance]);\n\n  const setMax = () => {\n    let maxQ;\n    if (bond.maxBondPrice * bond.bondPrice < Number(bond.balance)) {\n      // there is precision loss here on Number(bond.balance)\n      maxQ = bond.maxBondPrice * bond.bondPrice.toString();\n    } else {\n      maxQ = bond.balance;\n    }\n    setQuantity(maxQ);\n  };\n\n  const bondDetailsDebounce = useDebounce(quantity, 1000);\n\n  useEffect(() => {\n    dispatch(calcBondDetails({ bond, value: quantity, provider, networkID: chainID }));\n  }, [bondDetailsDebounce]);\n\n  useEffect(() => {\n    let interval = null;\n    if (secondsToRefresh > 0) {\n      interval = setInterval(() => {\n        setSecondsToRefresh(secondsToRefresh => secondsToRefresh - 1);\n      }, 1000);\n    } else {\n      clearInterval(interval);\n      dispatch(calcBondDetails({ bond, value: quantity, provider, networkID: chainID }));\n      setSecondsToRefresh(SECONDS_TO_REFRESH);\n    }\n    return () => clearInterval(interval);\n  }, [secondsToRefresh, quantity]);\n\n  const onSeekApproval = async () => {\n    dispatch(changeApproval({ address, bond, provider, networkID: chainID }));\n  };\n\n  const displayUnits = bond.displayUnits;\n\n  const isAllowanceDataLoading = bond.allowance == null;\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\">\n      <Box className=\"wallet-menu\" display=\"flex\" justifyContent=\"space-around\" flexWrap=\"wrap\">\n        {!address ? (\n          <ConnectButton />\n        ) : (\n          <>\n            {isAllowanceDataLoading ? (\n              <Skeleton width=\"200px\" />\n            ) : (\n              <>\n                {!hasAllowance() ? (\n                  <div className=\"help-text\">\n                    <em>\n                      <Typography variant=\"body1\" align=\"left\" color=\"textSecondary\">\n                        First time bonding <b>{bond.displayName}</b>? <br /> Please approve Alpha to use your{\" \"}\n                        <b>{bond.displayName}</b> for bonding.\n                      </Typography>\n                    </em>\n                  </div>\n                ) : (\n                  <FormControl className=\"ohm-input\" variant=\"outlined\" color=\"primary\" fullWidth>\n                    <InputLabel htmlFor=\"outlined-adornment-amount\">Amount</InputLabel>\n                    <OutlinedInput\n                      id=\"outlined-adornment-amount\"\n                      type=\"number\"\n                      value={quantity}\n                      onChange={e => setQuantity(e.target.value)}\n                      // startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                      labelWidth={55}\n                      endAdornment={\n                        <InputAdornment position=\"end\">\n                          <Button variant=\"text\" onClick={setMax}>\n                            Max\n                          </Button>\n                        </InputAdornment>\n                      }\n                    />\n                  </FormControl>\n                )}\n\n                {!bond.isAvailable[chainID] ? (\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    id=\"bond-btn\"\n                    className=\"transaction-button\"\n                    disabled={true}\n                  >\n                    Sold Out\n                  </Button>\n                ) : hasAllowance() ? (\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    id=\"bond-btn\"\n                    className=\"transaction-button\"\n                    disabled={isPendingTxn(pendingTransactions, \"bond_\" + bond.name)}\n                    onClick={onBond}\n                  >\n                    {txnButtonText(pendingTransactions, \"bond_\" + bond.name, \"Bond\")}\n                  </Button>\n                ) : (\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    id=\"bond-approve-btn\"\n                    className=\"transaction-button\"\n                    disabled={isPendingTxn(pendingTransactions, \"approve_\" + bond.name)}\n                    onClick={onSeekApproval}\n                  >\n                    {txnButtonText(pendingTransactions, \"approve_\" + bond.name, \"Approve\")}\n                  </Button>\n                )}\n              </>\n            )}{\" \"}\n          </>\n        )}\n      </Box>\n\n      <Slide direction=\"left\" in={true} mountOnEnter unmountOnExit {...{ timeout: 533 }}>\n        <Box className=\"bond-data\">\n          <div className=\"data-row\">\n            <Typography>Your Balance</Typography>\n            <Typography>\n              {isBondLoading ? (\n                <Skeleton width=\"100px\" />\n              ) : (\n                <>\n                  {trim(bond.balance, 4)} {displayUnits}\n                </>\n              )}\n            </Typography>\n          </div>\n\n          <div className={`data-row`}>\n            <Typography>You Will Get</Typography>\n            <Typography id=\"bond-value-id\" className=\"price-data\">\n              {isBondLoading ? <Skeleton width=\"100px\" /> : `${trim(bond.bondQuote, 4) || \"0\"} OX`}\n            </Typography>\n          </div>\n\n          <div className={`data-row`}>\n            <Typography>Max You Can Buy</Typography>\n            <Typography id=\"bond-value-id\" className=\"price-data\">\n              {isBondLoading ? <Skeleton width=\"100px\" /> : `${trim(bond.maxBondPrice, 4) || \"0\"} OX`}\n            </Typography>\n          </div>\n\n          <div className=\"data-row\">\n            <Typography>ROI</Typography>\n            <Typography>\n              {isBondLoading ? <Skeleton width=\"100px\" /> : <DisplayBondDiscount key={bond.name} bond={bond} />}\n            </Typography>\n          </div>\n\n          <div className=\"data-row\">\n            <Typography>Debt Ratio</Typography>\n            <Typography>\n              {isBondLoading ? <Skeleton width=\"100px\" /> : `${trim(bond.debtRatio / 10000000, 2)}%`}\n            </Typography>\n          </div>\n\n          <div className=\"data-row\">\n            <Typography>Vesting Term</Typography>\n            <Typography>{isBondLoading ? <Skeleton width=\"100px\" /> : vestingPeriod()}</Typography>\n          </div>\n\n          {recipientAddress !== address && (\n            <div className=\"data-row\">\n              <Typography>Recipient</Typography>\n              <Typography>{isBondLoading ? <Skeleton width=\"100px\" /> : shorten(recipientAddress)}</Typography>\n            </div>\n          )}\n        </Box>\n      </Slide>\n    </Box>\n  );\n}\n\nexport default BondPurchase;\n"]},"metadata":{},"sourceType":"module"}