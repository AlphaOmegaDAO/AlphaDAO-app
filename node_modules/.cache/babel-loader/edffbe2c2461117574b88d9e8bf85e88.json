{"ast":null,"code":"var _jsxFileName = \"C:\\\\arete\\\\AlphaDAO-react\\\\src\\\\components\\\\InfoTooltip\\\\InfoTooltipMulti.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { ReactComponent as Info } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/icons/info.svg\";\nimport { SvgIcon, Paper, Typography, Box, Popper } from \"@material-ui/core\";\nimport \"./infotooltip.scss\";\n/**\n * InfoTooltipMulti allows passing an ARRAY of message strings w each Array Element on a new line\n * @param {*} messagesArray = Array of Message Strings\n * @returns MUI Popover on document.body\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction InfoTooltipMulti({\n  messagesArray\n}) {\n  _s();\n\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleHover = event => {\n    setAnchorEl(anchorEl ? null : event.currentTarget);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? \"info-tooltip\" : undefined;\n  var messagesRender = messagesArray.map((innerArray, i) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: i > 0 ? {\n        marginTop: \"1rem\"\n      } : {},\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: innerArray\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(SvgIcon, {\n      component: Info,\n      onMouseOver: handleHover,\n      onMouseOut: handleHover,\n      style: {\n        margin: \"0 5px\",\n        fontSize: 16\n      },\n      className: \"info-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popper, {\n      id: id,\n      open: open,\n      anchorEl: anchorEl,\n      placement: \"bottom\",\n      className: \"tooltip\",\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: \"info-tooltip ohm-card\",\n        style: {\n          padding: \"1.33rem\"\n        },\n        children: messagesRender\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InfoTooltipMulti, \"+aMDa7FPcESUyQDF1vq0RSMn4/k=\");\n\n_c = InfoTooltipMulti;\nexport default InfoTooltipMulti;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoTooltipMulti\");","map":{"version":3,"sources":["C:/arete/AlphaDAO-react/src/components/InfoTooltip/InfoTooltipMulti.jsx"],"names":["useState","SvgIcon","Paper","Typography","Box","Popper","InfoTooltipMulti","messagesArray","anchorEl","setAnchorEl","handleHover","event","currentTarget","open","Boolean","id","undefined","messagesRender","map","innerArray","i","marginTop","Info","margin","fontSize","padding"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,SAASC,OAAT,EAAkBC,KAAlB,EAAyBC,UAAzB,EAAqCC,GAArC,EAA0CC,MAA1C,QAAwD,mBAAxD;AACA,OAAO,oBAAP;AAEA;AACA;AACA;AACA;AACA;;;;AACA,SAASC,gBAAT,CAA0B;AAAEC,EAAAA;AAAF,CAA1B,EAA6C;AAAA;;AAC3C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,IAAD,CAAxC;;AAEA,QAAMU,WAAW,GAAGC,KAAK,IAAI;AAC3BF,IAAAA,WAAW,CAACD,QAAQ,GAAG,IAAH,GAAUG,KAAK,CAACC,aAAzB,CAAX;AACD,GAFD;;AAIA,QAAMC,IAAI,GAAGC,OAAO,CAACN,QAAD,CAApB;AACA,QAAMO,EAAE,GAAGF,IAAI,GAAG,cAAH,GAAoBG,SAAnC;AAEA,MAAIC,cAAc,GAAGV,aAAa,CAACW,GAAd,CAAkB,CAACC,UAAD,EAAaC,CAAb,KAAmB;AACxD,wBACE;AAAa,MAAA,KAAK,EAAEA,CAAC,GAAG,CAAJ,GAAQ;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAR,GAAgC,EAApD;AAAA,6BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,OAApB;AAAA,kBAA6BF;AAA7B;AAAA;AAAA;AAAA;AAAA;AADF,OAAUC,CAAV;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GANoB,CAArB;AAQA,sBACE,QAAC,GAAD;AAAA,4BACE,QAAC,OAAD;AACE,MAAA,SAAS,EAAEE,IADb;AAEE,MAAA,WAAW,EAAEZ,WAFf;AAGE,MAAA,UAAU,EAAEA,WAHd;AAIE,MAAA,KAAK,EAAE;AAAEa,QAAAA,MAAM,EAAE,OAAV;AAAmBC,QAAAA,QAAQ,EAAE;AAA7B,OAJT;AAKE,MAAA,SAAS,EAAC;AALZ;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,MAAD;AAAQ,MAAA,EAAE,EAAET,EAAZ;AAAgB,MAAA,IAAI,EAAEF,IAAtB;AAA4B,MAAA,QAAQ,EAAEL,QAAtC;AAAgD,MAAA,SAAS,EAAC,QAA1D;AAAmE,MAAA,SAAS,EAAC,SAA7E;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,SAAS,EAAC,uBAAjB;AAAyC,QAAA,KAAK,EAAE;AAAEiB,UAAAA,OAAO,EAAE;AAAX,SAAhD;AAAA,kBACGR;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAlCQX,gB;;KAAAA,gB;AAoCT,eAAeA,gBAAf","sourcesContent":["import { useState } from \"react\";\nimport { ReactComponent as Info } from \"../../assets/icons/info.svg\";\nimport { SvgIcon, Paper, Typography, Box, Popper } from \"@material-ui/core\";\nimport \"./infotooltip.scss\";\n\n/**\n * InfoTooltipMulti allows passing an ARRAY of message strings w each Array Element on a new line\n * @param {*} messagesArray = Array of Message Strings\n * @returns MUI Popover on document.body\n */\nfunction InfoTooltipMulti({ messagesArray }) {\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleHover = event => {\n    setAnchorEl(anchorEl ? null : event.currentTarget);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? \"info-tooltip\" : undefined;\n\n  var messagesRender = messagesArray.map((innerArray, i) => {\n    return (\n      <div key={i} style={i > 0 ? { marginTop: \"1rem\" } : {}}>\n        <Typography variant=\"body2\">{innerArray}</Typography>\n      </div>\n    );\n  });\n\n  return (\n    <Box>\n      <SvgIcon\n        component={Info}\n        onMouseOver={handleHover}\n        onMouseOut={handleHover}\n        style={{ margin: \"0 5px\", fontSize: 16 }}\n        className=\"info-icon\"\n      ></SvgIcon>\n      <Popper id={id} open={open} anchorEl={anchorEl} placement=\"bottom\" className=\"tooltip\">\n        <Paper className=\"info-tooltip ohm-card\" style={{ padding: \"1.33rem\" }}>\n          {messagesRender}\n        </Paper>\n      </Popper>\n    </Box>\n  );\n}\n\nexport default InfoTooltipMulti;\n"]},"metadata":{},"sourceType":"module"}