{"ast":null,"code":"var _jsxFileName = \"C:\\\\arete\\\\AlphaDAO-react\\\\src\\\\components\\\\TopBar\\\\OhmMenu.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { addresses, TOKEN_DECIMALS } from \"../../constants\";\nimport { getTokenImage } from \"../../helpers\";\nimport { useSelector } from \"react-redux\";\nimport { Link, SvgIcon, Popper, Button, Paper, Typography, Divider, Box, Fade, Slide } from \"@material-ui/core\";\nimport { ReactComponent as InfoIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/icons/info-fill.svg\";\nimport { ReactComponent as ArrowUpIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/icons/arrow-up.svg\";\nimport { ReactComponent as sOhmTokenImg } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/tokens/token_sOHM.svg\";\nimport { ReactComponent as ohmTokenImg } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/tokens/token_OHM.svg\";\nimport { ReactComponent as t33TokenImg } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/tokens/token_33T.svg\";\nimport \"./ohmmenu.scss\";\nimport { dai } from \"src/helpers/AllBonds\";\nimport { useWeb3Context } from \"../../hooks/web3Context\";\nimport OhmImg from \"src/assets/tokens/token_OHM.svg\";\nimport SOhmImg from \"src/assets/tokens/token_sOHM.svg\";\nimport token33tImg from \"src/assets/tokens/token_33T.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst addTokenToWallet = (tokenSymbol, tokenAddress) => async () => {\n  if (window.ethereum) {\n    const host = window.location.origin; // NOTE (appleseed): 33T token defaults to sOHM logo since we don't have a 33T logo yet\n\n    let tokenPath; // if (tokenSymbol === \"OHM\") {\n    // } ? OhmImg : SOhmImg;\n\n    switch (tokenSymbol) {\n      case \"OHM\":\n        tokenPath = OhmImg;\n        break;\n\n      case \"33T\":\n        tokenPath = token33tImg;\n        break;\n\n      default:\n        tokenPath = SOhmImg;\n    }\n\n    const imageURL = `${host}/${tokenPath}`;\n\n    try {\n      await window.ethereum.request({\n        method: \"wallet_watchAsset\",\n        params: {\n          type: \"ERC20\",\n          options: {\n            address: tokenAddress,\n            symbol: tokenSymbol,\n            decimals: TOKEN_DECIMALS,\n            image: imageURL\n          }\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n};\n\nfunction OhmMenu() {\n  _s();\n\n  var _addresses$networkID;\n\n  // const [anchorEl, setAnchorEl] = useState(null);\n  // const isEthereumAPIAvailable = window.ethereum;\n  const {\n    chainID\n  } = useWeb3Context();\n  const networkID = chainID; // const SOHM_ADDRESS = addresses[networkID].SOHM_ADDRESS;\n  // const OHM_ADDRESS = addresses[networkID].OHM_ADDRESS;\n  // const PT_TOKEN_ADDRESS = addresses[networkID].PT_TOKEN_ADDRESS;\n\n  const OX_ADDRESS = (_addresses$networkID = addresses[networkID]) === null || _addresses$networkID === void 0 ? void 0 : _addresses$networkID.OX_ADDRESS; // const handleClick = event => {\n  //   setAnchorEl(anchorEl ? null : event.currentTarget);\n  // };\n  // const open = Boolean(anchorEl);\n  // const id = \"ohm-popper\";\n\n  const daiAddress = dai.getAddressForReserve(networkID); // const fraxAddress = frax.getAddressForReserve(networkID);\n\n  return (\n    /*#__PURE__*/\n    // <Box\n    //   component=\"div\"\n    //   onMouseEnter={e => handleClick(e)}\n    //   onMouseLeave={e => handleClick(e)}\n    //   id=\"guru-menu-button-hover\"\n    // >\n    //   <Button id=\"guru-menu-button\" size=\"large\" variant=\"contained\" color=\"secondary\" title=\"OX\" aria-describedby={id}>\n    //     <SvgIcon component={InfoIcon} color=\"primary\" />\n    //     <Typography>BUY OX</Typography>\n    //   </Button>\n    //\n    //   <Popper id={id} open={open} anchorEl={anchorEl} placement=\"bottom-start\" transition>\n    //     {({ TransitionProps }) => {\n    //       return (\n    //         <Fade {...TransitionProps} timeout={100}>\n    //           <Paper className=\"ohm-menu\" elevation={1}>\n    //             <Box component=\"div\" className=\"buy-tokens\">\n    //               <Link\n    //                 href={`https://app.sushi.com/swap?inputCurrency=${daiAddress}&outputCurrency=${OHM_ADDRESS}`}\n    //                 target=\"_blank\"\n    //                 rel=\"noreferrer\"\n    //               >\n    //                 <Button size=\"large\" variant=\"contained\" color=\"secondary\" fullWidth>\n    //                   <Typography align=\"left\">\n    //                     Buy on Sushiswap <SvgIcon component={ArrowUpIcon} htmlColor=\"#A3A3A3\" />\n    //                   </Typography>\n    //                 </Button>\n    //               </Link>\n    //\n    _jsxDEV(Link, {\n      href: `https://app.sushi.com/swap?inputCurrency=${daiAddress}&outputCurrency=${OX_ADDRESS}`,\n      target: \"_blank\",\n      rel: \"noreferrer\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        id: \"guru-menu-button\",\n        size: \"large\",\n        variant: \"contained\",\n        color: \"secondary\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          align: \"left\",\n          children: \"BUY OX\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }, this) //\n    //               <Link href={`https://abracadabra.money/pool/10`} target=\"_blank\" rel=\"noreferrer\">\n    //                 <Button size=\"large\" variant=\"contained\" color=\"secondary\" fullWidth>\n    //                   <Typography align=\"left\">\n    //                     Wrap sOHM on Abracadabra <SvgIcon component={ArrowUpIcon} htmlColor=\"#A3A3A3\" />\n    //                   </Typography>\n    //                 </Button>\n    //               </Link>\n    //             </Box>\n    //\n    //             <Box component=\"div\" className=\"data-links\">\n    //               <Divider color=\"secondary\" className=\"less-margin\" />\n    //               <Link href={`https://dune.xyz/shadow/Olympus-(OHM)`} target=\"_blank\" rel=\"noreferrer\">\n    //                 <Button size=\"large\" variant=\"contained\" color=\"secondary\" fullWidth>\n    //                   <Typography align=\"left\">\n    //                     Shadow's Dune Dashboard <SvgIcon component={ArrowUpIcon} htmlColor=\"#A3A3A3\" />\n    //                   </Typography>\n    //                 </Button>\n    //               </Link>\n    //             </Box>\n    //\n    //             {isEthereumAPIAvailable ? (\n    //               <Box className=\"add-tokens\">\n    //                 <Divider color=\"secondary\" />\n    //                 <p>ADD TOKEN TO WALLET</p>\n    //                 <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\">\n    //                   <Button variant=\"contained\" color=\"secondary\" onClick={addTokenToWallet(\"OHM\", OHM_ADDRESS)}>\n    //                     <SvgIcon\n    //                       component={ohmTokenImg}\n    //                       viewBox=\"0 0 32 32\"\n    //                       style={{ height: \"25px\", width: \"25px\" }}\n    //                     />\n    //                     <Typography variant=\"body1\">OHM</Typography>\n    //                   </Button>\n    //                   <Button variant=\"contained\" color=\"secondary\" onClick={addTokenToWallet(\"sOHM\", SOHM_ADDRESS)}>\n    //                     <SvgIcon\n    //                       component={sOhmTokenImg}\n    //                       viewBox=\"0 0 100 100\"\n    //                       style={{ height: \"25px\", width: \"25px\" }}\n    //                     />\n    //                     <Typography variant=\"body1\">sOHM</Typography>\n    //                   </Button>\n    //                   <Button variant=\"contained\" color=\"secondary\" onClick={addTokenToWallet(\"33T\", PT_TOKEN_ADDRESS)}>\n    //                     <SvgIcon\n    //                       component={t33TokenImg}\n    //                       viewBox=\"0 0 1000 1000\"\n    //                       style={{ height: \"25px\", width: \"25px\" }}\n    //                     />\n    //                     <Typography variant=\"body1\">33T</Typography>\n    //                   </Button>\n    //                 </Box>\n    //               </Box>\n    //             ) : null}\n    //\n    //             <Divider color=\"secondary\" />\n    //             <Link\n    //               href=\"https://docs.olympusdao.finance/using-the-website/unstaking_lp\"\n    //               target=\"_blank\"\n    //               rel=\"noreferrer\"\n    //             >\n    //               <Button size=\"large\" variant=\"contained\" color=\"secondary\" fullWidth>\n    //                 <Typography align=\"left\">Unstake Legacy LP Token</Typography>\n    //               </Button>\n    //             </Link>\n    //           </Paper>\n    //         </Fade>\n    //       );\n    //     }}\n    //   </Popper>\n    // </Box>\n\n  );\n}\n\n_s(OhmMenu, \"MByQf+JZKqHkZoGpVBzX8L/vd4M=\", false, function () {\n  return [useWeb3Context];\n});\n\n_c = OhmMenu;\nexport default OhmMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"OhmMenu\");","map":{"version":3,"sources":["C:/arete/AlphaDAO-react/src/components/TopBar/OhmMenu.jsx"],"names":["useState","useEffect","addresses","TOKEN_DECIMALS","getTokenImage","useSelector","Link","SvgIcon","Popper","Button","Paper","Typography","Divider","Box","Fade","Slide","dai","useWeb3Context","addTokenToWallet","tokenSymbol","tokenAddress","window","ethereum","host","location","origin","tokenPath","OhmImg","token33tImg","SOhmImg","imageURL","request","method","params","type","options","address","symbol","decimals","image","error","console","log","OhmMenu","chainID","networkID","OX_ADDRESS","daiAddress","getAddressForReserve"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,EAAoBC,cAApB,QAA0C,iBAA1C;AACA,SAASC,aAAT,QAA8B,eAA9B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,MAAxB,EAAgCC,MAAhC,EAAwCC,KAAxC,EAA+CC,UAA/C,EAA2DC,OAA3D,EAAoEC,GAApE,EAAyEC,IAAzE,EAA+EC,KAA/E,QAA4F,mBAA5F;;;;;;AAOA,OAAO,gBAAP;AACA,SAASC,GAAT,QAAoB,sBAApB;AACA,SAASC,cAAT,QAA+B,yBAA/B;;;;;;AAMA,MAAMC,gBAAgB,GAAG,CAACC,WAAD,EAAcC,YAAd,KAA+B,YAAY;AAClE,MAAIC,MAAM,CAACC,QAAX,EAAqB;AACnB,UAAMC,IAAI,GAAGF,MAAM,CAACG,QAAP,CAAgBC,MAA7B,CADmB,CAEnB;;AACA,QAAIC,SAAJ,CAHmB,CAInB;AAEA;;AACA,YAAQP,WAAR;AACE,WAAK,KAAL;AACEO,QAAAA,SAAS,GAAGC,MAAZ;AACA;;AACF,WAAK,KAAL;AACED,QAAAA,SAAS,GAAGE,WAAZ;AACA;;AACF;AACEF,QAAAA,SAAS,GAAGG,OAAZ;AARJ;;AAUA,UAAMC,QAAQ,GAAI,GAAEP,IAAK,IAAGG,SAAU,EAAtC;;AAEA,QAAI;AACF,YAAML,MAAM,CAACC,QAAP,CAAgBS,OAAhB,CAAwB;AAC5BC,QAAAA,MAAM,EAAE,mBADoB;AAE5BC,QAAAA,MAAM,EAAE;AACNC,UAAAA,IAAI,EAAE,OADA;AAENC,UAAAA,OAAO,EAAE;AACPC,YAAAA,OAAO,EAAEhB,YADF;AAEPiB,YAAAA,MAAM,EAAElB,WAFD;AAGPmB,YAAAA,QAAQ,EAAEnC,cAHH;AAIPoC,YAAAA,KAAK,EAAET;AAJA;AAFH;AAFoB,OAAxB,CAAN;AAYD,KAbD,CAaE,OAAOU,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF;AACF,CArCD;;AAuCA,SAASG,OAAT,GAAmB;AAAA;;AAAA;;AACjB;AACA;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAc3B,cAAc,EAAlC;AAEA,QAAM4B,SAAS,GAAGD,OAAlB,CALiB,CAOjB;AACA;AACA;;AAEA,QAAME,UAAU,2BAAG5C,SAAS,CAAC2C,SAAD,CAAZ,yDAAG,qBAAsBC,UAAzC,CAXiB,CAajB;AACA;AACA;AAEA;AACA;;AACA,QAAMC,UAAU,GAAG/B,GAAG,CAACgC,oBAAJ,CAAyBH,SAAzB,CAAnB,CAnBiB,CAoBjB;;AACA;AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAC,IAAD;AACE,MAAA,IAAI,EAAG,4CAA2CE,UAAW,mBAAkBD,UAAW,EAD5F;AAEE,MAAA,MAAM,EAAC,QAFT;AAGE,MAAA,GAAG,EAAC,YAHN;AAAA,6BAKE,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,kBAAX;AAA8B,QAAA,IAAI,EAAC,OAAnC;AAA2C,QAAA,OAAO,EAAC,WAAnD;AAA+D,QAAA,KAAK,EAAC,WAArE;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,KAAK,EAAC,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,YA9BF,CAuCE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA5GF;AA8GD;;GAnIQH,O;UAGa1B,c;;;KAHb0B,O;AAqIT,eAAeA,OAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { addresses, TOKEN_DECIMALS } from \"../../constants\";\nimport { getTokenImage } from \"../../helpers\";\nimport { useSelector } from \"react-redux\";\nimport { Link, SvgIcon, Popper, Button, Paper, Typography, Divider, Box, Fade, Slide } from \"@material-ui/core\";\nimport { ReactComponent as InfoIcon } from \"../../assets/icons/info-fill.svg\";\nimport { ReactComponent as ArrowUpIcon } from \"../../assets/icons/arrow-up.svg\";\nimport { ReactComponent as sOhmTokenImg } from \"../../assets/tokens/token_sOHM.svg\";\nimport { ReactComponent as ohmTokenImg } from \"../../assets/tokens/token_OHM.svg\";\nimport { ReactComponent as t33TokenImg } from \"../../assets/tokens/token_33T.svg\";\n\nimport \"./ohmmenu.scss\";\nimport { dai } from \"src/helpers/AllBonds\";\nimport { useWeb3Context } from \"../../hooks/web3Context\";\n\nimport OhmImg from \"src/assets/tokens/token_OHM.svg\";\nimport SOhmImg from \"src/assets/tokens/token_sOHM.svg\";\nimport token33tImg from \"src/assets/tokens/token_33T.svg\";\n\nconst addTokenToWallet = (tokenSymbol, tokenAddress) => async () => {\n  if (window.ethereum) {\n    const host = window.location.origin;\n    // NOTE (appleseed): 33T token defaults to sOHM logo since we don't have a 33T logo yet\n    let tokenPath;\n    // if (tokenSymbol === \"OHM\") {\n\n    // } ? OhmImg : SOhmImg;\n    switch (tokenSymbol) {\n      case \"OHM\":\n        tokenPath = OhmImg;\n        break;\n      case \"33T\":\n        tokenPath = token33tImg;\n        break;\n      default:\n        tokenPath = SOhmImg;\n    }\n    const imageURL = `${host}/${tokenPath}`;\n\n    try {\n      await window.ethereum.request({\n        method: \"wallet_watchAsset\",\n        params: {\n          type: \"ERC20\",\n          options: {\n            address: tokenAddress,\n            symbol: tokenSymbol,\n            decimals: TOKEN_DECIMALS,\n            image: imageURL,\n          },\n        },\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n};\n\nfunction OhmMenu() {\n  // const [anchorEl, setAnchorEl] = useState(null);\n  // const isEthereumAPIAvailable = window.ethereum;\n  const { chainID } = useWeb3Context();\n\n  const networkID = chainID;\n\n  // const SOHM_ADDRESS = addresses[networkID].SOHM_ADDRESS;\n  // const OHM_ADDRESS = addresses[networkID].OHM_ADDRESS;\n  // const PT_TOKEN_ADDRESS = addresses[networkID].PT_TOKEN_ADDRESS;\n\n  const OX_ADDRESS = addresses[networkID]?.OX_ADDRESS;\n\n  // const handleClick = event => {\n  //   setAnchorEl(anchorEl ? null : event.currentTarget);\n  // };\n\n  // const open = Boolean(anchorEl);\n  // const id = \"ohm-popper\";\n  const daiAddress = dai.getAddressForReserve(networkID);\n  // const fraxAddress = frax.getAddressForReserve(networkID);\n  return (\n    // <Box\n    //   component=\"div\"\n    //   onMouseEnter={e => handleClick(e)}\n    //   onMouseLeave={e => handleClick(e)}\n    //   id=\"guru-menu-button-hover\"\n    // >\n    //   <Button id=\"guru-menu-button\" size=\"large\" variant=\"contained\" color=\"secondary\" title=\"OX\" aria-describedby={id}>\n    //     <SvgIcon component={InfoIcon} color=\"primary\" />\n    //     <Typography>BUY OX</Typography>\n    //   </Button>\n    //\n    //   <Popper id={id} open={open} anchorEl={anchorEl} placement=\"bottom-start\" transition>\n    //     {({ TransitionProps }) => {\n    //       return (\n    //         <Fade {...TransitionProps} timeout={100}>\n    //           <Paper className=\"ohm-menu\" elevation={1}>\n    //             <Box component=\"div\" className=\"buy-tokens\">\n    //               <Link\n    //                 href={`https://app.sushi.com/swap?inputCurrency=${daiAddress}&outputCurrency=${OHM_ADDRESS}`}\n    //                 target=\"_blank\"\n    //                 rel=\"noreferrer\"\n    //               >\n    //                 <Button size=\"large\" variant=\"contained\" color=\"secondary\" fullWidth>\n    //                   <Typography align=\"left\">\n    //                     Buy on Sushiswap <SvgIcon component={ArrowUpIcon} htmlColor=\"#A3A3A3\" />\n    //                   </Typography>\n    //                 </Button>\n    //               </Link>\n    //\n    <Link\n      href={`https://app.sushi.com/swap?inputCurrency=${daiAddress}&outputCurrency=${OX_ADDRESS}`}\n      target=\"_blank\"\n      rel=\"noreferrer\"\n    >\n      <Button id=\"guru-menu-button\" size=\"large\" variant=\"contained\" color=\"secondary\">\n        <Typography align=\"left\">BUY OX</Typography>\n      </Button>\n    </Link>\n    //\n    //               <Link href={`https://abracadabra.money/pool/10`} target=\"_blank\" rel=\"noreferrer\">\n    //                 <Button size=\"large\" variant=\"contained\" color=\"secondary\" fullWidth>\n    //                   <Typography align=\"left\">\n    //                     Wrap sOHM on Abracadabra <SvgIcon component={ArrowUpIcon} htmlColor=\"#A3A3A3\" />\n    //                   </Typography>\n    //                 </Button>\n    //               </Link>\n    //             </Box>\n    //\n    //             <Box component=\"div\" className=\"data-links\">\n    //               <Divider color=\"secondary\" className=\"less-margin\" />\n    //               <Link href={`https://dune.xyz/shadow/Olympus-(OHM)`} target=\"_blank\" rel=\"noreferrer\">\n    //                 <Button size=\"large\" variant=\"contained\" color=\"secondary\" fullWidth>\n    //                   <Typography align=\"left\">\n    //                     Shadow's Dune Dashboard <SvgIcon component={ArrowUpIcon} htmlColor=\"#A3A3A3\" />\n    //                   </Typography>\n    //                 </Button>\n    //               </Link>\n    //             </Box>\n    //\n    //             {isEthereumAPIAvailable ? (\n    //               <Box className=\"add-tokens\">\n    //                 <Divider color=\"secondary\" />\n    //                 <p>ADD TOKEN TO WALLET</p>\n    //                 <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\">\n    //                   <Button variant=\"contained\" color=\"secondary\" onClick={addTokenToWallet(\"OHM\", OHM_ADDRESS)}>\n    //                     <SvgIcon\n    //                       component={ohmTokenImg}\n    //                       viewBox=\"0 0 32 32\"\n    //                       style={{ height: \"25px\", width: \"25px\" }}\n    //                     />\n    //                     <Typography variant=\"body1\">OHM</Typography>\n    //                   </Button>\n    //                   <Button variant=\"contained\" color=\"secondary\" onClick={addTokenToWallet(\"sOHM\", SOHM_ADDRESS)}>\n    //                     <SvgIcon\n    //                       component={sOhmTokenImg}\n    //                       viewBox=\"0 0 100 100\"\n    //                       style={{ height: \"25px\", width: \"25px\" }}\n    //                     />\n    //                     <Typography variant=\"body1\">sOHM</Typography>\n    //                   </Button>\n    //                   <Button variant=\"contained\" color=\"secondary\" onClick={addTokenToWallet(\"33T\", PT_TOKEN_ADDRESS)}>\n    //                     <SvgIcon\n    //                       component={t33TokenImg}\n    //                       viewBox=\"0 0 1000 1000\"\n    //                       style={{ height: \"25px\", width: \"25px\" }}\n    //                     />\n    //                     <Typography variant=\"body1\">33T</Typography>\n    //                   </Button>\n    //                 </Box>\n    //               </Box>\n    //             ) : null}\n    //\n    //             <Divider color=\"secondary\" />\n    //             <Link\n    //               href=\"https://docs.olympusdao.finance/using-the-website/unstaking_lp\"\n    //               target=\"_blank\"\n    //               rel=\"noreferrer\"\n    //             >\n    //               <Button size=\"large\" variant=\"contained\" color=\"secondary\" fullWidth>\n    //                 <Typography align=\"left\">Unstake Legacy LP Token</Typography>\n    //               </Button>\n    //             </Link>\n    //           </Paper>\n    //         </Fade>\n    //       );\n    //     }}\n    //   </Popper>\n    // </Box>\n  );\n}\n\nexport default OhmMenu;\n"]},"metadata":{},"sourceType":"module"}