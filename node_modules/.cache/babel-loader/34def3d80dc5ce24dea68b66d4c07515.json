{"ast":null,"code":"var _jsxFileName = \"C:\\\\arete\\\\AlphaDAO-react\\\\src\\\\components\\\\Chart\\\\Chart.jsx\",\n    _s = $RefreshSig$();\n\nimport CustomTooltip from \"./CustomTooltip\";\nimport InfoTooltip from \"../InfoTooltip/InfoTooltip\";\nimport ExpandedChart from \"./ExpandedChart\";\nimport { useEffect, useState } from \"react\";\nimport { ReactComponent as Fullscreen } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/icons/fullscreen.svg\";\nimport { ResponsiveContainer, BarChart, Bar, AreaChart, LineChart, Line, XAxis, YAxis, Area, CartesianGrid, Tooltip } from \"recharts\";\nimport { Typography, Box, SvgIcon, CircularProgress } from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { trim } from \"../../helpers\";\nimport { format } from \"date-fns\";\nimport \"./chart.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst formatCurrency = c => {\n  return new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    maximumFractionDigits: 0,\n    minimumFractionDigits: 0\n  }).format(c);\n};\n\nconst tickCount = 3;\nconst expandedTickCount = 5;\n\nconst renderExpandedChartStroke = (isExpanded, color) => {\n  return isExpanded ? /*#__PURE__*/_jsxDEV(CartesianGrid, {\n    vertical: false,\n    stroke: color\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 23\n  }, this) : \"\";\n};\n\nconst renderAreaChart = (data, dataKey, stopColor, stroke, dataFormat, bulletpointColors, itemNames, itemType, isStaked, isExpanded, expandedGraphStrokeColor, isPOL) => /*#__PURE__*/_jsxDEV(AreaChart, {\n  data: data,\n  children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n    children: /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n      id: `color-${dataKey[0]}`,\n      x1: \"0\",\n      y1: \"0\",\n      x2: \"0\",\n      y2: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n        offset: \"0%\",\n        stopColor: stopColor[0][0],\n        stopOpacity: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n        offset: \"90%\",\n        stopColor: stopColor[0][1],\n        stopOpacity: 0.9\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n    dataKey: \"timestamp\",\n    interval: 30,\n    axisLine: false,\n    tickLine: false,\n    tickFormatter: str => format(new Date(str * 1000), \"MMM dd\"),\n    reversed: true,\n    connectNulls: true,\n    padding: {\n      right: 20\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n    tickCount: isExpanded ? expandedTickCount : tickCount,\n    axisLine: false,\n    tickLine: false,\n    width: dataFormat === \"percent\" ? 33 : 55,\n    tickFormatter: number => number !== 0 ? dataFormat !== \"percent\" ? `${formatCurrency(parseFloat(number) / 1000000)}M` : `${trim(parseFloat(number), 2)}%` : \"\",\n    domain: [0, \"auto\"],\n    dx: 3,\n    connectNulls: true,\n    allowDataOverflow: false\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n    content: /*#__PURE__*/_jsxDEV(CustomTooltip, {\n      bulletpointColors: bulletpointColors,\n      itemNames: itemNames,\n      itemType: itemType,\n      isStaked: isStaked,\n      isPOL: isPOL\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Area, {\n    dataKey: dataKey[0],\n    stroke: \"none\",\n    fill: `url(#color-${dataKey[0]})`,\n    fillOpacity: 1\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this), renderExpandedChartStroke(isExpanded, expandedGraphStrokeColor)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 55,\n  columnNumber: 3\n}, this);\n\nconst renderStackedAreaChart = (data, dataKey, stopColor, stroke, dataFormat, bulletpointColors, itemNames, itemType, isExpanded, expandedGraphStrokeColor) => /*#__PURE__*/_jsxDEV(AreaChart, {\n  data: data,\n  children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n    children: [/*#__PURE__*/_jsxDEV(\"linearGradient\", {\n      id: `color-${dataKey[0]}`,\n      x1: \"0\",\n      y1: \"0\",\n      x2: \"0\",\n      y2: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n        offset: \"0%\",\n        stopColor: stopColor[0][0],\n        stopOpacity: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n        offset: \"90%\",\n        stopColor: stopColor[0][1],\n        stopOpacity: 0.9\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n      id: `color-${dataKey[1]}`,\n      x1: \"0\",\n      y1: \"0\",\n      x2: \"0\",\n      y2: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n        offset: \"0%\",\n        stopColor: stopColor[1][0],\n        stopOpacity: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n        offset: \"90%\",\n        stopColor: stopColor[1][1],\n        stopOpacity: 0.9\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n      id: `color-${dataKey[2]}`,\n      x1: \"0\",\n      y1: \"0\",\n      x2: \"0\",\n      y2: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n        offset: \"0%\",\n        stopColor: stopColor[2][0],\n        stopOpacity: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n        offset: \"90%\",\n        stopColor: stopColor[2][1],\n        stopOpacity: 0.9\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n      id: `color-${dataKey[3]}`,\n      x1: \"0\",\n      y1: \"0\",\n      x2: \"0\",\n      y2: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n        offset: \"0%\",\n        stopColor: stopColor[3][0],\n        stopOpacity: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n        offset: \"90%\",\n        stopColor: stopColor[3][1],\n        stopOpacity: 0.9\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n      id: `color-${dataKey[4]}`,\n      x1: \"0\",\n      y1: \"0\",\n      x2: \"0\",\n      y2: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n        offset: \"0%\",\n        stopColor: stopColor[4][0],\n        stopOpacity: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n        offset: \"90%\",\n        stopColor: stopColor[4][1],\n        stopOpacity: 0.9\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n    dataKey: \"timestamp\",\n    interval: 30,\n    axisLine: false,\n    tickLine: false,\n    tickFormatter: str => format(new Date(str * 1000), \"MMM dd\"),\n    reversed: true,\n    connectNulls: true,\n    padding: {\n      right: 20\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n    tickCount: isExpanded ? expandedTickCount : tickCount,\n    axisLine: false,\n    tickLine: false,\n    width: dataFormat === \"percent\" ? 33 : 55,\n    tickFormatter: number => {\n      if (number !== 0) {\n        if (dataFormat === \"percent\") {\n          return `${trim(parseFloat(number), 2)}%`;\n        } else if (dataFormat === \"k\") return `${formatCurrency(parseFloat(number) / 1000)}k`;else return `${formatCurrency(parseFloat(number) / 1000000)}M`;\n      }\n\n      return \"\";\n    },\n    domain: [0, \"auto\"],\n    connectNulls: true,\n    allowDataOverflow: false\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n    formatter: value => trim(parseFloat(value), 2),\n    content: /*#__PURE__*/_jsxDEV(CustomTooltip, {\n      bulletpointColors: bulletpointColors,\n      itemNames: itemNames,\n      itemType: itemType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 16\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Area, {\n    dataKey: dataKey[0],\n    stroke: stroke ? stroke[0] : \"none\",\n    fill: `url(#color-${dataKey[0]})`,\n    fillOpacity: 1,\n    stackId: \"1\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Area, {\n    dataKey: dataKey[1],\n    stroke: stroke ? stroke[1] : \"none\",\n    fill: `url(#color-${dataKey[1]})`,\n    fillOpacity: 1,\n    stackId: \"1\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Area, {\n    dataKey: dataKey[2],\n    stroke: stroke ? stroke[2] : \"none\",\n    fill: `url(#color-${dataKey[2]})`,\n    fillOpacity: 1,\n    stackId: \"1\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Area, {\n    dataKey: dataKey[3],\n    stroke: stroke ? stroke[3] : \"none\",\n    fill: `url(#color-${dataKey[3]})`,\n    fillOpacity: 1,\n    stackId: \"1\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Area, {\n    dataKey: dataKey[4],\n    stroke: stroke ? stroke[4] : \"none\",\n    fill: `url(#color-${dataKey[4]})`,\n    fillOpacity: 1,\n    stackId: \"1\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this), renderExpandedChartStroke(isExpanded, expandedGraphStrokeColor)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 117,\n  columnNumber: 3\n}, this);\n\nconst renderLineChart = (data, dataKey, stroke, color, dataFormat, bulletpointColors, itemNames, itemType, isExpanded, expandedGraphStrokeColor, scale) => /*#__PURE__*/_jsxDEV(LineChart, {\n  data: data,\n  children: [/*#__PURE__*/_jsxDEV(XAxis, {\n    dataKey: \"timestamp\",\n    interval: 100,\n    axisLine: false,\n    tickCount: 3,\n    tickLine: false,\n    reversed: true,\n    connectNulls: true,\n    tickFormatter: str => format(new Date(str * 1000), \"MMM dd\"),\n    padding: {\n      right: 20\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n    tickCount: scale == \"log\" ? 1 : isExpanded ? expandedTickCount : tickCount,\n    axisLine: false,\n    tickLine: false,\n    width: 32,\n    scale: scale,\n    tickFormatter: number => number !== 0 ? dataFormat !== \"percent\" ? `${number}` : `${parseFloat(number) / 1000}k` : \"\",\n    domain: [scale == \"log\" ? \"dataMin\" : 0, \"auto\"],\n    connectNulls: true,\n    allowDataOverflow: false\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n    content: /*#__PURE__*/_jsxDEV(CustomTooltip, {\n      bulletpointColors: bulletpointColors,\n      itemNames: itemNames,\n      itemType: itemType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 16\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 249,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Line, {\n    type: \"monotone\",\n    dataKey: dataKey[0],\n    stroke: stroke ? stroke : \"none\",\n    color: color,\n    dot: false\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 5\n  }, this), \";\", renderExpandedChartStroke(isExpanded, expandedGraphStrokeColor)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 224,\n  columnNumber: 3\n}, this);\n\nconst renderMultiLineChart = (data, dataKey, color, stroke, dataFormat, bulletpointColors, itemNames, itemType, isExpanded, expandedGraphStrokeColor) => /*#__PURE__*/_jsxDEV(LineChart, {\n  data: data,\n  children: [/*#__PURE__*/_jsxDEV(XAxis, {\n    dataKey: \"timestamp\",\n    interval: 30,\n    axisLine: false,\n    tickCount: 3,\n    tickLine: false,\n    reversed: true,\n    connectNulls: true,\n    tickFormatter: str => format(new Date(str * 1000), \"MMM dd\"),\n    padding: {\n      right: 20\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 270,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n    tickCount: isExpanded ? expandedTickCount : tickCount,\n    axisLine: false,\n    tickLine: false,\n    width: 25,\n    tickFormatter: number => number !== 0 ? `${trim(parseFloat(number), 2)}` : \"\",\n    domain: [0, \"auto\"],\n    connectNulls: true,\n    allowDataOverflow: false\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 281,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n    content: /*#__PURE__*/_jsxDEV(CustomTooltip, {\n      bulletpointColors: bulletpointColors,\n      itemNames: itemNames,\n      itemType: itemType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 16\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 291,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Line, {\n    dataKey: dataKey[0],\n    stroke: stroke[0],\n    dot: false\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 294,\n    columnNumber: 5\n  }, this), \";\", /*#__PURE__*/_jsxDEV(Line, {\n    dataKey: dataKey[1],\n    stroke: stroke[1],\n    dot: false\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 295,\n    columnNumber: 5\n  }, this), \";\", /*#__PURE__*/_jsxDEV(Line, {\n    dataKey: dataKey[2],\n    stroke: stroke[2],\n    dot: false\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 296,\n    columnNumber: 5\n  }, this), \";\", /*#__PURE__*/_jsxDEV(Line, {\n    dataKey: dataKey[3],\n    stroke: stroke[3],\n    dot: false\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 297,\n    columnNumber: 5\n  }, this), \";\", renderExpandedChartStroke(isExpanded, expandedGraphStrokeColor)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 269,\n  columnNumber: 3\n}, this); // JTBD: Bar chart for Holders\n\n\nconst renderBarChart = (data, dataKey, stroke, dataFormat, bulletpointColors, itemNames, itemType, isExpanded, expandedGraphStrokeColor) => /*#__PURE__*/_jsxDEV(BarChart, {\n  data: data,\n  children: [/*#__PURE__*/_jsxDEV(XAxis, {\n    dataKey: \"timestamp\",\n    interval: 30,\n    axisLine: false,\n    tickCount: tickCount,\n    tickLine: false,\n    reversed: true,\n    tickFormatter: str => format(new Date(str * 1000), \"MMM dd\"),\n    padding: {\n      right: 20\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 315,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n    axisLine: false,\n    tickLine: false,\n    tickCount: isExpanded ? expandedTickCount : tickCount,\n    width: 33,\n    domain: [0, \"auto\"],\n    allowDataOverflow: false,\n    tickFormatter: number => number !== 0 ? number : \"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 325,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n    content: /*#__PURE__*/_jsxDEV(CustomTooltip, {\n      bulletpointColors: bulletpointColors,\n      itemNames: itemNames,\n      itemType: itemType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 16\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 334,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Bar, {\n    dataKey: dataKey[0],\n    fill: stroke[0]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 337,\n    columnNumber: 5\n  }, this), renderExpandedChartStroke(isExpanded, expandedGraphStrokeColor)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 314,\n  columnNumber: 3\n}, this);\n\nfunction Chart({\n  type,\n  data,\n  scale,\n  dataKey,\n  color,\n  stopColor,\n  stroke,\n  headerText,\n  dataFormat,\n  headerSubText,\n  bulletpointColors,\n  itemNames,\n  itemType,\n  isStaked,\n  infoTooltipMessage,\n  expandedGraphStrokeColor,\n  isPOL\n}) {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const renderChart = (type, isExpanded) => {\n    if (type === \"line\") return renderLineChart(data, dataKey, color, stroke, dataFormat, bulletpointColors, itemNames, itemType, isExpanded, expandedGraphStrokeColor, scale);\n    if (type === \"area\") return renderAreaChart(data, dataKey, stopColor, stroke, dataFormat, bulletpointColors, itemNames, itemType, isStaked, isExpanded, expandedGraphStrokeColor, isPOL);\n    if (type === \"stack\") return renderStackedAreaChart(data, dataKey, stopColor, stroke, dataFormat, bulletpointColors, itemNames, itemType, isExpanded, expandedGraphStrokeColor);\n    if (type === \"multi\") return renderMultiLineChart(data, dataKey, color, stroke, dataFormat, bulletpointColors, itemNames, itemType, isExpanded, expandedGraphStrokeColor);\n    if (type === \"bar\") return renderBarChart(data, dataKey, stroke, dataFormat, bulletpointColors, itemNames, itemType, isExpanded, expandedGraphStrokeColor);\n  };\n\n  useEffect(() => {\n    if (data !== null || undefined) {\n      setLoading(false);\n    }\n  }, [data]);\n  return loading ? /*#__PURE__*/_jsxDEV(Box, {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 450,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Box, {\n    style: {\n      width: \"100%\",\n      height: \"100%\",\n      paddingRight: \"10px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-card-header\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        style: {\n          width: \"100%\",\n          overflow: \"hidden\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          width: \"90%\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"textSecondary\",\n            className: \"card-title-text\",\n            style: {\n              fontWeight: 400,\n              overflow: \"hidden\"\n            },\n            children: headerText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n            message: infoTooltipMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SvgIcon, {\n          component: Fullscreen,\n          color: \"primary\",\n          onClick: handleOpen,\n          style: {\n            fontSize: \"1rem\",\n            cursor: \"pointer\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ExpandedChart, {\n          open: open,\n          handleClose: handleClose,\n          renderChart: renderChart(type, true),\n          uid: dataKey,\n          data: data,\n          infoTooltipMessage: infoTooltipMessage,\n          headerText: headerText,\n          headerSubText: headerSubText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n        variant: \"text\",\n        width: 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          style: {\n            fontWeight: 600,\n            marginRight: 5\n          },\n          children: headerSubText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          color: \"textSecondary\",\n          style: {\n            fontWeight: 400\n          },\n          children: type !== \"multi\" && \"Today\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      width: \"100%\",\n      minHeight: 260,\n      minWidth: 310,\n      className: \"ohm-chart\",\n      children: loading || data && data.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        minHeight: 260,\n        width: \"100%\",\n        children: renderChart(type, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Skeleton, {\n        variant: \"rect\",\n        width: \"100%\",\n        height: 260\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 454,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chart, \"ALTVmfRFV2/4KxSy0yJO6VxQJOg=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["C:/arete/AlphaDAO-react/src/components/Chart/Chart.jsx"],"names":["CustomTooltip","InfoTooltip","ExpandedChart","useEffect","useState","ResponsiveContainer","BarChart","Bar","AreaChart","LineChart","Line","XAxis","YAxis","Area","CartesianGrid","Tooltip","Typography","Box","SvgIcon","CircularProgress","Skeleton","trim","format","formatCurrency","c","Intl","NumberFormat","style","currency","maximumFractionDigits","minimumFractionDigits","tickCount","expandedTickCount","renderExpandedChartStroke","isExpanded","color","renderAreaChart","data","dataKey","stopColor","stroke","dataFormat","bulletpointColors","itemNames","itemType","isStaked","expandedGraphStrokeColor","isPOL","str","Date","right","number","parseFloat","renderStackedAreaChart","value","renderLineChart","scale","renderMultiLineChart","renderBarChart","Chart","type","headerText","headerSubText","infoTooltipMessage","open","setOpen","loading","setLoading","handleOpen","handleClose","renderChart","undefined","display","alignItems","justifyContent","width","height","paddingRight","overflow","fontWeight","Fullscreen","fontSize","cursor","marginRight","length"],"mappings":"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","sourcesContent":["import CustomTooltip from \"./CustomTooltip\";\nimport InfoTooltip from \"../InfoTooltip/InfoTooltip\";\nimport ExpandedChart from \"./ExpandedChart\";\nimport { useEffect, useState } from \"react\";\nimport { ReactComponent as Fullscreen } from \"../../assets/icons/fullscreen.svg\";\nimport {\n  ResponsiveContainer,\n  BarChart,\n  Bar,\n  AreaChart,\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  Area,\n  CartesianGrid,\n  Tooltip,\n} from \"recharts\";\nimport { Typography, Box, SvgIcon, CircularProgress } from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { trim } from \"../../helpers\";\nimport { format } from \"date-fns\";\nimport \"./chart.scss\";\n\nconst formatCurrency = c => {\n  return new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    maximumFractionDigits: 0,\n    minimumFractionDigits: 0,\n  }).format(c);\n};\n\nconst tickCount = 3;\nconst expandedTickCount = 5;\n\nconst renderExpandedChartStroke = (isExpanded, color) => {\n  return isExpanded ? <CartesianGrid vertical={false} stroke={color} /> : \"\";\n};\n\nconst renderAreaChart = (\n  data,\n  dataKey,\n  stopColor,\n  stroke,\n  dataFormat,\n  bulletpointColors,\n  itemNames,\n  itemType,\n  isStaked,\n  isExpanded,\n  expandedGraphStrokeColor,\n  isPOL,\n) => (\n  <AreaChart data={data}>\n    <defs>\n      <linearGradient id={`color-${dataKey[0]}`} x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n        <stop offset=\"0%\" stopColor={stopColor[0][0]} stopOpacity={1} />\n        <stop offset=\"90%\" stopColor={stopColor[0][1]} stopOpacity={0.9} />\n      </linearGradient>\n    </defs>\n    <XAxis\n      dataKey=\"timestamp\"\n      interval={30}\n      axisLine={false}\n      tickLine={false}\n      tickFormatter={str => format(new Date(str * 1000), \"MMM dd\")}\n      reversed={true}\n      connectNulls={true}\n      padding={{ right: 20 }}\n    />\n    <YAxis\n      tickCount={isExpanded ? expandedTickCount : tickCount}\n      axisLine={false}\n      tickLine={false}\n      width={dataFormat === \"percent\" ? 33 : 55}\n      tickFormatter={number =>\n        number !== 0\n          ? dataFormat !== \"percent\"\n            ? `${formatCurrency(parseFloat(number) / 1000000)}M`\n            : `${trim(parseFloat(number), 2)}%`\n          : \"\"\n      }\n      domain={[0, \"auto\"]}\n      dx={3}\n      connectNulls={true}\n      allowDataOverflow={false}\n    />\n    <Tooltip\n      content={\n        <CustomTooltip\n          bulletpointColors={bulletpointColors}\n          itemNames={itemNames}\n          itemType={itemType}\n          isStaked={isStaked}\n          isPOL={isPOL}\n        />\n      }\n    />\n    <Area dataKey={dataKey[0]} stroke=\"none\" fill={`url(#color-${dataKey[0]})`} fillOpacity={1} />\n    {renderExpandedChartStroke(isExpanded, expandedGraphStrokeColor)}\n  </AreaChart>\n);\n\nconst renderStackedAreaChart = (\n  data,\n  dataKey,\n  stopColor,\n  stroke,\n  dataFormat,\n  bulletpointColors,\n  itemNames,\n  itemType,\n  isExpanded,\n  expandedGraphStrokeColor,\n) => (\n  <AreaChart data={data}>\n    <defs>\n      <linearGradient id={`color-${dataKey[0]}`} x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n        <stop offset=\"0%\" stopColor={stopColor[0][0]} stopOpacity={1} />\n        <stop offset=\"90%\" stopColor={stopColor[0][1]} stopOpacity={0.9} />\n      </linearGradient>\n      <linearGradient id={`color-${dataKey[1]}`} x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n        <stop offset=\"0%\" stopColor={stopColor[1][0]} stopOpacity={1} />\n        <stop offset=\"90%\" stopColor={stopColor[1][1]} stopOpacity={0.9} />\n      </linearGradient>\n      <linearGradient id={`color-${dataKey[2]}`} x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n        <stop offset=\"0%\" stopColor={stopColor[2][0]} stopOpacity={1} />\n        <stop offset=\"90%\" stopColor={stopColor[2][1]} stopOpacity={0.9} />\n      </linearGradient>\n      <linearGradient id={`color-${dataKey[3]}`} x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n        <stop offset=\"0%\" stopColor={stopColor[3][0]} stopOpacity={1} />\n        <stop offset=\"90%\" stopColor={stopColor[3][1]} stopOpacity={0.9} />\n      </linearGradient>\n      <linearGradient id={`color-${dataKey[4]}`} x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n        <stop offset=\"0%\" stopColor={stopColor[4][0]} stopOpacity={1} />\n        <stop offset=\"90%\" stopColor={stopColor[4][1]} stopOpacity={0.9} />\n      </linearGradient>\n    </defs>\n    <XAxis\n      dataKey=\"timestamp\"\n      interval={30}\n      axisLine={false}\n      tickLine={false}\n      tickFormatter={str => format(new Date(str * 1000), \"MMM dd\")}\n      reversed={true}\n      connectNulls={true}\n      padding={{ right: 20 }}\n    />\n    <YAxis\n      tickCount={isExpanded ? expandedTickCount : tickCount}\n      axisLine={false}\n      tickLine={false}\n      width={dataFormat === \"percent\" ? 33 : 55}\n      tickFormatter={number => {\n        if (number !== 0) {\n          if (dataFormat === \"percent\") {\n            return `${trim(parseFloat(number), 2)}%`;\n          } else if (dataFormat === \"k\") return `${formatCurrency(parseFloat(number) / 1000)}k`;\n          else return `${formatCurrency(parseFloat(number) / 1000000)}M`;\n        }\n        return \"\";\n      }}\n      domain={[0, \"auto\"]}\n      connectNulls={true}\n      allowDataOverflow={false}\n    />\n    <Tooltip\n      formatter={value => trim(parseFloat(value), 2)}\n      content={<CustomTooltip bulletpointColors={bulletpointColors} itemNames={itemNames} itemType={itemType} />}\n    />\n    <Area\n      dataKey={dataKey[0]}\n      stroke={stroke ? stroke[0] : \"none\"}\n      fill={`url(#color-${dataKey[0]})`}\n      fillOpacity={1}\n      stackId=\"1\"\n    />\n    <Area\n      dataKey={dataKey[1]}\n      stroke={stroke ? stroke[1] : \"none\"}\n      fill={`url(#color-${dataKey[1]})`}\n      fillOpacity={1}\n      stackId=\"1\"\n    />\n    <Area\n      dataKey={dataKey[2]}\n      stroke={stroke ? stroke[2] : \"none\"}\n      fill={`url(#color-${dataKey[2]})`}\n      fillOpacity={1}\n      stackId=\"1\"\n    />\n    <Area\n      dataKey={dataKey[3]}\n      stroke={stroke ? stroke[3] : \"none\"}\n      fill={`url(#color-${dataKey[3]})`}\n      fillOpacity={1}\n      stackId=\"1\"\n    />\n    <Area\n      dataKey={dataKey[4]}\n      stroke={stroke ? stroke[4] : \"none\"}\n      fill={`url(#color-${dataKey[4]})`}\n      fillOpacity={1}\n      stackId=\"1\"\n    />\n    {renderExpandedChartStroke(isExpanded, expandedGraphStrokeColor)}\n  </AreaChart>\n);\n\nconst renderLineChart = (\n  data,\n  dataKey,\n  stroke,\n  color,\n  dataFormat,\n  bulletpointColors,\n  itemNames,\n  itemType,\n  isExpanded,\n  expandedGraphStrokeColor,\n  scale,\n) => (\n  <LineChart data={data}>\n    <XAxis\n      dataKey=\"timestamp\"\n      interval={100}\n      axisLine={false}\n      tickCount={3}\n      tickLine={false}\n      reversed={true}\n      connectNulls={true}\n      tickFormatter={str => format(new Date(str * 1000), \"MMM dd\")}\n      padding={{ right: 20 }}\n    />\n    <YAxis\n      tickCount={scale == \"log\" ? 1 : isExpanded ? expandedTickCount : tickCount}\n      axisLine={false}\n      tickLine={false}\n      width={32}\n      scale={scale}\n      tickFormatter={number =>\n        number !== 0 ? (dataFormat !== \"percent\" ? `${number}` : `${parseFloat(number) / 1000}k`) : \"\"\n      }\n      domain={[scale == \"log\" ? \"dataMin\" : 0, \"auto\"]}\n      connectNulls={true}\n      allowDataOverflow={false}\n    />\n    <Tooltip\n      content={<CustomTooltip bulletpointColors={bulletpointColors} itemNames={itemNames} itemType={itemType} />}\n    />\n    <Line type=\"monotone\" dataKey={dataKey[0]} stroke={stroke ? stroke : \"none\"} color={color} dot={false} />;\n    {renderExpandedChartStroke(isExpanded, expandedGraphStrokeColor)}\n  </LineChart>\n);\n\nconst renderMultiLineChart = (\n  data,\n  dataKey,\n  color,\n  stroke,\n  dataFormat,\n  bulletpointColors,\n  itemNames,\n  itemType,\n  isExpanded,\n  expandedGraphStrokeColor,\n) => (\n  <LineChart data={data}>\n    <XAxis\n      dataKey=\"timestamp\"\n      interval={30}\n      axisLine={false}\n      tickCount={3}\n      tickLine={false}\n      reversed={true}\n      connectNulls={true}\n      tickFormatter={str => format(new Date(str * 1000), \"MMM dd\")}\n      padding={{ right: 20 }}\n    />\n    <YAxis\n      tickCount={isExpanded ? expandedTickCount : tickCount}\n      axisLine={false}\n      tickLine={false}\n      width={25}\n      tickFormatter={number => (number !== 0 ? `${trim(parseFloat(number), 2)}` : \"\")}\n      domain={[0, \"auto\"]}\n      connectNulls={true}\n      allowDataOverflow={false}\n    />\n    <Tooltip\n      content={<CustomTooltip bulletpointColors={bulletpointColors} itemNames={itemNames} itemType={itemType} />}\n    />\n    <Line dataKey={dataKey[0]} stroke={stroke[0]} dot={false} />;\n    <Line dataKey={dataKey[1]} stroke={stroke[1]} dot={false} />;\n    <Line dataKey={dataKey[2]} stroke={stroke[2]} dot={false} />;\n    <Line dataKey={dataKey[3]} stroke={stroke[3]} dot={false} />;\n    {renderExpandedChartStroke(isExpanded, expandedGraphStrokeColor)}\n  </LineChart>\n);\n\n// JTBD: Bar chart for Holders\nconst renderBarChart = (\n  data,\n  dataKey,\n  stroke,\n  dataFormat,\n  bulletpointColors,\n  itemNames,\n  itemType,\n  isExpanded,\n  expandedGraphStrokeColor,\n) => (\n  <BarChart data={data}>\n    <XAxis\n      dataKey=\"timestamp\"\n      interval={30}\n      axisLine={false}\n      tickCount={tickCount}\n      tickLine={false}\n      reversed={true}\n      tickFormatter={str => format(new Date(str * 1000), \"MMM dd\")}\n      padding={{ right: 20 }}\n    />\n    <YAxis\n      axisLine={false}\n      tickLine={false}\n      tickCount={isExpanded ? expandedTickCount : tickCount}\n      width={33}\n      domain={[0, \"auto\"]}\n      allowDataOverflow={false}\n      tickFormatter={number => (number !== 0 ? number : \"\")}\n    />\n    <Tooltip\n      content={<CustomTooltip bulletpointColors={bulletpointColors} itemNames={itemNames} itemType={itemType} />}\n    />\n    <Bar dataKey={dataKey[0]} fill={stroke[0]} />\n    {renderExpandedChartStroke(isExpanded, expandedGraphStrokeColor)}\n  </BarChart>\n);\n\nfunction Chart({\n  type,\n  data,\n  scale,\n  dataKey,\n  color,\n  stopColor,\n  stroke,\n  headerText,\n  dataFormat,\n  headerSubText,\n  bulletpointColors,\n  itemNames,\n  itemType,\n  isStaked,\n  infoTooltipMessage,\n  expandedGraphStrokeColor,\n  isPOL,\n}) {\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const renderChart = (type, isExpanded) => {\n    if (type === \"line\")\n      return renderLineChart(\n        data,\n        dataKey,\n        color,\n        stroke,\n        dataFormat,\n        bulletpointColors,\n        itemNames,\n        itemType,\n        isExpanded,\n        expandedGraphStrokeColor,\n        scale,\n      );\n    if (type === \"area\")\n      return renderAreaChart(\n        data,\n        dataKey,\n        stopColor,\n        stroke,\n        dataFormat,\n        bulletpointColors,\n        itemNames,\n        itemType,\n        isStaked,\n        isExpanded,\n        expandedGraphStrokeColor,\n        isPOL,\n      );\n    if (type === \"stack\")\n      return renderStackedAreaChart(\n        data,\n        dataKey,\n        stopColor,\n        stroke,\n        dataFormat,\n        bulletpointColors,\n        itemNames,\n        itemType,\n        isExpanded,\n        expandedGraphStrokeColor,\n      );\n    if (type === \"multi\")\n      return renderMultiLineChart(\n        data,\n        dataKey,\n        color,\n        stroke,\n        dataFormat,\n        bulletpointColors,\n        itemNames,\n        itemType,\n        isExpanded,\n        expandedGraphStrokeColor,\n      );\n\n    if (type === \"bar\")\n      return renderBarChart(\n        data,\n        dataKey,\n        stroke,\n        dataFormat,\n        bulletpointColors,\n        itemNames,\n        itemType,\n        isExpanded,\n        expandedGraphStrokeColor,\n      );\n  };\n\n  useEffect(() => {\n    if (data !== null || undefined) {\n      setLoading(false);\n    }\n  }, [data]);\n\n  return loading ? (\n    <Box style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n      <CircularProgress />\n    </Box>\n  ) : (\n    <Box style={{ width: \"100%\", height: \"100%\", paddingRight: \"10px\" }}>\n      <div className=\"chart-card-header\">\n        <Box\n          display=\"flex\"\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n          style={{ width: \"100%\", overflow: \"hidden\" }}\n        >\n          <Box display=\"flex\" width=\"90%\" alignItems=\"center\">\n            <Typography\n              variant=\"h6\"\n              color=\"textSecondary\"\n              className=\"card-title-text\"\n              style={{ fontWeight: 400, overflow: \"hidden\" }}\n            >\n              {headerText}\n            </Typography>\n            <InfoTooltip message={infoTooltipMessage} />\n          </Box>\n          {/* could make this svgbutton */}\n\n          <SvgIcon\n            component={Fullscreen}\n            color=\"primary\"\n            onClick={handleOpen}\n            style={{ fontSize: \"1rem\", cursor: \"pointer\" }}\n          />\n          <ExpandedChart\n            open={open}\n            handleClose={handleClose}\n            renderChart={renderChart(type, true)}\n            uid={dataKey}\n            data={data}\n            infoTooltipMessage={infoTooltipMessage}\n            headerText={headerText}\n            headerSubText={headerSubText}\n          />\n        </Box>\n        {loading ? (\n          <Skeleton variant=\"text\" width={100} />\n        ) : (\n          <Box display=\"flex\">\n            <Typography variant=\"h4\" style={{ fontWeight: 600, marginRight: 5 }}>\n              {headerSubText}\n            </Typography>\n            <Typography variant=\"h4\" color=\"textSecondary\" style={{ fontWeight: 400 }}>\n              {type !== \"multi\" && \"Today\"}\n            </Typography>\n          </Box>\n        )}\n      </div>\n      <Box width=\"100%\" minHeight={260} minWidth={310} className=\"ohm-chart\">\n        {loading || (data && data.length > 0) ? (\n          <ResponsiveContainer minHeight={260} width=\"100%\">\n            {renderChart(type, false)}\n          </ResponsiveContainer>\n        ) : (\n          <Skeleton variant=\"rect\" width=\"100%\" height={260} />\n        )}\n      </Box>\n    </Box>\n  );\n}\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}