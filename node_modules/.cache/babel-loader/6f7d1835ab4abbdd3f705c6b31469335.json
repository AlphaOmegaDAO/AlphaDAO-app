{"ast":null,"code":"var _jsxFileName = \"C:\\\\arete\\\\AlphaDAO-react\\\\src\\\\views\\\\TreasuryDashboard\\\\TreasuryDashboard.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Paper, Grid, Typography, Box, Zoom, Container, useMediaQuery } from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { useSelector } from \"react-redux\";\nimport Chart from \"../../components/Chart/Chart.jsx\";\nimport { trim, formatCurrency } from \"../../helpers\";\nimport { treasuryDataQuery, rebasesDataQuery, bulletpoints, tooltipItems, tooltipInfoMessages, itemType } from \"./treasuryData.js\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport \"./treasury-dashboard.scss\";\nimport apollo from \"../../lib/apolloClient\";\nimport InfoTooltip from \"src/components/InfoTooltip/InfoTooltip.jsx\";\nimport Stake from \"../Stake/Stake\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TreasuryDashboard() {\n  _s();\n\n  // const [data, setData] = useState(null);\n  // const [apy, setApy] = useState(null);\n  // const [runway, setRunway] = useState(null);\n  // const [staked, setStaked] = useState(null);\n  const theme = useTheme();\n  const smallerScreen = useMediaQuery(\"(max-width: 650px)\");\n  const verySmallScreen = useMediaQuery(\"(max-width: 379px)\");\n  const marketPrice = useSelector(state => {\n    return state.app.marketPrice;\n  });\n  const circSupply = useSelector(state => {\n    return state.app.circSupply;\n  });\n  const totalSupply = useSelector(state => {\n    return state.app.totalSupply;\n  });\n  const marketCap = useSelector(state => {\n    return state.app.marketCap;\n  });\n  const currentIndex = useSelector(state => {\n    return state.app.currentIndex;\n  });\n  const backingPerOhm = useSelector(state => {\n    return state.app.treasuryMarketValue / state.app.circSupply;\n  });\n  const treasuryMarketValue = useSelector(state => {\n    return state.app.treasuryMarketValue;\n  }); // useEffect(() => {\n  //   apollo(treasuryDataQuery).then(r => {\n  //     let metrics = r.data.protocolMetrics.map(entry =>\n  //       Object.entries(entry).reduce((obj, [key, value]) => ((obj[key] = parseFloat(value)), obj), {}),\n  //     );\n  //     metrics = metrics.filter(pm => pm.treasuryMarketValue > 0);\n  //     setData(metrics);\n  //\n  //     let staked = r.data.protocolMetrics.map(entry => ({\n  //       staked: (parseFloat(entry.sOhmCirculatingSupply) / parseFloat(entry.ohmCirculatingSupply)) * 100,\n  //       timestamp: entry.timestamp,\n  //     }));\n  //     staked = staked.filter(pm => pm.staked < 100);\n  //     setStaked(staked);\n  //\n  //     let runway = metrics.filter(pm => pm.runway10k > 5);\n  //     setRunway(runway);\n  //   });\n  // apollo(rebasesDataQuery).then(r => {\n  //   let apy = r.data.rebases.map(entry => ({\n  //     apy: Math.pow(parseFloat(entry.percentage) + 1, 365 * 3) * 100,\n  //     timestamp: entry.timestamp,\n  //   }));\n  //\n  //   apy = apy.filter(pm => pm.apy < 300000);\n  //\n  //   setApy(apy);\n  // });\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"treasury-dashboard-view\",\n    className: `${smallerScreen && \"smaller\"} ${verySmallScreen && \"very-small\"}`,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        paddingLeft: smallerScreen || verySmallScreen ? \"0\" : \"3.3rem\",\n        paddingRight: smallerScreen || verySmallScreen ? \"0\" : \"3.3rem\",\n        paddingBottom: smallerScreen || verySmallScreen ? \"3.3rem\" : \"0\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        className: `hero-metrics`,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: \"ohm-card\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              className: \"metric market\",\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                color: \"textSecondary\",\n                children: \"Market Cap\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                children: [marketCap && formatCurrency(marketCap, 0), !marketCap && /*#__PURE__*/_jsxDEV(Skeleton, {\n                  type: \"text\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 34\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              className: \"metric price\",\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                color: \"textSecondary\",\n                children: \"OX Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                children: marketPrice ? formatCurrency(marketPrice, 2) : /*#__PURE__*/_jsxDEV(Skeleton, {\n                  type: \"text\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 67\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              className: \"metric circ\",\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                color: \"textSecondary\",\n                children: \"Circulating Supply (total)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                children: circSupply && totalSupply ? parseInt(circSupply) + \" / \" + parseInt(totalSupply) : /*#__PURE__*/_jsxDEV(Skeleton, {\n                  type: \"text\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              className: \"metric bpo\",\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                color: \"textSecondary\",\n                children: \"Backing per OX\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                children: backingPerOhm ? formatCurrency(backingPerOhm, 2) : /*#__PURE__*/_jsxDEV(Skeleton, {\n                  type: \"text\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 71\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              className: \"metric wsoprice\",\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                color: \"textSecondary\",\n                children: \"Treasury Balance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                children: treasuryMarketValue ? formatCurrency(treasuryMarketValue, 2) : /*#__PURE__*/_jsxDEV(Skeleton, {\n                  type: \"text\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 83\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              className: \"metric index\",\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                color: \"textSecondary\",\n                children: \"Current Index\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                children: currentIndex ? trim(currentIndex, 2) + \" sOX\" : /*#__PURE__*/_jsxDEV(Skeleton, {\n                  type: \"text\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 68\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TreasuryDashboard, \"ZiCL3zuDYew3VqE7W/Gf3cCvmsg=\", false, function () {\n  return [useTheme, useMediaQuery, useMediaQuery, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = TreasuryDashboard;\nexport default TreasuryDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"TreasuryDashboard\");","map":{"version":3,"sources":["C:/arete/AlphaDAO-react/src/views/TreasuryDashboard/TreasuryDashboard.jsx"],"names":["useEffect","useState","Paper","Grid","Typography","Box","Zoom","Container","useMediaQuery","Skeleton","useSelector","Chart","trim","formatCurrency","treasuryDataQuery","rebasesDataQuery","bulletpoints","tooltipItems","tooltipInfoMessages","itemType","useTheme","apollo","InfoTooltip","Stake","TreasuryDashboard","theme","smallerScreen","verySmallScreen","marketPrice","state","app","circSupply","totalSupply","marketCap","currentIndex","backingPerOhm","treasuryMarketValue","paddingLeft","paddingRight","paddingBottom","parseInt"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Paper, Grid, Typography, Box, Zoom, Container, useMediaQuery } from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { useSelector } from \"react-redux\";\nimport Chart from \"../../components/Chart/Chart.jsx\";\nimport { trim, formatCurrency } from \"../../helpers\";\nimport {\n  treasuryDataQuery,\n  rebasesDataQuery,\n  bulletpoints,\n  tooltipItems,\n  tooltipInfoMessages,\n  itemType,\n} from \"./treasuryData.js\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport \"./treasury-dashboard.scss\";\nimport apollo from \"../../lib/apolloClient\";\nimport InfoTooltip from \"src/components/InfoTooltip/InfoTooltip.jsx\";\nimport Stake from \"../Stake/Stake\";\n\nfunction TreasuryDashboard() {\n  // const [data, setData] = useState(null);\n  // const [apy, setApy] = useState(null);\n  // const [runway, setRunway] = useState(null);\n  // const [staked, setStaked] = useState(null);\n  const theme = useTheme();\n  const smallerScreen = useMediaQuery(\"(max-width: 650px)\");\n  const verySmallScreen = useMediaQuery(\"(max-width: 379px)\");\n\n  const marketPrice = useSelector(state => {\n    return state.app.marketPrice;\n  });\n  const circSupply = useSelector(state => {\n    return state.app.circSupply;\n  });\n  const totalSupply = useSelector(state => {\n    return state.app.totalSupply;\n  });\n  const marketCap = useSelector(state => {\n    return state.app.marketCap;\n  });\n\n  const currentIndex = useSelector(state => {\n    return state.app.currentIndex;\n  });\n\n  const backingPerOhm = useSelector(state => {\n    return state.app.treasuryMarketValue / state.app.circSupply;\n  });\n\n  const treasuryMarketValue = useSelector(state => {\n    return state.app.treasuryMarketValue;\n  });\n\n  // useEffect(() => {\n  //   apollo(treasuryDataQuery).then(r => {\n  //     let metrics = r.data.protocolMetrics.map(entry =>\n  //       Object.entries(entry).reduce((obj, [key, value]) => ((obj[key] = parseFloat(value)), obj), {}),\n  //     );\n  //     metrics = metrics.filter(pm => pm.treasuryMarketValue > 0);\n  //     setData(metrics);\n  //\n  //     let staked = r.data.protocolMetrics.map(entry => ({\n  //       staked: (parseFloat(entry.sOhmCirculatingSupply) / parseFloat(entry.ohmCirculatingSupply)) * 100,\n  //       timestamp: entry.timestamp,\n  //     }));\n  //     staked = staked.filter(pm => pm.staked < 100);\n  //     setStaked(staked);\n  //\n  //     let runway = metrics.filter(pm => pm.runway10k > 5);\n  //     setRunway(runway);\n  //   });\n\n  // apollo(rebasesDataQuery).then(r => {\n  //   let apy = r.data.rebases.map(entry => ({\n  //     apy: Math.pow(parseFloat(entry.percentage) + 1, 365 * 3) * 100,\n  //     timestamp: entry.timestamp,\n  //   }));\n  //\n  //   apy = apy.filter(pm => pm.apy < 300000);\n  //\n  //   setApy(apy);\n  // });\n  // }, []);\n\n  return (\n    <div id=\"treasury-dashboard-view\" className={`${smallerScreen && \"smaller\"} ${verySmallScreen && \"very-small\"}`}>\n      <Container\n        style={{\n          paddingLeft: smallerScreen || verySmallScreen ? \"0\" : \"3.3rem\",\n          paddingRight: smallerScreen || verySmallScreen ? \"0\" : \"3.3rem\",\n          paddingBottom: smallerScreen || verySmallScreen ? \"3.3rem\" : \"0\",\n        }}\n      >\n        <Box className={`hero-metrics`}>\n          <Paper className=\"ohm-card\">\n            <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"space-between\" alignItems=\"center\">\n              <Box className=\"metric market\">\n                <Typography variant=\"h6\" color=\"textSecondary\">\n                  Market Cap\n                </Typography>\n                <Typography variant=\"h5\">\n                  {marketCap && formatCurrency(marketCap, 0)}\n                  {!marketCap && <Skeleton type=\"text\" />}\n                </Typography>\n              </Box>\n\n              <Box className=\"metric price\">\n                <Typography variant=\"h6\" color=\"textSecondary\">\n                  OX Price\n                </Typography>\n                <Typography variant=\"h5\">\n                  {/* appleseed-fix */}\n                  {marketPrice ? formatCurrency(marketPrice, 2) : <Skeleton type=\"text\" />}\n                </Typography>\n              </Box>\n\n              <Box className=\"metric circ\">\n                <Typography variant=\"h6\" color=\"textSecondary\">\n                  Circulating Supply (total)\n                </Typography>\n                <Typography variant=\"h5\">\n                  {circSupply && totalSupply ? (\n                    parseInt(circSupply) + \" / \" + parseInt(totalSupply)\n                  ) : (\n                    <Skeleton type=\"text\" />\n                  )}\n                </Typography>\n              </Box>\n\n              <Box className=\"metric bpo\">\n                <Typography variant=\"h6\" color=\"textSecondary\">\n                  Backing per OX\n                </Typography>\n                <Typography variant=\"h5\">\n                  {backingPerOhm ? formatCurrency(backingPerOhm, 2) : <Skeleton type=\"text\" />}\n                </Typography>\n              </Box>\n\n              <Box className=\"metric wsoprice\">\n                <Typography variant=\"h6\" color=\"textSecondary\">\n                  Treasury Balance\n                  {/*<InfoTooltip*/}\n                  {/*  message={*/}\n                  {/*    \"wsOHM = sOHM * index\\n\\nThe price of wsOHM is equal to the price of OHM multiplied by the current index\"*/}\n                  {/*  }*/}\n                  {/*/>*/}\n                </Typography>\n\n                <Typography variant=\"h5\">\n                  {treasuryMarketValue ? formatCurrency(treasuryMarketValue, 2) : <Skeleton type=\"text\" />}\n                </Typography>\n              </Box>\n\n              <Box className=\"metric index\">\n                <Typography variant=\"h6\" color=\"textSecondary\">\n                  Current Index\n                  {/*<InfoTooltip*/}\n                  {/*  message={*/}\n                  {/*    \"The current index tracks the amount of sOHM accumulated since the beginning of staking. Basically, how much sOX one would have if they staked and held a single OX from day 1.\"*/}\n                  {/*  }*/}\n                  {/*/>*/}\n                </Typography>\n                <Typography variant=\"h5\">\n                  {currentIndex ? trim(currentIndex, 2) + \" sOX\" : <Skeleton type=\"text\" />}\n                </Typography>\n              </Box>\n            </Box>\n          </Paper>\n        </Box>\n\n        {/*<Zoom in={true}>*/}\n        {/*  <Grid container spacing={2} className=\"data-grid\">*/}\n        {/*<Grid item lg={6} md={6} sm={12} xs={12}>*/}\n        {/*  <Paper className=\"ohm-card ohm-chart-card\">*/}\n        {/*    <Chart*/}\n        {/*      type=\"area\"*/}\n        {/*      data={data}*/}\n        {/*      dataKey={[\"totalValueLocked\"]}*/}\n        {/*      stopColor={[[\"#768299\", \"#98B3E9\"]]}*/}\n        {/*      headerText=\"Total Value Deposited\"*/}\n        {/*      headerSubText={`${data && formatCurrency(data[0].totalValueLocked)}`}*/}\n        {/*      bulletpointColors={bulletpoints.tvl}*/}\n        {/*      itemNames={tooltipItems.tvl}*/}\n        {/*      itemType={itemType.dollar}*/}\n        {/*      infoTooltipMessage={tooltipInfoMessages.tvl}*/}\n        {/*      expandedGraphStrokeColor={theme.palette.graphStrokeColor}*/}\n        {/*    />*/}\n        {/*  </Paper>*/}\n        {/*</Grid>*/}\n\n        {/*<Grid item lg={6} md={6} sm={12} xs={12}>*/}\n        {/*  <Paper className=\"ohm-card ohm-chart-card\">*/}\n        {/*    <Chart*/}\n        {/*      type=\"stack\"*/}\n        {/*      data={data}*/}\n        {/*      dataKey={[*/}\n        {/*        \"treasuryDaiMarketValue\",*/}\n        {/*        \"treasuryFraxMarketValue\",*/}\n        {/*        \"treasuryWETHMarketValue\",*/}\n        {/*        \"treasuryXsushiMarketValue\",*/}\n        {/*      ]}*/}\n        {/*      stopColor={[*/}\n        {/*        [\"#F5AC37\", \"#EA9276\"],*/}\n        {/*        [\"#768299\", \"#98B3E9\"],*/}\n        {/*        [\"#DC30EB\", \"#EA98F1\"],*/}\n        {/*        [\"#8BFF4D\", \"#4C8C2A\"],*/}\n        {/*      ]}*/}\n        {/*      headerText=\"Market Value of Treasury Assets\"*/}\n        {/*      headerSubText={`${data && formatCurrency(data[0].treasuryMarketValue)}`}*/}\n        {/*      bulletpointColors={bulletpoints.coin}*/}\n        {/*      itemNames={tooltipItems.coin}*/}\n        {/*      itemType={itemType.dollar}*/}\n        {/*      infoTooltipMessage={tooltipInfoMessages.mvt}*/}\n        {/*      expandedGraphStrokeColor={theme.palette.graphStrokeColor}*/}\n        {/*    />*/}\n        {/*  </Paper>*/}\n        {/*</Grid>*/}\n\n        {/*<Grid item lg={6} md={6} sm={12} xs={12}>*/}\n        {/*  <Paper className=\"ohm-card ohm-chart-card\">*/}\n        {/*    <Chart*/}\n        {/*      type=\"stack\"*/}\n        {/*      data={data}*/}\n        {/*      format=\"currency\"*/}\n        {/*      dataKey={[\"treasuryDaiRiskFreeValue\", \"treasuryFraxRiskFreeValue\"]}*/}\n        {/*      stopColor={[*/}\n        {/*        [\"#F5AC37\", \"#EA9276\"],*/}\n        {/*        [\"#768299\", \"#98B3E9\"],*/}\n        {/*        [\"#000\", \"#fff\"],*/}\n        {/*        [\"#000\", \"#fff\"],*/}\n        {/*      ]}*/}\n        {/*      headerText=\"Risk Free Value of Treasury Assets\"*/}\n        {/*      headerSubText={`${data && formatCurrency(data[0].treasuryRiskFreeValue)}`}*/}\n        {/*      bulletpointColors={bulletpoints.coin}*/}\n        {/*      itemNames={tooltipItems.coin}*/}\n        {/*      itemType={itemType.dollar}*/}\n        {/*      infoTooltipMessage={tooltipInfoMessages.rfv}*/}\n        {/*      expandedGraphStrokeColor={theme.palette.graphStrokeColor}*/}\n        {/*    />*/}\n        {/*  </Paper>*/}\n        {/*</Grid>*/}\n\n        {/*<Grid item lg={6} md={6} sm={12} xs={12}>*/}\n        {/*  <Paper className=\"ohm-card\">*/}\n        {/*    <Chart*/}\n        {/*      type=\"area\"*/}\n        {/*      data={data}*/}\n        {/*      dataKey={[\"treasuryOhmDaiPOL\"]}*/}\n        {/*      stopColor={[[\"rgba(128, 204, 131, 1)\", \"rgba(128, 204, 131, 0)\"]]}*/}\n        {/*      headerText=\"Protocol Owned Liquidity OHM-DAI\"*/}\n        {/*      headerSubText={`${data && trim(data[0].treasuryOhmDaiPOL, 2)}% `}*/}\n        {/*      dataFormat=\"percent\"*/}\n        {/*      bulletpointColors={bulletpoints.pol}*/}\n        {/*      itemNames={tooltipItems.pol}*/}\n        {/*      itemType={itemType.percentage}*/}\n        {/*      infoTooltipMessage={tooltipInfoMessages.pol}*/}\n        {/*      expandedGraphStrokeColor={theme.palette.graphStrokeColor}*/}\n        {/*      isPOL={true}*/}\n        {/*    />*/}\n        {/*  </Paper>*/}\n        {/*</Grid>*/}\n        {/*  Temporarily removed until correct data is in the graph */}\n        {/* <Grid item lg={6} md={12} sm={12} xs={12}>\n              <Paper className=\"ohm-card\">\n                <Chart\n                  type=\"bar\"\n                  data={data}\n                  dataKey={[\"holders\"]}\n                  headerText=\"Holders\"\n                  stroke={[theme.palette.text.secondary]}\n                  headerSubText={`${data && data[0].holders}`}\n                  bulletpointColors={bulletpoints.holder}\n                  itemNames={tooltipItems.holder}\n                  itemType={\"\"}\n                  infoTooltipMessage={tooltipInfoMessages.holder}\n                  expandedGraphStrokeColor={theme.palette.graphStrokeColor}\n                />\n              </Paper>\n            </Grid> */}\n\n        {/*<Grid item lg={6} md={6} sm={12} xs={12}>*/}\n        {/*  <Paper className=\"ohm-card\">*/}\n        {/*    <Chart*/}\n        {/*      type=\"area\"*/}\n        {/*      data={staked}*/}\n        {/*      dataKey={[\"staked\"]}*/}\n        {/*      stopColor={[[\"#55EBC7\", \"#47ACEB\"]]}*/}\n        {/*      headerText=\"OHM Staked\"*/}\n        {/*      dataFormat=\"percent\"*/}\n        {/*      headerSubText={`${staked && trim(staked[0].staked, 2)}% `}*/}\n        {/*      isStaked={true}*/}\n        {/*      bulletpointColors={bulletpoints.staked}*/}\n        {/*      infoTooltipMessage={tooltipInfoMessages.staked}*/}\n        {/*      expandedGraphStrokeColor={theme.palette.graphStrokeColor}*/}\n        {/*    />*/}\n        {/*  </Paper>*/}\n        {/*</Grid>*/}\n\n        {/*<Grid item lg={6} md={6} sm={12} xs={12}>*/}\n        {/*  <Paper className=\"ohm-card\">*/}\n        {/*    <Chart*/}\n        {/*      type=\"line\"*/}\n        {/*      scale=\"log\"*/}\n        {/*      data={apy}*/}\n        {/*      dataKey={[\"apy\"]}*/}\n        {/*      color={theme.palette.text.primary}*/}\n        {/*      stroke={[theme.palette.text.primary]}*/}\n        {/*      headerText=\"APY over time\"*/}\n        {/*      dataFormat=\"percent\"*/}\n        {/*      headerSubText={`${apy && trim(apy[0].apy, 2)}%`}*/}\n        {/*      bulletpointColors={bulletpoints.apy}*/}\n        {/*      itemNames={tooltipItems.apy}*/}\n        {/*      itemType={itemType.percentage}*/}\n        {/*      infoTooltipMessage={tooltipInfoMessages.apy}*/}\n        {/*      expandedGraphStrokeColor={theme.palette.graphStrokeColor}*/}\n        {/*    />*/}\n        {/*  </Paper>*/}\n        {/*</Grid>*/}\n\n        {/*<Grid item lg={6} md={6} sm={12} xs={12}>*/}\n        {/*  <Paper className=\"ohm-card\">*/}\n        {/*    <Chart*/}\n        {/*      type=\"line\"*/}\n        {/*      data={runway}*/}\n        {/*      dataKey={[\"runwayCurrent\"]}*/}\n        {/*      color={theme.palette.text.primary}*/}\n        {/*      stroke={[theme.palette.text.primary]}*/}\n        {/*      headerText=\"Runway Available\"*/}\n        {/*      headerSubText={`${data && trim(data[0].runwayCurrent, 1)} Days`}*/}\n        {/*      dataFormat=\"days\"*/}\n        {/*      bulletpointColors={bulletpoints.runway}*/}\n        {/*      itemNames={tooltipItems.runway}*/}\n        {/*      itemType={\"\"}*/}\n        {/*      infoTooltipMessage={tooltipInfoMessages.runway}*/}\n        {/*      expandedGraphStrokeColor={theme.palette.graphStrokeColor}*/}\n        {/*    />*/}\n        {/*  </Paper>*/}\n        {/*</Grid>*/}\n        {/*  </Grid>*/}\n        {/*</Zoom>*/}\n      </Container>\n    </div>\n  );\n}\n\nexport default TreasuryDashboard;\n"]},"metadata":{},"sourceType":"module"}