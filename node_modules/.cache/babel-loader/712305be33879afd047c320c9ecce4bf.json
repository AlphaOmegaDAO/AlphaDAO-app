{"ast":null,"code":"var _jsxFileName = \"C:\\\\arete\\\\AlphaDAO-react\\\\src\\\\components\\\\Messages\\\\Messages.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { close, handle_obsolete } from \"../../slices/MessagesSlice\";\nimport store from \"../../store\";\nimport { LinearProgress, Snackbar, makeStyles } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport AlertTitle from \"@material-ui/lab/AlertTitle\";\nimport \"./ConsoleInterceptor.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    marginTop: \"10px\"\n  }\n});\n\nfunction Linear({\n  message\n}) {\n  _s();\n\n  const [progress, setProgress] = useState(100);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setProgress(oldProgress => {\n        if (oldProgress === 0) {\n          clearInterval(timer);\n          dispatch(close(message));\n          return 0;\n        }\n\n        const diff = oldProgress - 5;\n        return diff;\n      });\n    }, 333);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(LinearProgress, {\n      variant: \"determinate\",\n      value: progress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n} // A component that displays error messages\n\n\n_s(Linear, \"rjEo8BdzZsfyTez+Ofs0ZRrf5Ms=\", false, function () {\n  return [useStyles, useDispatch];\n});\n\n_c = Linear;\n\nfunction Messages() {\n  _s2();\n\n  const messages = useSelector(state => state.messages);\n  const dispatch = useDispatch(); // Returns a function that can closes a message\n\n  const handleClose = function (message) {\n    return function () {\n      dispatch(close(message));\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.items.map((message, index) => {\n        return /*#__PURE__*/_jsxDEV(Snackbar, {\n          open: message.open,\n          anchorOrigin: {\n            vertical: \"top\",\n            horizontal: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"filled\",\n            icon: false,\n            severity: message.severity,\n            onClose: handleClose(message) // NOTE (appleseed): mui includes overflow-wrap: \"break-word\", but word-break: \"break-word\" is needed for webKit browsers\n            ,\n            style: {\n              wordBreak: \"break-word\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(AlertTitle, {\n              children: message.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), message.text, /*#__PURE__*/_jsxDEV(Linear, {\n              message: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n  return res;\n} // Invoke repetedly obsolete messages deletion (should be in slice file but I cannot find a way to access the store from there)\n\n\n_s2(Messages, \"6EthepQ+i9gmQhJtC+mMO/Ncn/8=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c2 = Messages;\nwindow.setInterval(() => {\n  store.dispatch(handle_obsolete());\n}, 60000);\nexport default Messages;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Linear\");\n$RefreshReg$(_c2, \"Messages\");","map":{"version":3,"sources":["C:/arete/AlphaDAO-react/src/components/Messages/Messages.jsx"],"names":["useState","useEffect","useDispatch","useSelector","close","handle_obsolete","store","LinearProgress","Snackbar","makeStyles","Alert","AlertTitle","useStyles","root","width","marginTop","Linear","message","progress","setProgress","classes","dispatch","timer","setInterval","oldProgress","clearInterval","diff","Messages","messages","state","handleClose","items","map","index","open","vertical","horizontal","severity","wordBreak","title","text","res","window"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { close, handle_obsolete } from \"../../slices/MessagesSlice\";\nimport store from \"../../store\";\nimport { LinearProgress, Snackbar, makeStyles } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport AlertTitle from \"@material-ui/lab/AlertTitle\";\nimport \"./ConsoleInterceptor.js\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    marginTop: \"10px\",\n  },\n});\n\nfunction Linear({ message }) {\n  const [progress, setProgress] = useState(100);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setProgress(oldProgress => {\n        if (oldProgress === 0) {\n          clearInterval(timer);\n          dispatch(close(message));\n          return 0;\n        }\n        const diff = oldProgress - 5;\n        return diff;\n      });\n    }, 333);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <LinearProgress variant=\"determinate\" value={progress} />\n    </div>\n  );\n}\n\n// A component that displays error messages\nfunction Messages() {\n  const messages = useSelector(state => state.messages);\n  const dispatch = useDispatch();\n  // Returns a function that can closes a message\n  const handleClose = function (message) {\n    return function () {\n      dispatch(close(message));\n    };\n  };\n  return (\n    <div>\n      <div>\n        {messages.items.map((message, index) => {\n          return (\n            <Snackbar open={message.open} key={index} anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}>\n              <Alert\n                variant=\"filled\"\n                icon={false}\n                severity={message.severity}\n                onClose={handleClose(message)}\n                // NOTE (appleseed): mui includes overflow-wrap: \"break-word\", but word-break: \"break-word\" is needed for webKit browsers\n                style={{ wordBreak: \"break-word\" }}\n              >\n                <AlertTitle>{message.title}</AlertTitle>\n                {message.text}\n                <Linear message={message} />\n              </Alert>\n            </Snackbar>\n          );\n        })}\n      </div>\n    </div>\n  );\n  return res;\n}\n// Invoke repetedly obsolete messages deletion (should be in slice file but I cannot find a way to access the store from there)\nwindow.setInterval(() => {\n  store.dispatch(handle_obsolete());\n}, 60000);\nexport default Messages;\n"]},"metadata":{},"sourceType":"module"}