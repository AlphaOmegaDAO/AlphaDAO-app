{"ast":null,"code":"import { ApolloClient, InMemoryCache, gql } from \"@apollo/client\";\nimport { THE_GRAPH_URL } from \"../constants\";\n\nconst client = () => new ApolloClient({\n  uri: THE_GRAPH_URL,\n  cache: new InMemoryCache()\n});\n\nconst apollo = queryString => {\n  return client().query({\n    query: gql(queryString)\n  }).then(data => {\n    return data;\n  }).catch(err => console.error(\"qraph ql error: \", err));\n};\n\nconst extClient = uri => new ApolloClient({\n  uri: uri,\n  cache: new InMemoryCache()\n});\n\nexport const apolloExt = (queryString, uri) => {\n  return extClient(uri).query({\n    query: gql(queryString)\n  }).then(data => {\n    return data;\n  }).catch(err => console.error(\"external graph ql api error: \", err));\n};\nexport default apollo;","map":{"version":3,"sources":["C:/arete/AlphaDAO-react/src/lib/apolloClient.js"],"names":["ApolloClient","InMemoryCache","gql","THE_GRAPH_URL","client","uri","cache","apollo","queryString","query","then","data","catch","err","console","error","extClient","apolloExt"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,EAAsCC,GAAtC,QAAiD,gBAAjD;AACA,SAASC,aAAT,QAA8B,cAA9B;;AAEA,MAAMC,MAAM,GAAG,MACb,IAAIJ,YAAJ,CAAiB;AACfK,EAAAA,GAAG,EAAEF,aADU;AAEfG,EAAAA,KAAK,EAAE,IAAIL,aAAJ;AAFQ,CAAjB,CADF;;AAMA,MAAMM,MAAM,GAAGC,WAAW,IAAI;AAC5B,SAAOJ,MAAM,GACVK,KADI,CACE;AACLA,IAAAA,KAAK,EAAEP,GAAG,CAACM,WAAD;AADL,GADF,EAIJE,IAJI,CAICC,IAAI,IAAI;AACZ,WAAOA,IAAP;AACD,GANI,EAOJC,KAPI,CAOEC,GAAG,IAAIC,OAAO,CAACC,KAAR,CAAc,kBAAd,EAAkCF,GAAlC,CAPT,CAAP;AAQD,CATD;;AAWA,MAAMG,SAAS,GAAGX,GAAG,IACnB,IAAIL,YAAJ,CAAiB;AACfK,EAAAA,GAAG,EAAEA,GADU;AAEfC,EAAAA,KAAK,EAAE,IAAIL,aAAJ;AAFQ,CAAjB,CADF;;AAMA,OAAO,MAAMgB,SAAS,GAAG,CAACT,WAAD,EAAcH,GAAd,KAAsB;AAC7C,SAAOW,SAAS,CAACX,GAAD,CAAT,CACJI,KADI,CACE;AACLA,IAAAA,KAAK,EAAEP,GAAG,CAACM,WAAD;AADL,GADF,EAIJE,IAJI,CAICC,IAAI,IAAI;AACZ,WAAOA,IAAP;AACD,GANI,EAOJC,KAPI,CAOEC,GAAG,IAAIC,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CF,GAA/C,CAPT,CAAP;AAQD,CATM;AAWP,eAAeN,MAAf","sourcesContent":["import { ApolloClient, InMemoryCache, gql } from \"@apollo/client\";\nimport { THE_GRAPH_URL } from \"../constants\";\n\nconst client = () =>\n  new ApolloClient({\n    uri: THE_GRAPH_URL,\n    cache: new InMemoryCache(),\n  });\n\nconst apollo = queryString => {\n  return client()\n    .query({\n      query: gql(queryString),\n    })\n    .then(data => {\n      return data;\n    })\n    .catch(err => console.error(\"qraph ql error: \", err));\n};\n\nconst extClient = uri =>\n  new ApolloClient({\n    uri: uri,\n    cache: new InMemoryCache(),\n  });\n\nexport const apolloExt = (queryString, uri) => {\n  return extClient(uri)\n    .query({\n      query: gql(queryString),\n    })\n    .then(data => {\n      return data;\n    })\n    .catch(err => console.error(\"external graph ql api error: \", err));\n};\n\nexport default apollo;\n"]},"metadata":{},"sourceType":"module"}