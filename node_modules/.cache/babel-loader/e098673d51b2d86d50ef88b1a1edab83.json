{"ast":null,"code":"var _jsxFileName = \"C:\\\\arete\\\\AlphaDAO-react\\\\src\\\\views\\\\33Together\\\\PoolDeposit.jsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Box, Button, FormControl, InputAdornment, InputLabel, OutlinedInput, Typography, useMediaQuery } from \"@material-ui/core\";\nimport ConnectButton from \"../../components/ConnectButton.jsx\";\nimport { useWeb3Context } from \"../../hooks\";\nimport { getTokenImage } from \"src/helpers/index\";\nimport { trim } from \"src/helpers\";\nimport { calculateOdds } from \"../../helpers/33Together\";\nimport { isPendingTxn, txnButtonText } from \"../../slices/PendingTxnsSlice\";\nimport { changeApproval, poolDeposit } from \"../../slices/PoolThunk\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { error } from \"../../slices/MessagesSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst sohmImg = getTokenImage(\"sohm\");\nexport const PoolDeposit = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    provider,\n    address,\n    chainID\n  } = useWeb3Context();\n  const [quantity, setQuantity] = useState(0);\n  const [newOdds, setNewOdds] = useState(0);\n  const [rngCompleted, setRngCompleted] = useState(false);\n  const isAppLoading = useSelector(state => state.app.loading);\n  const isMobileScreen = useMediaQuery(\"(max-width: 513px)\");\n  const sohmBalance = useSelector(state => {\n    return state.account.balances && state.account.balances.sohm;\n  });\n  const poolBalance = useSelector(state => {\n    return state.account.balances && parseFloat(state.account.balances.pool);\n  });\n  const poolAllowance = useSelector(state => {\n    return state.account.pooling && state.account.pooling.sohmPool;\n  });\n  const pendingTransactions = useSelector(state => {\n    return state.pendingTransactions;\n  });\n  const poolIsLocked = useSelector(state => {\n    return state.poolData && state.poolData.isRngRequested;\n  });\n\n  const onSeekApproval = async token => {\n    await dispatch(changeApproval({\n      address,\n      token,\n      provider,\n      networkID: chainID\n    }));\n  };\n\n  const onDeposit = async action => {\n    // eslint-disable-next-line no-restricted-globals\n    if (isNaN(quantity) || quantity === 0 || quantity === \"\") {\n      // eslint-disable-next-line no-alert\n      dispatch(error(\"Please enter a value!\"));\n    } else {\n      await dispatch(poolDeposit({\n        address,\n        action,\n        value: quantity.toString(),\n        provider,\n        networkID: chainID\n      }));\n    }\n  };\n\n  const hasAllowance = useCallback(() => {\n    return poolAllowance > 0;\n  }, [poolAllowance]);\n\n  const setMax = () => {\n    const value = parseFloat(sohmBalance);\n    setQuantity(value);\n    let userBalanceAfterDeposit = poolBalance + value;\n    let userOdds = calculateOdds(userBalanceAfterDeposit, props.totalPoolDeposits + value, props.winners);\n    setNewOdds(trim(userOdds, 4));\n  };\n\n  const updateDepositQuantity = e => {\n    const value = parseFloat(e.target.value);\n    setQuantity(value);\n    let userBalanceAfterDeposit = poolBalance + value;\n    let userOdds = calculateOdds(userBalanceAfterDeposit, props.totalPoolDeposits + value, props.winners);\n    setNewOdds(trim(userOdds, 4));\n  };\n\n  useEffect(() => {\n    props.setInfoTooltipMessage([\"Deposit sOHM to win! Once deposited, you will receive a corresponding amount of 33T and be entered to win until your sOHM is withdrawn.\"]);\n  }, []);\n\n  if (poolIsLocked) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      className: \"pool-deposit-ui\",\n      flexDirection: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"This Prize Pool is unable to accept deposits at this time.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        style: {\n          marginTop: \"0.5rem\"\n        },\n        children: \"Deposits can be made once the prize has been awarded.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        style: {\n          marginTop: \"0.5rem\"\n        },\n        children: \"Check back soon!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    className: \"pool-deposit-ui\",\n    children: !address ? /*#__PURE__*/_jsxDEV(ConnectButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Box, {\n      className: \"deposit-container\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        alignItems: \"center\",\n        flexDirection: `${isMobileScreen ? \"column\" : \"row\"}`,\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"ohm-input\",\n          variant: \"outlined\",\n          color: \"primary\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"amount-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n            id: \"amount-input\",\n            type: \"number\",\n            placeholder: \"Enter an amount\",\n            className: \"pool-input\",\n            value: quantity,\n            onChange: e => updateDepositQuantity(e),\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"logo-holder\",\n                children: sohmImg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 19\n            }, this),\n            labelWidth: 0,\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"text\",\n                onClick: setMax,\n                children: \"Max\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), address && hasAllowance(\"sohm\") ? /*#__PURE__*/_jsxDEV(Button, {\n          className: \"pool-deposit-button\",\n          variant: \"contained\",\n          color: \"primary\",\n          disabled: isPendingTxn(pendingTransactions, \"pool_deposit\"),\n          onClick: () => onDeposit(\"deposit\"),\n          fullWidth: true,\n          children: txnButtonText(pendingTransactions, \"pool_deposit\", \"Deposit sOHM\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          className: \"pool-deposit-button\",\n          variant: \"contained\",\n          color: \"primary\",\n          disabled: isPendingTxn(pendingTransactions, \"approve_pool_together\"),\n          onClick: () => onSeekApproval(\"sohm\"),\n          children: txnButtonText(pendingTransactions, \"approve_pool_together\", \"Approve\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), newOdds > 0 && quantity > 0 && /*#__PURE__*/_jsxDEV(Box, {\n        padding: 1,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          style: {\n            color: \"#33BB33\"\n          },\n          children: [\"Depositing \", quantity, \" sOHM will increase odds of winning to 1 in \", newOdds, \"\\xA0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `stake-user-data`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-row\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            align: \"left\",\n            children: \"Your Staked Balance (depositable)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            align: \"right\",\n            children: isAppLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n              width: \"80px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [new Intl.NumberFormat(\"en-US\").format(sohmBalance), \" sOHM\"]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PoolDeposit, \"TLqbm92zxdwvc+Op9q2JgiLF4rw=\", false, function () {\n  return [useDispatch, useWeb3Context, useSelector, useMediaQuery, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = PoolDeposit;\nPoolDeposit.propTypes = {\n  totalPoolDeposits: PropTypes.number,\n  winners: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  setInfoTooltipMessage: PropTypes.func\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"PoolDeposit\");","map":{"version":3,"sources":["C:/arete/AlphaDAO-react/src/views/33Together/PoolDeposit.jsx"],"names":["useCallback","useState","useEffect","PropTypes","useDispatch","useSelector","Box","Button","FormControl","InputAdornment","InputLabel","OutlinedInput","Typography","useMediaQuery","ConnectButton","useWeb3Context","getTokenImage","trim","calculateOdds","isPendingTxn","txnButtonText","changeApproval","poolDeposit","Skeleton","error","sohmImg","PoolDeposit","props","dispatch","provider","address","chainID","quantity","setQuantity","newOdds","setNewOdds","rngCompleted","setRngCompleted","isAppLoading","state","app","loading","isMobileScreen","sohmBalance","account","balances","sohm","poolBalance","parseFloat","pool","poolAllowance","pooling","sohmPool","pendingTransactions","poolIsLocked","poolData","isRngRequested","onSeekApproval","token","networkID","onDeposit","action","isNaN","value","toString","hasAllowance","setMax","userBalanceAfterDeposit","userOdds","totalPoolDeposits","winners","updateDepositQuantity","e","target","setInfoTooltipMessage","marginTop","color","Intl","NumberFormat","format","propTypes","number","oneOfType","string","func"],"mappings":"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","sourcesContent":["import { useCallback, useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Box,\n  Button,\n  FormControl,\n  InputAdornment,\n  InputLabel,\n  OutlinedInput,\n  Typography,\n  useMediaQuery,\n} from \"@material-ui/core\";\nimport ConnectButton from \"../../components/ConnectButton.jsx\";\nimport { useWeb3Context } from \"../../hooks\";\nimport { getTokenImage } from \"src/helpers/index\";\nimport { trim } from \"src/helpers\";\nimport { calculateOdds } from \"../../helpers/33Together\";\nimport { isPendingTxn, txnButtonText } from \"../../slices/PendingTxnsSlice\";\nimport { changeApproval, poolDeposit } from \"../../slices/PoolThunk\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { error } from \"../../slices/MessagesSlice\";\n\nconst sohmImg = getTokenImage(\"sohm\");\n\nexport const PoolDeposit = props => {\n  const dispatch = useDispatch();\n  const { provider, address, chainID } = useWeb3Context();\n  const [quantity, setQuantity] = useState(0);\n  const [newOdds, setNewOdds] = useState(0);\n  const [rngCompleted, setRngCompleted] = useState(false);\n  const isAppLoading = useSelector(state => state.app.loading);\n  const isMobileScreen = useMediaQuery(\"(max-width: 513px)\");\n\n  const sohmBalance = useSelector(state => {\n    return state.account.balances && state.account.balances.sohm;\n  });\n\n  const poolBalance = useSelector(state => {\n    return state.account.balances && parseFloat(state.account.balances.pool);\n  });\n\n  const poolAllowance = useSelector(state => {\n    return state.account.pooling && state.account.pooling.sohmPool;\n  });\n\n  const pendingTransactions = useSelector(state => {\n    return state.pendingTransactions;\n  });\n\n  const poolIsLocked = useSelector(state => {\n    return state.poolData && state.poolData.isRngRequested;\n  });\n\n  const onSeekApproval = async token => {\n    await dispatch(changeApproval({ address, token, provider, networkID: chainID }));\n  };\n\n  const onDeposit = async action => {\n    // eslint-disable-next-line no-restricted-globals\n    if (isNaN(quantity) || quantity === 0 || quantity === \"\") {\n      // eslint-disable-next-line no-alert\n      dispatch(error(\"Please enter a value!\"));\n    } else {\n      await dispatch(poolDeposit({ address, action, value: quantity.toString(), provider, networkID: chainID }));\n    }\n  };\n\n  const hasAllowance = useCallback(() => {\n    return poolAllowance > 0;\n  }, [poolAllowance]);\n\n  const setMax = () => {\n    const value = parseFloat(sohmBalance);\n    setQuantity(value);\n    let userBalanceAfterDeposit = poolBalance + value;\n\n    let userOdds = calculateOdds(userBalanceAfterDeposit, props.totalPoolDeposits + value, props.winners);\n    setNewOdds(trim(userOdds, 4));\n  };\n\n  const updateDepositQuantity = e => {\n    const value = parseFloat(e.target.value);\n    setQuantity(value);\n    let userBalanceAfterDeposit = poolBalance + value;\n\n    let userOdds = calculateOdds(userBalanceAfterDeposit, props.totalPoolDeposits + value, props.winners);\n    setNewOdds(trim(userOdds, 4));\n  };\n\n  useEffect(() => {\n    props.setInfoTooltipMessage([\n      \"Deposit sOHM to win! Once deposited, you will receive a corresponding amount of 33T and be entered to win until your sOHM is withdrawn.\",\n    ]);\n  }, []);\n\n  if (poolIsLocked) {\n    return (\n      <Box display=\"flex\" alignItems=\"center\" className=\"pool-deposit-ui\" flexDirection=\"column\">\n        {/*<img src={Warning} className=\"w-10 sm:w-14 mx-auto mb-4\" />*/}\n        <Typography variant=\"h6\">This Prize Pool is unable to accept deposits at this time.</Typography>\n        <Typography variant=\"body1\" style={{ marginTop: \"0.5rem\" }}>\n          Deposits can be made once the prize has been awarded.\n        </Typography>\n        <Typography variant=\"body1\" style={{ marginTop: \"0.5rem\" }}>\n          Check back soon!\n        </Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <Box display=\"flex\" justifyContent=\"center\" className=\"pool-deposit-ui\">\n      {!address ? (\n        <ConnectButton />\n      ) : (\n        <Box className=\"deposit-container\">\n          <Box display=\"flex\" alignItems=\"center\" flexDirection={`${isMobileScreen ? \"column\" : \"row\"}`}>\n            <FormControl className=\"ohm-input\" variant=\"outlined\" color=\"primary\">\n              <InputLabel htmlFor=\"amount-input\"></InputLabel>\n              <OutlinedInput\n                id=\"amount-input\"\n                type=\"number\"\n                placeholder=\"Enter an amount\"\n                className=\"pool-input\"\n                value={quantity}\n                onChange={e => updateDepositQuantity(e)}\n                startAdornment={\n                  <InputAdornment position=\"start\">\n                    <div className=\"logo-holder\">{sohmImg}</div>\n                  </InputAdornment>\n                }\n                labelWidth={0}\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <Button variant=\"text\" onClick={setMax}>\n                      Max\n                    </Button>\n                  </InputAdornment>\n                }\n              />\n            </FormControl>\n\n            {address && hasAllowance(\"sohm\") ? (\n              <Button\n                className=\"pool-deposit-button\"\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={isPendingTxn(pendingTransactions, \"pool_deposit\")}\n                onClick={() => onDeposit(\"deposit\")}\n                fullWidth\n              >\n                {txnButtonText(pendingTransactions, \"pool_deposit\", \"Deposit sOHM\")}\n              </Button>\n            ) : (\n              <Button\n                className=\"pool-deposit-button\"\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={isPendingTxn(pendingTransactions, \"approve_pool_together\")}\n                onClick={() => onSeekApproval(\"sohm\")}\n              >\n                {txnButtonText(pendingTransactions, \"approve_pool_together\", \"Approve\")}\n              </Button>\n            )}\n          </Box>\n          {newOdds > 0 && quantity > 0 && (\n            <Box padding={1}>\n              <Typography variant=\"body2\" style={{ color: \"#33BB33\" }}>\n                Depositing {quantity} sOHM will increase odds of winning to 1 in {newOdds}&nbsp;\n              </Typography>\n            </Box>\n          )}\n          {/* NOTE (Appleseed): added this bc I kept losing track of which accounts I had sOHM in during testing */}\n          <div className={`stake-user-data`}>\n            <div className=\"data-row\">\n              <Typography variant=\"body1\" align=\"left\">\n                Your Staked Balance (depositable)\n              </Typography>\n              <Typography variant=\"body1\" align=\"right\">\n                {isAppLoading ? (\n                  <Skeleton width=\"80px\" />\n                ) : (\n                  <>{new Intl.NumberFormat(\"en-US\").format(sohmBalance)} sOHM</>\n                )}\n              </Typography>\n            </div>\n          </div>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nPoolDeposit.propTypes = {\n  totalPoolDeposits: PropTypes.number,\n  winners: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  setInfoTooltipMessage: PropTypes.func,\n};\n"]},"metadata":{},"sourceType":"module"}