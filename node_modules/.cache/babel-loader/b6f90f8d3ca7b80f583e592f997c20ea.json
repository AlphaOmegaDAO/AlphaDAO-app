{"ast":null,"code":"var _jsxFileName = \"C:\\\\arete\\\\AlphaDAO-react\\\\src\\\\helpers\\\\index.tsx\";\nimport { EPOCH_INTERVAL, BLOCK_RATE_SECONDS, addresses } from \"../constants\";\nimport { ethers } from \"ethers\";\nimport axios from \"axios\";\nimport { abi as PairContractABI } from \"../abi/PairContract.json\";\nimport { abi as RedeemHelperABI } from \"../abi/RedeemHelper.json\";\nimport { SvgIcon } from \"@material-ui/core\";\nimport { ReactComponent as OhmImg } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/tokens/token_OHM.svg\";\nimport { ReactComponent as SOhmImg } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/tokens/token_sOHM.svg\";\nimport { guru_dai } from \"./AllBonds\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport async function getMarketPrice({\n  networkID,\n  provider\n}) {\n  if (networkID !== 80001 && networkID !== 137) return 0;\n  const guru_dai_address = guru_dai.getAddressForReserve(networkID);\n  const pairContract = new ethers.Contract(guru_dai_address, PairContractABI, provider);\n  const reserves = await pairContract.getReserves();\n  console.log(`reserves ${reserves}`);\n  const marketPrice = Number(reserves[1].toString()) / Number(reserves[0].toString());\n  return marketPrice;\n}\nexport async function getTokenPrice(tokenId = \"guru\") {\n  const resp = await axios.get(`https://api.coingecko.com/api/v3/simple/price?ids=${tokenId}&vs_currencies=usd`);\n  let tokenPrice = resp.data[tokenId].usd;\n  return tokenPrice;\n}\nexport function shorten(str) {\n  if (str.length < 10) return str;\n  return `${str.slice(0, 6)}...${str.slice(str.length - 4)}`;\n}\nexport function formatCurrency(c, precision = 0) {\n  return new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    maximumFractionDigits: precision,\n    minimumFractionDigits: precision\n  }).format(c);\n}\nexport function trim(number = 0, precision = 0) {\n  // why would number ever be undefined??? what are we trimming?\n  const array = number.toString().split(\".\");\n  if (array.length === 1) return number.toString();\n  if (precision === 0) return array[0].toString();\n  const poppedNumber = array.pop() || \"0\";\n  array.push(poppedNumber.substring(0, precision));\n  const trimmedNumber = array.join(\".\");\n  return trimmedNumber;\n}\nexport function getRebaseBlock(currentBlock) {\n  return currentBlock + EPOCH_INTERVAL - currentBlock % EPOCH_INTERVAL;\n}\nexport function secondsUntilBlock(startBlock, endBlock) {\n  const blocksAway = endBlock - startBlock;\n  const secondsAway = blocksAway * BLOCK_RATE_SECONDS;\n  return secondsAway;\n}\nexport function prettyVestingPeriod(currentBlock, vestingBlock) {\n  if (vestingBlock === 0) {\n    return \"\";\n  }\n\n  const seconds = secondsUntilBlock(currentBlock, vestingBlock);\n\n  if (seconds < 0) {\n    return \"Fully Vested\";\n  }\n\n  return prettifySeconds(seconds);\n}\nexport function prettifySeconds(seconds, resolution) {\n  if (seconds !== 0 && !seconds) {\n    return \"\";\n  }\n\n  const d = Math.floor(seconds / (3600 * 24));\n  const h = Math.floor(seconds % (3600 * 24) / 3600);\n  const m = Math.floor(seconds % 3600 / 60);\n\n  if (resolution === \"day\") {\n    return d + (d == 1 ? \" day\" : \" days\");\n  }\n\n  const dDisplay = d > 0 ? d + (d == 1 ? \" day, \" : \" days, \") : \"\";\n  const hDisplay = h > 0 ? h + (h == 1 ? \" hr, \" : \" hrs, \") : \"\";\n  const mDisplay = m > 0 ? m + (m == 1 ? \" min\" : \" mins\") : \"\";\n  let result = dDisplay + hDisplay + mDisplay;\n\n  if (mDisplay === \"\") {\n    result = result.slice(0, result.length - 2);\n  }\n\n  return result;\n}\n\nfunction getSohmTokenImage() {\n  return /*#__PURE__*/_jsxDEV(SvgIcon, {\n    component: SOhmImg,\n    viewBox: \"0 0 100 100\",\n    style: {\n      height: \"1rem\",\n      width: \"1rem\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 10\n  }, this);\n}\n\nexport function getOhmTokenImage(w, h) {\n  const height = h == null ? \"32px\" : `${h}px`;\n  const width = w == null ? \"32px\" : `${w}px`;\n  return /*#__PURE__*/_jsxDEV(SvgIcon, {\n    component: OhmImg,\n    viewBox: \"0 0 32 32\",\n    style: {\n      height,\n      width\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 10\n  }, this);\n}\nexport function getTokenImage(name) {\n  if (name === \"ohm\") return getOhmTokenImage();\n  if (name === \"sohm\") return getSohmTokenImage();\n} // TS-REFACTOR-NOTE - Used for:\n// AccountSlice.ts, AppSlice.ts, LusdSlice.ts\n\nexport function setAll(state, properties) {\n  if (!properties) return;\n  const props = Object.keys(properties);\n  props.forEach(key => {\n    state[key] = properties[key];\n  });\n}\nexport function contractForRedeemHelper({\n  networkID,\n  provider\n}) {\n  return new ethers.Contract(addresses[networkID].REDEEM_HELPER_ADDRESS, RedeemHelperABI, provider);\n}\n/**\n * returns false if SafetyCheck has fired in this Session. True otherwise\n * @returns boolean\n */\n\nexport const shouldTriggerSafetyCheck = () => {\n  const _storage = window.sessionStorage;\n  const _safetyCheckKey = \"-oly-safety\"; // check if sessionStorage item exists for SafetyCheck\n\n  if (!_storage.getItem(_safetyCheckKey)) {\n    _storage.setItem(_safetyCheckKey, \"true\");\n\n    return true;\n  }\n\n  return false;\n};\n/**\n * returns unix timestamp for x minutes ago\n * @param x minutes as a number\n */\n\nexport const minutesAgo = x => {\n  const now = new Date().getTime();\n  return new Date(now - x * 60000).getTime();\n};\n/**\n * subtracts two dates for use in 33-together timer\n * param (Date) dateA is the ending date object\n * param (Date) dateB is the current date object\n * returns days, hours, minutes, seconds\n * NOTE: this func previously used parseInt() to convert to whole numbers, however, typescript doesn't like\n * ... using parseInt on number params. It only allows parseInt on string params. So we converted usage to\n * ... Math.trunc which accomplishes the same result as parseInt.\n */\n\nexport const subtractDates = (dateA, dateB) => {\n  let msA = dateA.getTime();\n  let msB = dateB.getTime();\n  let diff = msA - msB;\n  let days = 0;\n\n  if (diff >= 86400000) {\n    days = Math.trunc(diff / 86400000);\n    diff -= days * 86400000;\n  }\n\n  let hours = 0;\n\n  if (days || diff >= 3600000) {\n    hours = Math.trunc(diff / 3600000);\n    diff -= hours * 3600000;\n  }\n\n  let minutes = 0;\n\n  if (hours || diff >= 60000) {\n    minutes = Math.trunc(diff / 60000);\n    diff -= minutes * 60000;\n  }\n\n  let seconds = 0;\n\n  if (minutes || diff >= 1000) {\n    seconds = Math.trunc(diff / 1000);\n  }\n\n  return {\n    days,\n    hours,\n    minutes,\n    seconds\n  };\n};","map":{"version":3,"sources":["C:/arete/AlphaDAO-react/src/helpers/index.tsx"],"names":["EPOCH_INTERVAL","BLOCK_RATE_SECONDS","addresses","ethers","axios","abi","PairContractABI","RedeemHelperABI","SvgIcon","guru_dai","getMarketPrice","networkID","provider","guru_dai_address","getAddressForReserve","pairContract","Contract","reserves","getReserves","console","log","marketPrice","Number","toString","getTokenPrice","tokenId","resp","get","tokenPrice","data","usd","shorten","str","length","slice","formatCurrency","c","precision","Intl","NumberFormat","style","currency","maximumFractionDigits","minimumFractionDigits","format","trim","number","array","split","poppedNumber","pop","push","substring","trimmedNumber","join","getRebaseBlock","currentBlock","secondsUntilBlock","startBlock","endBlock","blocksAway","secondsAway","prettyVestingPeriod","vestingBlock","seconds","prettifySeconds","resolution","d","Math","floor","h","m","dDisplay","hDisplay","mDisplay","result","getSohmTokenImage","SOhmImg","height","width","getOhmTokenImage","w","OhmImg","getTokenImage","name","setAll","state","properties","props","Object","keys","forEach","key","contractForRedeemHelper","REDEEM_HELPER_ADDRESS","shouldTriggerSafetyCheck","_storage","window","sessionStorage","_safetyCheckKey","getItem","setItem","minutesAgo","x","now","Date","getTime","subtractDates","dateA","dateB","msA","msB","diff","days","trunc","hours","minutes"],"mappings":"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","sourcesContent":["import { EPOCH_INTERVAL, BLOCK_RATE_SECONDS, addresses } from \"../constants\";\nimport { BigNumber, ethers } from \"ethers\";\nimport axios from \"axios\";\nimport { abi as PairContractABI } from \"../abi/PairContract.json\";\nimport { abi as RedeemHelperABI } from \"../abi/RedeemHelper.json\";\n\nimport { SvgIcon } from \"@material-ui/core\";\nimport { ReactComponent as OhmImg } from \"../assets/tokens/token_OHM.svg\";\nimport { ReactComponent as SOhmImg } from \"../assets/tokens/token_sOHM.svg\";\n\nimport { guru_dai } from \"./AllBonds\";\nimport { JsonRpcSigner, StaticJsonRpcProvider } from \"@ethersproject/providers\";\nimport { IBaseAsyncThunk } from \"src/slices/interfaces\";\nimport { PairContract, RedeemHelper } from \"../typechain\";\n\nexport async function getMarketPrice({ networkID, provider }: IBaseAsyncThunk) {\n  if (networkID !== 80001 && networkID !== 137) return 0;\n  const guru_dai_address = guru_dai.getAddressForReserve(networkID);\n  const pairContract = new ethers.Contract(guru_dai_address, PairContractABI, provider) as PairContract;\n  const reserves = await pairContract.getReserves();\n  console.log(`reserves ${reserves}`);\n  const marketPrice = Number(reserves[1].toString()) / Number(reserves[0].toString());\n\n  return marketPrice;\n}\n\nexport async function getTokenPrice(tokenId = \"guru\") {\n  const resp = await axios.get(`https://api.coingecko.com/api/v3/simple/price?ids=${tokenId}&vs_currencies=usd`);\n  let tokenPrice: number = resp.data[tokenId].usd;\n  return tokenPrice;\n}\n\nexport function shorten(str: string) {\n  if (str.length < 10) return str;\n  return `${str.slice(0, 6)}...${str.slice(str.length - 4)}`;\n}\n\nexport function formatCurrency(c: number, precision = 0) {\n  return new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    maximumFractionDigits: precision,\n    minimumFractionDigits: precision,\n  }).format(c);\n}\n\nexport function trim(number = 0, precision = 0) {\n  // why would number ever be undefined??? what are we trimming?\n  const array = number.toString().split(\".\");\n  if (array.length === 1) return number.toString();\n  if (precision === 0) return array[0].toString();\n\n  const poppedNumber = array.pop() || \"0\";\n  array.push(poppedNumber.substring(0, precision));\n  const trimmedNumber = array.join(\".\");\n  return trimmedNumber;\n}\n\nexport function getRebaseBlock(currentBlock: number) {\n  return currentBlock + EPOCH_INTERVAL - (currentBlock % EPOCH_INTERVAL);\n}\n\nexport function secondsUntilBlock(startBlock: number, endBlock: number) {\n  const blocksAway = endBlock - startBlock;\n  const secondsAway = blocksAway * BLOCK_RATE_SECONDS;\n\n  return secondsAway;\n}\n\nexport function prettyVestingPeriod(currentBlock: number, vestingBlock: number) {\n  if (vestingBlock === 0) {\n    return \"\";\n  }\n\n  const seconds = secondsUntilBlock(currentBlock, vestingBlock);\n  if (seconds < 0) {\n    return \"Fully Vested\";\n  }\n  return prettifySeconds(seconds);\n}\n\nexport function prettifySeconds(seconds: number, resolution?: string) {\n  if (seconds !== 0 && !seconds) {\n    return \"\";\n  }\n\n  const d = Math.floor(seconds / (3600 * 24));\n  const h = Math.floor((seconds % (3600 * 24)) / 3600);\n  const m = Math.floor((seconds % 3600) / 60);\n\n  if (resolution === \"day\") {\n    return d + (d == 1 ? \" day\" : \" days\");\n  }\n\n  const dDisplay = d > 0 ? d + (d == 1 ? \" day, \" : \" days, \") : \"\";\n  const hDisplay = h > 0 ? h + (h == 1 ? \" hr, \" : \" hrs, \") : \"\";\n  const mDisplay = m > 0 ? m + (m == 1 ? \" min\" : \" mins\") : \"\";\n\n  let result = dDisplay + hDisplay + mDisplay;\n  if (mDisplay === \"\") {\n    result = result.slice(0, result.length - 2);\n  }\n\n  return result;\n}\n\nfunction getSohmTokenImage() {\n  return <SvgIcon component={SOhmImg} viewBox=\"0 0 100 100\" style={{ height: \"1rem\", width: \"1rem\" }} />;\n}\n\nexport function getOhmTokenImage(w?: number, h?: number) {\n  const height = h == null ? \"32px\" : `${h}px`;\n  const width = w == null ? \"32px\" : `${w}px`;\n  return <SvgIcon component={OhmImg} viewBox=\"0 0 32 32\" style={{ height, width }} />;\n}\n\nexport function getTokenImage(name: string) {\n  if (name === \"ohm\") return getOhmTokenImage();\n  if (name === \"sohm\") return getSohmTokenImage();\n}\n\n// TS-REFACTOR-NOTE - Used for:\n// AccountSlice.ts, AppSlice.ts, LusdSlice.ts\nexport function setAll(state: any, properties: any) {\n  if (!properties) return;\n  const props = Object.keys(properties);\n  props.forEach(key => {\n    state[key] = properties[key];\n  });\n}\n\nexport function contractForRedeemHelper({\n  networkID,\n  provider,\n}: {\n  networkID: number;\n  provider: StaticJsonRpcProvider | JsonRpcSigner;\n}) {\n  return new ethers.Contract(\n    addresses[networkID].REDEEM_HELPER_ADDRESS as string,\n    RedeemHelperABI,\n    provider,\n  ) as RedeemHelper;\n}\n\n/**\n * returns false if SafetyCheck has fired in this Session. True otherwise\n * @returns boolean\n */\nexport const shouldTriggerSafetyCheck = () => {\n  const _storage = window.sessionStorage;\n  const _safetyCheckKey = \"-oly-safety\";\n  // check if sessionStorage item exists for SafetyCheck\n  if (!_storage.getItem(_safetyCheckKey)) {\n    _storage.setItem(_safetyCheckKey, \"true\");\n    return true;\n  }\n  return false;\n};\n\n/**\n * returns unix timestamp for x minutes ago\n * @param x minutes as a number\n */\nexport const minutesAgo = (x: number) => {\n  const now = new Date().getTime();\n  return new Date(now - x * 60000).getTime();\n};\n\n/**\n * subtracts two dates for use in 33-together timer\n * param (Date) dateA is the ending date object\n * param (Date) dateB is the current date object\n * returns days, hours, minutes, seconds\n * NOTE: this func previously used parseInt() to convert to whole numbers, however, typescript doesn't like\n * ... using parseInt on number params. It only allows parseInt on string params. So we converted usage to\n * ... Math.trunc which accomplishes the same result as parseInt.\n */\nexport const subtractDates = (dateA: Date, dateB: Date) => {\n  let msA: number = dateA.getTime();\n  let msB: number = dateB.getTime();\n\n  let diff: number = msA - msB;\n\n  let days: number = 0;\n  if (diff >= 86400000) {\n    days = Math.trunc(diff / 86400000);\n    diff -= days * 86400000;\n  }\n\n  let hours: number = 0;\n  if (days || diff >= 3600000) {\n    hours = Math.trunc(diff / 3600000);\n    diff -= hours * 3600000;\n  }\n\n  let minutes: number = 0;\n  if (hours || diff >= 60000) {\n    minutes = Math.trunc(diff / 60000);\n    diff -= minutes * 60000;\n  }\n\n  let seconds: number = 0;\n  if (minutes || diff >= 1000) {\n    seconds = Math.trunc(diff / 1000);\n  }\n  return {\n    days,\n    hours,\n    minutes,\n    seconds,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}