{"ast":null,"code":"import { EnvHelper } from \"./Environment\";\n/**\n * Obtain country from IP address\n * @returns the country name or an empty string\n */\n\nasync function countryLookup() {\n  // Determine the country the user is from, based on IP\n  // Geoapify offers 3000 lookups/day, so we should be fine\n  var apiKey = EnvHelper.getGeoapifyAPIKey();\n  if (!apiKey) return \"\";\n  var response = await fetch(\"https://api.geoapify.com/v1/ipinfo?apiKey=\" + apiKey, {\n    method: \"GET\"\n  });\n\n  if (!response.ok) {\n    console.error(\"Unable to determine country from IP lookup: \" + response.body);\n    return \"\";\n  }\n\n  var json = await response.json();\n  return json.country.name;\n} // Pushing data to segment analytics\n\n\nexport function segmentUA(data) {\n  const analytics = window.analytics = window.analytics;\n  countryLookup().then(country => data.country = country); // NOTE (appleseed): the analytics object may not exist (if there is no SEGMENT_API_KEY)\n  // Passing in combined data directly so as not to have a nested object\n\n  try {\n    analytics.track(data.type, data, {\n      context: {\n        ip: \"0.0.0.0\"\n      }\n    });\n  } catch (e) {\n    console.log(\"segmentAnalytics\", e);\n  }\n}","map":{"version":3,"sources":["C:/arete/AlphaDAO-react/src/helpers/userAnalyticHelpers.js"],"names":["EnvHelper","countryLookup","apiKey","getGeoapifyAPIKey","response","fetch","method","ok","console","error","body","json","country","name","segmentUA","data","analytics","window","then","track","type","context","ip","e","log"],"mappings":"AAAA,SAASA,SAAT,QAA0B,eAA1B;AAEA;AACA;AACA;AACA;;AACA,eAAeC,aAAf,GAA+B;AAC7B;AACA;AACA,MAAIC,MAAM,GAAGF,SAAS,CAACG,iBAAV,EAAb;AAEA,MAAI,CAACD,MAAL,EAAa,OAAO,EAAP;AAEb,MAAIE,QAAQ,GAAG,MAAMC,KAAK,CAAC,+CAA+CH,MAAhD,EAAwD;AAChFI,IAAAA,MAAM,EAAE;AADwE,GAAxD,CAA1B;;AAIA,MAAI,CAACF,QAAQ,CAACG,EAAd,EAAkB;AAChBC,IAAAA,OAAO,CAACC,KAAR,CAAc,iDAAiDL,QAAQ,CAACM,IAAxE;AACA,WAAO,EAAP;AACD;;AAED,MAAIC,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAT,EAAjB;AACA,SAAOA,IAAI,CAACC,OAAL,CAAaC,IAApB;AACD,C,CAED;;;AACA,OAAO,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;AAC9B,QAAMC,SAAS,GAAIC,MAAM,CAACD,SAAP,GAAmBC,MAAM,CAACD,SAA7C;AACAf,EAAAA,aAAa,GAAGiB,IAAhB,CAAqBN,OAAO,IAAKG,IAAI,CAACH,OAAL,GAAeA,OAAhD,EAF8B,CAI9B;AACA;;AACA,MAAI;AACFI,IAAAA,SAAS,CAACG,KAAV,CAAgBJ,IAAI,CAACK,IAArB,EAA2BL,IAA3B,EAAiC;AAAEM,MAAAA,OAAO,EAAE;AAAEC,QAAAA,EAAE,EAAE;AAAN;AAAX,KAAjC;AACD,GAFD,CAEE,OAAOC,CAAP,EAAU;AACVf,IAAAA,OAAO,CAACgB,GAAR,CAAY,kBAAZ,EAAgCD,CAAhC;AACD;AACF","sourcesContent":["import { EnvHelper } from \"./Environment\";\n\n/**\n * Obtain country from IP address\n * @returns the country name or an empty string\n */\nasync function countryLookup() {\n  // Determine the country the user is from, based on IP\n  // Geoapify offers 3000 lookups/day, so we should be fine\n  var apiKey = EnvHelper.getGeoapifyAPIKey();\n\n  if (!apiKey) return \"\";\n\n  var response = await fetch(\"https://api.geoapify.com/v1/ipinfo?apiKey=\" + apiKey, {\n    method: \"GET\",\n  });\n\n  if (!response.ok) {\n    console.error(\"Unable to determine country from IP lookup: \" + response.body);\n    return \"\";\n  }\n\n  var json = await response.json();\n  return json.country.name;\n}\n\n// Pushing data to segment analytics\nexport function segmentUA(data) {\n  const analytics = (window.analytics = window.analytics);\n  countryLookup().then(country => (data.country = country));\n\n  // NOTE (appleseed): the analytics object may not exist (if there is no SEGMENT_API_KEY)\n  // Passing in combined data directly so as not to have a nested object\n  try {\n    analytics.track(data.type, data, { context: { ip: \"0.0.0.0\" } });\n  } catch (e) {\n    console.log(\"segmentAnalytics\", e);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}