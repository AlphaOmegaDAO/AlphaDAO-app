{"ast":null,"code":"// import apollo from \"../../lib/apolloClient\";\n// Graph Explorer: https://thegraph.com/hosted-service/subgraph/pooltogether/rinkeby-v3_4_3\nexport const poolDataQuery = address => {\n  return `\n  query {\n    prizePool(id: \"${address.toLowerCase()}\") {\n      id\n      owner\n      deactivated\n      currentPrizeId\n      currentState\n      cumulativePrizeGross\n      cumulativePrizeNet\n      cumulativePrizeReserveFee\n      liquidityCap\n      prizeStrategy {\n        multipleWinners {\n          numberOfWinners\n          prizePeriodSeconds\n          prizePeriodStartedAt\n          prizePeriodEndAt\n          externalErc20Awards {\n            name\n            symbol\n            decimals\n            balanceAwarded\n          }\n        }\n      }\n      controlledTokens {\n        id\n        name\n        totalSupply\n        numberOfHolders\n      }\n    }\n  }\n  `;\n};\nexport const poolTimeQuery = `\nquery {\n  prizeStrategy(id: \"0xeeb552c4d5e155e50ee3f7402ed379bf72e36f23\") {\n    multipleWinners {\n      numberOfWinners\n      prizePeriodSeconds\n      prizePeriodStartedAt\n      prizePeriodEndAt\n      externalErc20Awards {\n        name\n        symbol\n        decimals\n        balanceAwarded\n      }\n    }\n  }\n}`;\n/**\n * returns a Graph Query string for prizePool Award History for a given user.\n * @param {*} poolAddress\n * @param {*} userAddress\n * @param {*} tokenAddress\n * @returns string\n */\n\nexport const yourAwardsQuery = (poolAddress, userAddress, tokenAddress) => {\n  let query = `\n  query {\n      prizePool(id: \"${poolAddress.toLowerCase()}\") {\n        prizes (where:{\n          awardedOperator: \"${userAddress.toLowerCase()}\"\n        }){\n          id\n          awardedOperator\n          awardedControlledTokens (where:{\n            token: \"${tokenAddress.toLowerCase()}\"\n          }) {\n            amount\n          }\n          prizePeriodStartedTimestamp\n          awardedBlock\n          awardedTimestamp\n        }\n    }\n  }\n  `;\n  return query;\n};","map":{"version":3,"sources":["C:/arete/AlphaDAO-react/src/views/33Together/poolData.js"],"names":["poolDataQuery","address","toLowerCase","poolTimeQuery","yourAwardsQuery","poolAddress","userAddress","tokenAddress","query"],"mappings":"AAAA;AAEA;AACA,OAAO,MAAMA,aAAa,GAAGC,OAAO,IAAI;AACtC,SAAQ;AACV;AACA,qBAAqBA,OAAO,CAACC,WAAR,EAAsB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAlCE;AAmCD,CApCM;AAsCP,OAAO,MAAMC,aAAa,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAhBO;AAkBP;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,eAAe,GAAG,CAACC,WAAD,EAAcC,WAAd,EAA2BC,YAA3B,KAA4C;AACzE,MAAIC,KAAK,GAAI;AACf;AACA,uBAAuBH,WAAW,CAACH,WAAZ,EAA0B;AACjD;AACA,8BAA8BI,WAAW,CAACJ,WAAZ,EAA0B;AACxD;AACA;AACA;AACA;AACA,sBAAsBK,YAAY,CAACL,WAAb,EAA2B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAnBE;AAoBA,SAAOM,KAAP;AACD,CAtBM","sourcesContent":["// import apollo from \"../../lib/apolloClient\";\n\n// Graph Explorer: https://thegraph.com/hosted-service/subgraph/pooltogether/rinkeby-v3_4_3\nexport const poolDataQuery = address => {\n  return `\n  query {\n    prizePool(id: \"${address.toLowerCase()}\") {\n      id\n      owner\n      deactivated\n      currentPrizeId\n      currentState\n      cumulativePrizeGross\n      cumulativePrizeNet\n      cumulativePrizeReserveFee\n      liquidityCap\n      prizeStrategy {\n        multipleWinners {\n          numberOfWinners\n          prizePeriodSeconds\n          prizePeriodStartedAt\n          prizePeriodEndAt\n          externalErc20Awards {\n            name\n            symbol\n            decimals\n            balanceAwarded\n          }\n        }\n      }\n      controlledTokens {\n        id\n        name\n        totalSupply\n        numberOfHolders\n      }\n    }\n  }\n  `;\n};\n\nexport const poolTimeQuery = `\nquery {\n  prizeStrategy(id: \"0xeeb552c4d5e155e50ee3f7402ed379bf72e36f23\") {\n    multipleWinners {\n      numberOfWinners\n      prizePeriodSeconds\n      prizePeriodStartedAt\n      prizePeriodEndAt\n      externalErc20Awards {\n        name\n        symbol\n        decimals\n        balanceAwarded\n      }\n    }\n  }\n}`;\n\n/**\n * returns a Graph Query string for prizePool Award History for a given user.\n * @param {*} poolAddress\n * @param {*} userAddress\n * @param {*} tokenAddress\n * @returns string\n */\nexport const yourAwardsQuery = (poolAddress, userAddress, tokenAddress) => {\n  let query = `\n  query {\n      prizePool(id: \"${poolAddress.toLowerCase()}\") {\n        prizes (where:{\n          awardedOperator: \"${userAddress.toLowerCase()}\"\n        }){\n          id\n          awardedOperator\n          awardedControlledTokens (where:{\n            token: \"${tokenAddress.toLowerCase()}\"\n          }) {\n            amount\n          }\n          prizePeriodStartedTimestamp\n          awardedBlock\n          awardedTimestamp\n        }\n    }\n  }\n  `;\n  return query;\n};\n"]},"metadata":{},"sourceType":"module"}